<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfluxDB.Client</name>
    </assembly>
    <members>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.CreateAuthorizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Permission},System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="organization">the owner of the authorization</param>
            <param name="permissions">the permissions for the authorization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.CreateAuthorizationAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Permission},System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="orgId">the owner id of the authorization</param>
            <param name="permissions">the permissions for the authorization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.CreateAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="authorization">authorization to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.CreateAuthorizationAsync(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="authorization">authorization to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.UpdateAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Updates the status of the authorization. Useful for setting an authorization to inactive or active.
            </summary>
            <param name="authorization">the authorization with updated status</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the updated authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.DeleteAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization.
            </summary>
            <param name="authorization">authorization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>authorization deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.DeleteAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization.
            </summary>
            <param name="authorizationId">ID of authorization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>authorization deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.CloneAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Clone an authorization.
            </summary>
            <param name="authorizationId">ID of authorization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.CloneAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Clone an authorization.
            </summary>
            <param name="authorization">authorization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.FindAuthorizationByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization.
            </summary>
            <param name="authorizationId">ID of authorization to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>authorization details</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.FindAuthorizationsAsync(System.Threading.CancellationToken)">
            <summary>
            List all authorizations.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all authorizations.</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.FindAuthorizationsByUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            List all authorizations belonging to specified user.
            </summary>
            <param name="user">user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.FindAuthorizationsByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations belonging to specified user.
            </summary>
            <param name="userId">ID of user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.IAuthorizationsApi.FindAuthorizationsByUserNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations belonging to specified user.
            </summary>
            <param name="userName">Name of User</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.CreateAuthorizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Permission},System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="organization">the owner of the authorization</param>
            <param name="permissions">the permissions for the authorization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.CreateAuthorizationAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Permission},System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="orgId">the owner id of the authorization</param>
            <param name="permissions">the permissions for the authorization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.CreateAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="authorization">authorization to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.CreateAuthorizationAsync(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.Threading.CancellationToken)">
            <summary>
            Create an authorization with defined permissions.
            </summary>
            <param name="authorization">authorization to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the created authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.UpdateAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Updates the status of the authorization. Useful for setting an authorization to inactive or active.
            </summary>
            <param name="authorization">the authorization with updated status</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the updated authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.DeleteAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization.
            </summary>
            <param name="authorization">authorization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>authorization deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.DeleteAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization.
            </summary>
            <param name="authorizationId">ID of authorization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>authorization deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.CloneAuthorizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Clone an authorization.
            </summary>
            <param name="authorizationId">ID of authorization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.CloneAuthorizationAsync(InfluxDB.Client.Api.Domain.Authorization,System.Threading.CancellationToken)">
            <summary>
            Clone an authorization.
            </summary>
            <param name="authorization">authorization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.FindAuthorizationByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization.
            </summary>
            <param name="authorizationId">ID of authorization to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>authorization details</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.FindAuthorizationsAsync(System.Threading.CancellationToken)">
            <summary>
            List all authorizations.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all authorizations.</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.FindAuthorizationsByUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            List all authorizations belonging to specified user.
            </summary>
            <param name="user">user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.FindAuthorizationsByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations belonging to specified user.
            </summary>
            <param name="userId">ID of user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.AuthorizationsApi.FindAuthorizationsByUserNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations belonging to specified user.
            </summary>
            <param name="userName">Name of User</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CreateBucketAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="bucket">bucket to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CreateBucketAsync(InfluxDB.Client.Api.Domain.PostBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="bucket">bucket to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CreateBucketAsync(System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="organization">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CreateBucketAsync(System.String,InfluxDB.Client.Api.Domain.BucketRetentionRules,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="bucketRetentionRules">retention rule of the bucket</param>
            <param name="organization">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CreateBucketAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="orgId">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CreateBucketAsync(System.String,InfluxDB.Client.Api.Domain.BucketRetentionRules,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="bucketRetentionRules">retention rule of the bucket</param>
            <param name="orgId">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.UpdateBucketAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Update a bucket name and retention.
            </summary>
            <param name="bucket">bucket update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>bucket updated</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteBucketAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="bucketId">ID of bucket to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteBucketAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="bucket">bucket to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CloneBucketAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a bucket.
            </summary>
            <param name="clonedName">name of cloned bucket</param>
            <param name="bucketId">ID of bucket to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.CloneBucketAsync(System.String,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Clone a bucket.
            </summary>
            <param name="clonedName">name of cloned bucket</param>
            <param name="bucket">bucket to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.FindBucketByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket.
            </summary>
            <param name="bucketId">ID of bucket to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Bucket Details</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.FindBucketByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket.
            </summary>
            <param name="bucketName">Name of bucket to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Bucket Details</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.FindBucketsByOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List all buckets for specified organization.
            </summary>
            <param name="organization">filter buckets to a specific organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.FindBucketsByOrgNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets for specified orgId.
            </summary>
            <param name="orgName">filter buckets to a specific organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.FindBucketsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets.
            </summary>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">The last resource ID from which to seek from (but not including). This is to be used instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.FindBucketsAsync(InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            List all buckets.
            </summary>
            <param name="findOptions">the find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            List all members of a bucket.
            </summary>
            <param name="bucket">bucket of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of a bucket.
            </summary>
            <param name="bucketId">ID of bucket to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Add a bucket member.
            </summary>
            <param name="member">the member of a bucket</param>
            <param name="bucket">the bucket of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a bucket member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a bucket.
            </summary>
            <param name="member">the member of a bucket</param>
            <param name="bucket">the bucket of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a bucket.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket.
            </summary>
            <param name="bucket">bucket of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket.
            </summary>
            <param name="bucketId">ID of a bucket to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Add a bucket owner.
            </summary>
            <param name="owner">the owner of a bucket</param>
            <param name="bucket">the bucket of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a bucket owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a bucket.
            </summary>
            <param name="owner">the owner of a bucket</param>
            <param name="bucket">the bucket of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a bucket.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            List all labels of a bucket.
            </summary>
            <param name="bucket">bucket of the labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels of a bucket.
            </summary>
            <param name="bucketId">ID of a bucket to get labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Add a bucket label.
            </summary>
            <param name="label">the label of a bucket</param>
            <param name="bucket">the bucket of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a bucket label.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a bucket.
            </summary>
            <param name="label">the label of a bucket</param>
            <param name="bucket">the bucket of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IBucketsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a bucket.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CreateBucketAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="bucket">bucket to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CreateBucketAsync(InfluxDB.Client.Api.Domain.PostBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="bucket">bucket to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CreateBucketAsync(System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="organization">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CreateBucketAsync(System.String,InfluxDB.Client.Api.Domain.BucketRetentionRules,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="bucketRetentionRules">retention rule of the bucket</param>
            <param name="organization">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CreateBucketAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="orgId">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CreateBucketAsync(System.String,InfluxDB.Client.Api.Domain.BucketRetentionRules,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new bucket and sets <see cref="P:InfluxDB.Client.Api.Domain.Bucket.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the bucket</param>
            <param name="bucketRetentionRules">retention rule of the bucket</param>
            <param name="orgId">owner of the bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.UpdateBucketAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Update a bucket name and retention.
            </summary>
            <param name="bucket">bucket update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>bucket updated</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteBucketAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="bucketId">ID of bucket to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteBucketAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket.
            </summary>
            <param name="bucket">bucket to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CloneBucketAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a bucket.
            </summary>
            <param name="clonedName">name of cloned bucket</param>
            <param name="bucketId">ID of bucket to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.CloneBucketAsync(System.String,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Clone a bucket.
            </summary>
            <param name="clonedName">name of cloned bucket</param>
            <param name="bucket">bucket to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.FindBucketByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket.
            </summary>
            <param name="bucketId">ID of bucket to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Bucket Details</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.FindBucketByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket.
            </summary>
            <param name="bucketName">Name of bucket to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Bucket Details</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.FindBucketsByOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List all buckets for specified organization.
            </summary>
            <param name="organization">filter buckets to a specific organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.FindBucketsByOrgNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets for specified orgId.
            </summary>
            <param name="orgName">filter buckets to a specific organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.FindBucketsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets.
            </summary>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">The last resource ID from which to seek from (but not including). This is to be used instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.FindBucketsAsync(InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            List all buckets.
            </summary>
            <param name="findOptions">the find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            List all members of a bucket.
            </summary>
            <param name="bucket">bucket of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of a bucket.
            </summary>
            <param name="bucketId">ID of bucket to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Add a bucket member.
            </summary>
            <param name="member">the member of a bucket</param>
            <param name="bucket">the bucket of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a bucket member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a bucket.
            </summary>
            <param name="member">the member of a bucket</param>
            <param name="bucket">the bucket of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a bucket.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket.
            </summary>
            <param name="bucket">bucket of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket.
            </summary>
            <param name="bucketId">ID of a bucket to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Add a bucket owner.
            </summary>
            <param name="owner">the owner of a bucket</param>
            <param name="bucket">the bucket of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a bucket owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a bucket.
            </summary>
            <param name="owner">the owner of a bucket</param>
            <param name="bucket">the bucket of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a bucket.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            List all labels of a bucket.
            </summary>
            <param name="bucket">bucket of the labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels of a bucket.
            </summary>
            <param name="bucketId">ID of a bucket to get labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Add a bucket label.
            </summary>
            <param name="label">the label of a bucket</param>
            <param name="bucket">the bucket of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a bucket label.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Bucket,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a bucket.
            </summary>
            <param name="label">the label of a bucket</param>
            <param name="bucket">the bucket of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.BucketsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a bucket.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="bucketId">the ID of a bucket</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.CreateThresholdCheckAsync(System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Threshold,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Threshold check.
            </summary>
            <param name="name">the check name</param>
            <param name="query">The text of the flux query</param>
            <param name="every">Check repetition interval</param>
            <param name="messageTemplate">template that is used to generate and write a status message</param>
            <param name="threshold">condition for that specific status</param>
            <param name="orgId">the organization that owns this check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ThresholdCheck created</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.CreateThresholdCheckAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Threshold},System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Threshold check.
            </summary>
            <param name="name">the check name</param>
            <param name="query">The text of the flux query</param>
            <param name="every">Check repetition interval</param>
            <param name="messageTemplate">template that is used to generate and write a status message</param>
            <param name="thresholds">conditions for that specific status</param>
            <param name="orgId">the organization that owns this check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ThresholdCheck created</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.CreateDeadmanCheckAsync(System.String,System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.CheckStatusLevel,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Deadman check.
            </summary>
            <param name="name">the check name</param>
            <param name="query">The text of the flux query</param>
            <param name="every">Check repetition interval</param>
            <param name="timeSince">string duration before deadman triggers</param>
            <param name="staleTime">string duration for time that a series is considered stale and should not trigger deadman</param>
            <param name="messageTemplate">template that is used to generate and write a status message</param>
            <param name="level">the state to record if check matches a criteria</param>
            <param name="orgId">the organization that owns this check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>DeadmanCheck created</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.CreateCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check.
            </summary>
            <param name="check">check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Check created</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.UpdateCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Update a check.
            </summary>
            <param name="check">check update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated check</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.UpdateCheckAsync(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.Threading.CancellationToken)">
            <summary>
            Update a check.
            </summary>
            <param name="checkId">ID of check</param>
            <param name="patch">update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated check</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.DeleteCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Delete a check.
            </summary>
            <param name="check">the check to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.DeleteCheckAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check.
            </summary>
            <param name="checkId">checkID the ID of check to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.FindCheckByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a check.
            </summary>
            <param name="checkId">ID of check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the check requested</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.FindChecksAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get checks.
            </summary>
            <param name="orgId">only show checks belonging to specified organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of checks</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.FindChecksAsync(System.String,InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            Get all checks.
            </summary>
            <param name="orgId">only show checks belonging to specified organization</param>
            <param name="findOptions">find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of checks</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check.
            </summary>
            <param name="check"> the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a check</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check.
            </summary>
            <param name="checkId">ID of the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a check</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check.
            </summary>
            <param name="label">label to add</param>
            <param name="check">the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the label was added to the check</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check.
            </summary>
            <param name="labelId">ID of label to add</param>
            <param name="checkId">ID of the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the label was added to the check</returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check.
            </summary>
            <param name="label">the label to delete</param>
            <param name="check">the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IChecksApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check.
            </summary>
            <param name="labelId">labelID the label id to delete</param>
            <param name="checkId">checkID ID of the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:InfluxDB.Client.ChecksApi">
            <summary>
            The client of the InfluxDB 2.x that implement Check Api.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.CreateThresholdCheckAsync(System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Threshold,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Threshold check.
            </summary>
            <param name="name">the check name</param>
            <param name="query">The text of the flux query</param>
            <param name="every">Check repetition interval</param>
            <param name="messageTemplate">template that is used to generate and write a status message</param>
            <param name="threshold">condition for that specific status</param>
            <param name="orgId">the organization that owns this check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ThresholdCheck created</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.CreateThresholdCheckAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Threshold},System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Threshold check.
            </summary>
            <param name="name">the check name</param>
            <param name="query">The text of the flux query</param>
            <param name="every">Check repetition interval</param>
            <param name="messageTemplate">template that is used to generate and write a status message</param>
            <param name="thresholds">conditions for that specific status</param>
            <param name="orgId">the organization that owns this check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ThresholdCheck created</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.CreateDeadmanCheckAsync(System.String,System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.CheckStatusLevel,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Deadman check.
            </summary>
            <param name="name">the check name</param>
            <param name="query">The text of the flux query</param>
            <param name="every">Check repetition interval</param>
            <param name="timeSince">string duration before deadman triggers</param>
            <param name="staleTime">string duration for time that a series is considered stale and should not trigger deadman</param>
            <param name="messageTemplate">template that is used to generate and write a status message</param>
            <param name="level">the state to record if check matches a criteria</param>
            <param name="orgId">the organization that owns this check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>DeadmanCheck created</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.CreateCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check.
            </summary>
            <param name="check">check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Check created</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.UpdateCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Update a check.
            </summary>
            <param name="check">check update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated check</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.UpdateCheckAsync(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.Threading.CancellationToken)">
            <summary>
            Update a check.
            </summary>
            <param name="checkId">ID of check</param>
            <param name="patch">update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated check</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.DeleteCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Delete a check.
            </summary>
            <param name="check">the check to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.DeleteCheckAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check.
            </summary>
            <param name="checkId">checkID the ID of check to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.FindCheckByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a check.
            </summary>
            <param name="checkId">ID of check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the check requested</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.FindChecksAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get checks.
            </summary>
            <param name="orgId">only show checks belonging to specified organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of checks</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.FindChecksAsync(System.String,InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            Get all checks.
            </summary>
            <param name="orgId">only show checks belonging to specified organization</param>
            <param name="findOptions">find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of checks</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check.
            </summary>
            <param name="check"> the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a check</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check.
            </summary>
            <param name="checkId">ID of the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a check</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check.
            </summary>
            <param name="label">label to add</param>
            <param name="check">the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the label was added to the check</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check.
            </summary>
            <param name="labelId">ID of label to add</param>
            <param name="checkId">ID of the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the label was added to the check</returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check.
            </summary>
            <param name="label">the label to delete</param>
            <param name="check">the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.ChecksApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check.
            </summary>
            <param name="labelId">labelID the label id to delete</param>
            <param name="checkId">checkID ID of the check</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.Url">
            <summary>
            The url to connect the InfluxDB.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.Org">
            <summary>
            Specify the default destination organization for writes and queries.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.Bucket">
            <summary>
            Specify the default destination bucket for writes.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.Token">
            <summary>
            The token to use for the authorization.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.LogLevel">
            <summary>
            The log level for the request and response information.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.Timeout">
            <summary>
            The timespan to wait before the HTTP request times out.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.AllowHttpRedirects">
            <summary>
            Configure automatically following HTTP 3xx redirects.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Configurations.Influx2.VerifySsl">
            <summary>
            Ignore Certificate Validation Errors when false
            </summary>
        </member>
        <member name="M:InfluxDB.Client.IDeleteApi.Delete(System.DateTime,System.DateTime,System.String,InfluxDB.Client.Api.Domain.Bucket,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Delete Time series data from InfluxDB.
            </summary>
            <param name="start">Start time</param>
            <param name="stop">Stop time</param>
            <param name="predicate">Sql where like delete statement</param>
            <param name="bucket">The bucket from which data will be deleted</param>
            <param name="org">The organization of the above bucket</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.IDeleteApi.Delete(System.DateTime,System.DateTime,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Time series data from InfluxDB.
            </summary>
            <param name="start">Start time</param>
            <param name="stop">Stop time</param>
            <param name="predicate">Sql where like delete statement</param>
            <param name="bucket">The bucket from which data will be deleted</param>
            <param name="org">The organization of the above bucket</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.IDeleteApi.Delete(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Time series data from InfluxDB.
            </summary>
            <param name="predicate">Predicate delete request</param>
            <param name="bucket">The bucket from which data will be deleted</param>
            <param name="org">The organization of the above bucket</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.DeleteApi.Delete(System.DateTime,System.DateTime,System.String,InfluxDB.Client.Api.Domain.Bucket,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Delete Time series data from InfluxDB.
            </summary>
            <param name="start">Start time</param>
            <param name="stop">Stop time</param>
            <param name="predicate">Sql where like delete statement</param>
            <param name="bucket">The bucket from which data will be deleted</param>
            <param name="org">The organization of the above bucket</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.DeleteApi.Delete(System.DateTime,System.DateTime,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Time series data from InfluxDB.
            </summary>
            <param name="start">Start time</param>
            <param name="stop">Stop time</param>
            <param name="predicate">Sql where like delete statement</param>
            <param name="bucket">The bucket from which data will be deleted</param>
            <param name="org">The organization of the above bucket</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.DeleteApi.Delete(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Time series data from InfluxDB.
            </summary>
            <param name="predicate">Predicate delete request</param>
            <param name="bucket">The bucket from which data will be deleted</param>
            <param name="org">The organization of the above bucket</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="T:InfluxDB.Client.IDomainObjectMapper">
            <summary>
            An implementation of this class is used to convert DomainObject entity into <see cref="T:InfluxDB.Client.Writes.PointData"/>
            and <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxRecord"/> back to DomainObject. 
            </summary>
        </member>
        <member name="M:InfluxDB.Client.IDomainObjectMapper.ConvertToPointData``1(``0,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Converts DomainObject to corresponding PointData.
            </summary>
            <param name="entity">DomainObject to convert</param>
            <param name="precision">Required timestamp precision</param>
            <typeparam name="T">Type of DomainObject</typeparam>
            <returns>Converted DataPoint</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.InterceptRequest(RestSharp.RestRequest)">
            <summary>
            Allows for extending request processing for <see cref="T:InfluxDB.Client.Api.Client.ApiClient"/> generated code.
            </summary>
            <param name="request">The RestSharp request object</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.InterceptResponse(RestSharp.RestRequest,RestSharp.RestResponse)">
            <summary>
            Allows for extending response processing for <see cref="T:InfluxDB.Client.Api.Client.ApiClient"/> generated code.
            </summary>
            <param name="request">The RestSharp request object</param>
            <param name="response">The RestSharp response object</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.ApiClient" /> class
            with default configuration.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.ApiClient" /> class
            with default base path (http://localhost/api/v2).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.ApiClient" /> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:InfluxDB.Client.Api.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:InfluxDB.Client.Api.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:InfluxDB.Client.Api.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.Deserialize(RestSharp.RestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:InfluxDB.Client.Api.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.Configuration" /> class
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.Configuration" /> class
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.#ctor(InfluxDB.Client.Api.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.Configuration" /> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">The timespan to wait before the HTTP request times out (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.#ctor(InfluxDB.Client.Api.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:InfluxDB.Client.Api.Client.Configuration.ApiClient" /> based on this <see cref="T:InfluxDB.Client.Api.Client.Configuration" /> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.GlobalConfiguration">
            <summary>
            <see cref="T:InfluxDB.Client.Api.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .openapi-generator-ignore file.
            </remarks>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.OpenAPIDateConverter">
            <summary>
            Formatter for 'date' openapi formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Client.OpenAPIDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Client.OpenAPIDateConverter" /> class.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Client.CookieRedirectAuthenticator">
            <summary>
            Set Cookies to HTTP Request.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody">
            <summary>
            AddResourceMemberRequestBody
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody" /> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="name">name.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.Equals(InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody)">
            <summary>
            Returns true if AddResourceMemberRequestBody instances are equal
            </summary>
            <param name="input">Instance of AddResourceMemberRequestBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse">
            <summary>
            AnalyzeQueryResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse" /> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse.Errors">
            <summary>
            Gets or Sets Errors
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse.Equals(InfluxDB.Client.Api.Domain.AnalyzeQueryResponse)">
            <summary>
            Returns true if AnalyzeQueryResponse instances are equal
            </summary>
            <param name="input">Instance of AnalyzeQueryResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors">
            <summary>
            AnalyzeQueryResponseErrors
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors" /> class.
            </summary>
            <param name="line">line.</param>
            <param name="column">column.</param>
            <param name="character">character.</param>
            <param name="message">message.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.Line">
            <summary>
            Gets or Sets Line
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.Column">
            <summary>
            Gets or Sets Column
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.Character">
            <summary>
            Gets or Sets Character
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.Equals(InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors)">
            <summary>
            Returns true if AnalyzeQueryResponseErrors instances are equal
            </summary>
            <param name="input">Instance of AnalyzeQueryResponseErrors to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AnalyzeQueryResponseErrors.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ArrayExpression">
            <summary>
            Used to create and directly specify the elements of an array object
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ArrayExpression.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Expression})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ArrayExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="elements">Elements of the array.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ArrayExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ArrayExpression.Elements">
            <summary>
            Elements of the array
            </summary>
            <value>Elements of the array</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ArrayExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ArrayExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ArrayExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ArrayExpression.Equals(InfluxDB.Client.Api.Domain.ArrayExpression)">
            <summary>
            Returns true if ArrayExpression instances are equal
            </summary>
            <param name="input">Instance of ArrayExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ArrayExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ASTResponse">
            <summary>
            Contains the AST for the supplied Flux query
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ASTResponse.#ctor(InfluxDB.Client.Api.Domain.Package)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ASTResponse" /> class.
            </summary>
            <param name="ast">ast.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ASTResponse.Ast">
            <summary>
            Gets or Sets Ast
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ASTResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ASTResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ASTResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ASTResponse.Equals(InfluxDB.Client.Api.Domain.ASTResponse)">
            <summary>
            Returns true if ASTResponse instances are equal
            </summary>
            <param name="input">Instance of ASTResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ASTResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Authorization">
            <summary>
            Authorization
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorization.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Permission},InfluxDB.Client.Api.Domain.AuthorizationLinks,System.Nullable{InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.StatusEnum},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Authorization" /> class.
            </summary>
            <param name="orgID">ID of the organization that the authorization is scoped to..</param>
            <param name="permissions">List of permissions for an authorization.  An authorization must have at least one permission..</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.OrgID">
            <summary>
            ID of the organization that the authorization is scoped to.
            </summary>
            <value>ID of the organization that the authorization is scoped to.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.Permissions">
            <summary>
            List of permissions for an authorization.  An authorization must have at least one permission.
            </summary>
            <value>List of permissions for an authorization.  An authorization must have at least one permission.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.Token">
            <summary>
            Token used to authenticate API requests.
            </summary>
            <value>Token used to authenticate API requests.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.UserID">
            <summary>
            ID of the user that created and owns the token.
            </summary>
            <value>ID of the user that created and owns the token.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.User">
            <summary>
            Name of the user that created and owns the token.
            </summary>
            <value>Name of the user that created and owns the token.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.Org">
            <summary>
            Name of the organization that the token is scoped to.
            </summary>
            <value>Name of the organization that the token is scoped to.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorization.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorization.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorization.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorization.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorization.Equals(InfluxDB.Client.Api.Domain.Authorization)">
            <summary>
            Returns true if Authorization instances are equal
            </summary>
            <param name="input">Instance of Authorization to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorization.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AuthorizationLinks">
            <summary>
            AuthorizationLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.AuthorizationLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AuthorizationLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AuthorizationLinks.User">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationLinks.Equals(InfluxDB.Client.Api.Domain.AuthorizationLinks)">
            <summary>
            Returns true if AuthorizationLinks instances are equal
            </summary>
            <param name="input">Instance of AuthorizationLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AuthorizationPostRequest">
            <summary>
            AuthorizationPostRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Permission},System.Nullable{InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.StatusEnum},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.AuthorizationPostRequest" /> class.
            </summary>
            <param name="orgID">ID of org that authorization is scoped to..</param>
            <param name="userID">ID of user that authorization is scoped to..</param>
            <param name="permissions">List of permissions for an auth.  An auth must have at least one Permission..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.OrgID">
            <summary>
            ID of org that authorization is scoped to.
            </summary>
            <value>ID of org that authorization is scoped to.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.UserID">
            <summary>
            ID of user that authorization is scoped to.
            </summary>
            <value>ID of user that authorization is scoped to.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.Permissions">
            <summary>
            List of permissions for an auth.  An auth must have at least one Permission.
            </summary>
            <value>List of permissions for an auth.  An auth must have at least one Permission.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.Equals(InfluxDB.Client.Api.Domain.AuthorizationPostRequest)">
            <summary>
            Returns true if AuthorizationPostRequest instances are equal
            </summary>
            <param name="input">Instance of AuthorizationPostRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationPostRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Authorizations">
            <summary>
            Authorizations
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorizations.#ctor(InfluxDB.Client.Api.Domain.Links,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Authorization})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Authorizations" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="authorizations">authorizations.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorizations.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Authorizations._Authorizations">
            <summary>
            Gets or Sets _Authorizations
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorizations.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorizations.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorizations.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorizations.Equals(InfluxDB.Client.Api.Domain.Authorizations)">
            <summary>
            Returns true if Authorizations instances are equal
            </summary>
            <param name="input">Instance of Authorizations to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Authorizations.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest">
            <summary>
            AuthorizationUpdateRequest
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.StatusEnum">
            <summary>
            Status of the token. If &#x60;inactive&#x60;, requests using the token will be rejected.
            </summary>
            <value>Status of the token. If &#x60;inactive&#x60;, requests using the token will be rejected.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.Status">
            <summary>
            Status of the token. If &#x60;inactive&#x60;, requests using the token will be rejected.
            </summary>
            <value>Status of the token. If &#x60;inactive&#x60;, requests using the token will be rejected.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.StatusEnum},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest" /> class.
            </summary>
            <param name="status">Status of the token. If &#x60;inactive&#x60;, requests using the token will be rejected. (default to StatusEnum.Active).</param>
            <param name="description">A description of the token..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.Description">
            <summary>
            A description of the token.
            </summary>
            <value>A description of the token.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.Equals(InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest)">
            <summary>
            Returns true if AuthorizationUpdateRequest instances are equal
            </summary>
            <param name="input">Instance of AuthorizationUpdateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Axes">
            <summary>
            The viewport for a View&#39;s visualizations
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Axes" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axes.#ctor(InfluxDB.Client.Api.Domain.Axis,InfluxDB.Client.Api.Domain.Axis)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Axes" /> class.
            </summary>
            <param name="x">x (required).</param>
            <param name="y">y (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axes.X">
            <summary>
            Gets or Sets X
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axes.Y">
            <summary>
            Gets or Sets Y
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axes.Equals(InfluxDB.Client.Api.Domain.Axes)">
            <summary>
            Returns true if Axes instances are equal
            </summary>
            <param name="input">Instance of Axes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Axis">
            <summary>
            Axis used in a visualization.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Axis.BaseEnum">
            <summary>
            Radix for formatting axis values.
            </summary>
            <value>Radix for formatting axis values.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Axis.BaseEnum.Empty">
            <summary>
            Enum Empty for value: 
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Axis.BaseEnum._2">
            <summary>
            Enum _2 for value: 2
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Axis.BaseEnum._10">
            <summary>
            Enum _10 for value: 10
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axis.Base">
            <summary>
            Radix for formatting axis values.
            </summary>
            <value>Radix for formatting axis values.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axis.Scale">
            <summary>
            Gets or Sets Scale
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axis.#ctor(System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.Axis.BaseEnum},System.Nullable{InfluxDB.Client.Api.Domain.AxisScale})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Axis" /> class.
            </summary>
            <param name="bounds">The extents of the axis in the form [lower, upper]. Clients determine whether bounds are inclusive or exclusive of their limits..</param>
            <param name="label">Description of the axis..</param>
            <param name="prefix">Label prefix for formatting axis values..</param>
            <param name="suffix">Label suffix for formatting axis values..</param>
            <param name="_base">Radix for formatting axis values..</param>
            <param name="scale">scale.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axis.Bounds">
            <summary>
            The extents of the axis in the form [lower, upper]. Clients determine whether bounds are inclusive or exclusive of their limits.
            </summary>
            <value>The extents of the axis in the form [lower, upper]. Clients determine whether bounds are inclusive or exclusive of their limits.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axis.Label">
            <summary>
            Description of the axis.
            </summary>
            <value>Description of the axis.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axis.Prefix">
            <summary>
            Label prefix for formatting axis values.
            </summary>
            <value>Label prefix for formatting axis values.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Axis.Suffix">
            <summary>
            Label suffix for formatting axis values.
            </summary>
            <value>Label suffix for formatting axis values.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axis.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axis.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axis.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axis.Equals(InfluxDB.Client.Api.Domain.Axis)">
            <summary>
            Returns true if Axis instances are equal
            </summary>
            <param name="input">Instance of Axis to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Axis.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.AxisScale">
            <summary>
            Scale is the axis formatting scale. Supported: \&quot;log\&quot;, \&quot;linear\&quot;
            </summary>
            <value>Scale is the axis formatting scale. Supported: \&quot;log\&quot;, \&quot;linear\&quot;</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.AxisScale.Log">
            <summary>
            Enum Log for value: log
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.AxisScale.Linear">
            <summary>
            Enum Linear for value: linear
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BadStatement">
            <summary>
            A placeholder for statements for which no correct statement nodes can be created
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BadStatement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BadStatement" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="text">Raw source text.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BadStatement.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BadStatement.Text">
            <summary>
            Raw source text
            </summary>
            <value>Raw source text</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BadStatement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BadStatement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BadStatement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BadStatement.Equals(InfluxDB.Client.Api.Domain.BadStatement)">
            <summary>
            Returns true if BadStatement instances are equal
            </summary>
            <param name="input">Instance of BadStatement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BadStatement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BandViewProperties">
            <summary>
            BandViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BandViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BandViewProperties.TypeEnum.Band">
            <summary>
            Enum Band for value: band
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BandViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BandViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BandViewProperties.HoverDimensionEnum">
            <summary>
            Defines HoverDimension
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BandViewProperties.HoverDimensionEnum.Auto">
            <summary>
            Enum Auto for value: auto
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BandViewProperties.HoverDimensionEnum.X">
            <summary>
            Enum X for value: x
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BandViewProperties.HoverDimensionEnum.Y">
            <summary>
            Enum Y for value: y
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BandViewProperties.HoverDimensionEnum.Xy">
            <summary>
            Enum Xy for value: xy
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.HoverDimension">
            <summary>
            Gets or Sets HoverDimension
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.Geom">
            <summary>
            Gets or Sets Geom
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BandViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BandViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BandViewProperties.#ctor(System.String,InfluxDB.Client.Api.Domain.BandViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},InfluxDB.Client.Api.Domain.BandViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},InfluxDB.Client.Api.Domain.Axes,InfluxDB.Client.Api.Domain.StaticLegend,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.BandViewProperties.HoverDimensionEnum},InfluxDB.Client.Api.Domain.XYGeom,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BandViewProperties" /> class.
            </summary>
            <param name="timeFormat">timeFormat.</param>
            <param name="type">type (required) (default to TypeEnum.Band).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="axes">axes (required).</param>
            <param name="staticLegend">staticLegend.</param>
            <param name="xColumn">xColumn.</param>
            <param name="generateXAxisTicks">generateXAxisTicks.</param>
            <param name="xTotalTicks">xTotalTicks.</param>
            <param name="xTickStart">xTickStart.</param>
            <param name="xTickStep">xTickStep.</param>
            <param name="yColumn">yColumn.</param>
            <param name="generateYAxisTicks">generateYAxisTicks.</param>
            <param name="yTotalTicks">yTotalTicks.</param>
            <param name="yTickStart">yTickStart.</param>
            <param name="yTickStep">yTickStep.</param>
            <param name="upperColumn">upperColumn.</param>
            <param name="mainColumn">mainColumn.</param>
            <param name="lowerColumn">lowerColumn.</param>
            <param name="hoverDimension">hoverDimension.</param>
            <param name="geom">geom (required).</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.TimeFormat">
            <summary>
            Gets or Sets TimeFormat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.Axes">
            <summary>
            Gets or Sets Axes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.StaticLegend">
            <summary>
            Gets or Sets StaticLegend
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.XColumn">
            <summary>
            Gets or Sets XColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.GenerateXAxisTicks">
            <summary>
            Gets or Sets GenerateXAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.XTotalTicks">
            <summary>
            Gets or Sets XTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.XTickStart">
            <summary>
            Gets or Sets XTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.XTickStep">
            <summary>
            Gets or Sets XTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.YColumn">
            <summary>
            Gets or Sets YColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.GenerateYAxisTicks">
            <summary>
            Gets or Sets GenerateYAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.YTotalTicks">
            <summary>
            Gets or Sets YTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.YTickStart">
            <summary>
            Gets or Sets YTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.YTickStep">
            <summary>
            Gets or Sets YTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.UpperColumn">
            <summary>
            Gets or Sets UpperColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.MainColumn">
            <summary>
            Gets or Sets MainColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.LowerColumn">
            <summary>
            Gets or Sets LowerColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BandViewProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BandViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BandViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BandViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BandViewProperties.Equals(InfluxDB.Client.Api.Domain.BandViewProperties)">
            <summary>
            Returns true if BandViewProperties instances are equal
            </summary>
            <param name="input">Instance of BandViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BandViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BinaryExpression">
            <summary>
            uses binary operators to act on two operands in an expression
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BinaryExpression.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BinaryExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="_operator">_operator.</param>
            <param name="left">left.</param>
            <param name="right">right.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BinaryExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BinaryExpression.Operator">
            <summary>
            Gets or Sets Operator
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BinaryExpression.Left">
            <summary>
            Gets or Sets Left
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BinaryExpression.Right">
            <summary>
            Gets or Sets Right
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BinaryExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BinaryExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BinaryExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BinaryExpression.Equals(InfluxDB.Client.Api.Domain.BinaryExpression)">
            <summary>
            Returns true if BinaryExpression instances are equal
            </summary>
            <param name="input">Instance of BinaryExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BinaryExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Block">
            <summary>
            A set of statements
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Block.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Statement})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Block" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="body">Block body.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Block.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Block.Body">
            <summary>
            Block body
            </summary>
            <value>Block body</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Block.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Block.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Block.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Block.Equals(InfluxDB.Client.Api.Domain.Block)">
            <summary>
            Returns true if Block instances are equal
            </summary>
            <param name="input">Instance of Block to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Block.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BooleanLiteral">
            <summary>
            Represents boolean values
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BooleanLiteral.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BooleanLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BooleanLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BooleanLiteral.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BooleanLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BooleanLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BooleanLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BooleanLiteral.Equals(InfluxDB.Client.Api.Domain.BooleanLiteral)">
            <summary>
            Returns true if BooleanLiteral instances are equal
            </summary>
            <param name="input">Instance of BooleanLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BooleanLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Bucket">
            <summary>
            Bucket
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Bucket.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Bucket.TypeEnum.User">
            <summary>
            Enum User for value: user
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Bucket.TypeEnum.System">
            <summary>
            Enum System for value: system
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.SchemaType">
            <summary>
            Gets or Sets SchemaType
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Bucket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Bucket" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Bucket.#ctor(InfluxDB.Client.Api.Domain.BucketLinks,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.SchemaType},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.BucketRetentionRules},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Bucket" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="orgID">orgID.</param>
            <param name="rp">rp.</param>
            <param name="schemaType">schemaType.</param>
            <param name="retentionRules">Rules to expire or retain data.  No rules means data never expires. (required).</param>
            <param name="labels">labels.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.Rp">
            <summary>
            Gets or Sets Rp
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.RetentionRules">
            <summary>
            Rules to expire or retain data.  No rules means data never expires.
            </summary>
            <value>Rules to expire or retain data.  No rules means data never expires.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Bucket.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Bucket.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Bucket.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Bucket.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Bucket.Equals(InfluxDB.Client.Api.Domain.Bucket)">
            <summary>
            Returns true if Bucket instances are equal
            </summary>
            <param name="input">Instance of Bucket to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Bucket.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BucketLinks">
            <summary>
            BucketLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BucketLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketLinks.Org">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketLinks.Write">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketLinks.Equals(InfluxDB.Client.Api.Domain.BucketLinks)">
            <summary>
            Returns true if BucketLinks instances are equal
            </summary>
            <param name="input">Instance of BucketLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BucketMetadataManifest">
            <summary>
            BucketMetadataManifest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketMetadataManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BucketMetadataManifest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketMetadataManifest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.RetentionPolicyManifest})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BucketMetadataManifest" /> class.
            </summary>
            <param name="organizationID">organizationID (required).</param>
            <param name="organizationName">organizationName (required).</param>
            <param name="bucketID">bucketID (required).</param>
            <param name="bucketName">bucketName (required).</param>
            <param name="description">description.</param>
            <param name="defaultRetentionPolicy">defaultRetentionPolicy (required).</param>
            <param name="retentionPolicies">retentionPolicies (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketMetadataManifest.OrganizationID">
            <summary>
            Gets or Sets OrganizationID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketMetadataManifest.OrganizationName">
            <summary>
            Gets or Sets OrganizationName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketMetadataManifest.BucketID">
            <summary>
            Gets or Sets BucketID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketMetadataManifest.BucketName">
            <summary>
            Gets or Sets BucketName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketMetadataManifest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketMetadataManifest.DefaultRetentionPolicy">
            <summary>
            Gets or Sets DefaultRetentionPolicy
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketMetadataManifest.RetentionPolicies">
            <summary>
            Gets or Sets RetentionPolicies
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketMetadataManifest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketMetadataManifest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketMetadataManifest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketMetadataManifest.Equals(InfluxDB.Client.Api.Domain.BucketMetadataManifest)">
            <summary>
            Returns true if BucketMetadataManifest instances are equal
            </summary>
            <param name="input">Instance of BucketMetadataManifest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketMetadataManifest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BucketRetentionRules">
            <summary>
            BucketRetentionRules
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BucketRetentionRules.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BucketRetentionRules.TypeEnum.Expire">
            <summary>
            Enum Expire for value: expire
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketRetentionRules.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketRetentionRules.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BucketRetentionRules" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketRetentionRules.#ctor(InfluxDB.Client.Api.Domain.BucketRetentionRules.TypeEnum,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BucketRetentionRules" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Expire).</param>
            <param name="everySeconds">Duration in seconds for how long data will be kept in the database. 0 means infinite. (required).</param>
            <param name="shardGroupDurationSeconds">Shard duration measured in seconds..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketRetentionRules.EverySeconds">
            <summary>
            Duration in seconds for how long data will be kept in the database. 0 means infinite.
            </summary>
            <value>Duration in seconds for how long data will be kept in the database. 0 means infinite.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketRetentionRules.ShardGroupDurationSeconds">
            <summary>
            Shard duration measured in seconds.
            </summary>
            <value>Shard duration measured in seconds.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketRetentionRules.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketRetentionRules.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketRetentionRules.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketRetentionRules.Equals(InfluxDB.Client.Api.Domain.BucketRetentionRules)">
            <summary>
            Returns true if BucketRetentionRules instances are equal
            </summary>
            <param name="input">Instance of BucketRetentionRules to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketRetentionRules.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Buckets">
            <summary>
            Buckets
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Buckets.#ctor(InfluxDB.Client.Api.Domain.Links,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Bucket})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Buckets" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="buckets">buckets.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Buckets.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Buckets._Buckets">
            <summary>
            Gets or Sets _Buckets
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Buckets.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Buckets.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Buckets.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Buckets.Equals(InfluxDB.Client.Api.Domain.Buckets)">
            <summary>
            Returns true if Buckets instances are equal
            </summary>
            <param name="input">Instance of Buckets to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Buckets.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BucketShardMapping">
            <summary>
            BucketShardMapping
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketShardMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BucketShardMapping" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketShardMapping.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BucketShardMapping" /> class.
            </summary>
            <param name="oldId">oldId (required).</param>
            <param name="newId">newId (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketShardMapping.OldId">
            <summary>
            Gets or Sets OldId
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BucketShardMapping.NewId">
            <summary>
            Gets or Sets NewId
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketShardMapping.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketShardMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketShardMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketShardMapping.Equals(InfluxDB.Client.Api.Domain.BucketShardMapping)">
            <summary>
            Returns true if BucketShardMapping instances are equal
            </summary>
            <param name="input">Instance of BucketShardMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BucketShardMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BuilderAggregateFunctionType">
            <summary>
            Defines BuilderAggregateFunctionType
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BuilderAggregateFunctionType.Filter">
            <summary>
            Enum Filter for value: filter
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.BuilderAggregateFunctionType.Group">
            <summary>
            Enum Group for value: group
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BuilderConfig">
            <summary>
            BuilderConfig
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfig.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.BuilderTagsType},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.BuilderFunctionsType},InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BuilderConfig" /> class.
            </summary>
            <param name="buckets">buckets.</param>
            <param name="tags">tags.</param>
            <param name="functions">functions.</param>
            <param name="aggregateWindow">aggregateWindow.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderConfig.Buckets">
            <summary>
            Gets or Sets Buckets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderConfig.Tags">
            <summary>
            Gets or Sets Tags
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderConfig.Functions">
            <summary>
            Gets or Sets Functions
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderConfig.AggregateWindow">
            <summary>
            Gets or Sets AggregateWindow
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfig.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfig.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfig.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfig.Equals(InfluxDB.Client.Api.Domain.BuilderConfig)">
            <summary>
            Returns true if BuilderConfig instances are equal
            </summary>
            <param name="input">Instance of BuilderConfig to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfig.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow">
            <summary>
            BuilderConfigAggregateWindow
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow" /> class.
            </summary>
            <param name="period">period.</param>
            <param name="fillValues">fillValues.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.Period">
            <summary>
            Gets or Sets Period
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.FillValues">
            <summary>
            Gets or Sets FillValues
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.Equals(InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow)">
            <summary>
            Returns true if BuilderConfigAggregateWindow instances are equal
            </summary>
            <param name="input">Instance of BuilderConfigAggregateWindow to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderConfigAggregateWindow.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BuilderFunctionsType">
            <summary>
            BuilderFunctionsType
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderFunctionsType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BuilderFunctionsType" /> class.
            </summary>
            <param name="name">name.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderFunctionsType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderFunctionsType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderFunctionsType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderFunctionsType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderFunctionsType.Equals(InfluxDB.Client.Api.Domain.BuilderFunctionsType)">
            <summary>
            Returns true if BuilderFunctionsType instances are equal
            </summary>
            <param name="input">Instance of BuilderFunctionsType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderFunctionsType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BuilderTagsType">
            <summary>
            BuilderTagsType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderTagsType.AggregateFunctionType">
            <summary>
            Gets or Sets AggregateFunctionType
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderTagsType.#ctor(System.String,System.Collections.Generic.List{System.String},System.Nullable{InfluxDB.Client.Api.Domain.BuilderAggregateFunctionType})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BuilderTagsType" /> class.
            </summary>
            <param name="key">key.</param>
            <param name="values">values.</param>
            <param name="aggregateFunctionType">aggregateFunctionType.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderTagsType.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuilderTagsType.Values">
            <summary>
            Gets or Sets Values
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderTagsType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderTagsType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderTagsType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderTagsType.Equals(InfluxDB.Client.Api.Domain.BuilderTagsType)">
            <summary>
            Returns true if BuilderTagsType instances are equal
            </summary>
            <param name="input">Instance of BuilderTagsType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuilderTagsType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.BuiltinStatement">
            <summary>
            Declares a builtin identifier and its type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuiltinStatement.#ctor(System.String,InfluxDB.Client.Api.Domain.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.BuiltinStatement" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="id">id.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuiltinStatement.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.BuiltinStatement.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuiltinStatement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuiltinStatement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuiltinStatement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuiltinStatement.Equals(InfluxDB.Client.Api.Domain.BuiltinStatement)">
            <summary>
            Returns true if BuiltinStatement instances are equal
            </summary>
            <param name="input">Instance of BuiltinStatement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.BuiltinStatement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CallExpression">
            <summary>
            Represents a function call
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CallExpression.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Expression})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CallExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="callee">callee.</param>
            <param name="arguments">Function arguments.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CallExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CallExpression.Callee">
            <summary>
            Gets or Sets Callee
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CallExpression.Arguments">
            <summary>
            Function arguments
            </summary>
            <value>Function arguments</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CallExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CallExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CallExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CallExpression.Equals(InfluxDB.Client.Api.Domain.CallExpression)">
            <summary>
            Returns true if CallExpression instances are equal
            </summary>
            <param name="input">Instance of CallExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CallExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Cell">
            <summary>
            Cell
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Cell.#ctor(System.String,InfluxDB.Client.Api.Domain.CellLinks,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Cell" /> class.
            </summary>
            <param name="id">id.</param>
            <param name="links">links.</param>
            <param name="x">x.</param>
            <param name="y">y.</param>
            <param name="w">w.</param>
            <param name="h">h.</param>
            <param name="viewID">The reference to a view from the views API..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Cell.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Cell.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Cell.X">
            <summary>
            Gets or Sets X
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Cell.Y">
            <summary>
            Gets or Sets Y
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Cell.W">
            <summary>
            Gets or Sets W
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Cell.H">
            <summary>
            Gets or Sets H
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Cell.ViewID">
            <summary>
            The reference to a view from the views API.
            </summary>
            <value>The reference to a view from the views API.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Cell.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Cell.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Cell.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Cell.Equals(InfluxDB.Client.Api.Domain.Cell)">
            <summary>
            Returns true if Cell instances are equal
            </summary>
            <param name="input">Instance of Cell to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Cell.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CellLinks">
            <summary>
            CellLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellLinks.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CellLinks" /> class.
            </summary>
            <param name="self">self.</param>
            <param name="view">view.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellLinks.View">
            <summary>
            Gets or Sets View
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellLinks.Equals(InfluxDB.Client.Api.Domain.CellLinks)">
            <summary>
            Returns true if CellLinks instances are equal
            </summary>
            <param name="input">Instance of CellLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CellUpdate">
            <summary>
            CellUpdate
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellUpdate.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CellUpdate" /> class.
            </summary>
            <param name="x">x.</param>
            <param name="y">y.</param>
            <param name="w">w.</param>
            <param name="h">h.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellUpdate.X">
            <summary>
            Gets or Sets X
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellUpdate.Y">
            <summary>
            Gets or Sets Y
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellUpdate.W">
            <summary>
            Gets or Sets W
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellUpdate.H">
            <summary>
            Gets or Sets H
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellUpdate.Equals(InfluxDB.Client.Api.Domain.CellUpdate)">
            <summary>
            Returns true if CellUpdate instances are equal
            </summary>
            <param name="input">Instance of CellUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CellWithViewProperties">
            <summary>
            CellWithViewProperties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellWithViewProperties.#ctor(System.String,InfluxDB.Client.Api.Domain.ViewProperties,System.String,InfluxDB.Client.Api.Domain.CellLinks,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CellWithViewProperties" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="properties">properties.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellWithViewProperties.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CellWithViewProperties.Properties">
            <summary>
            Gets or Sets Properties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellWithViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellWithViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellWithViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellWithViewProperties.Equals(InfluxDB.Client.Api.Domain.CellWithViewProperties)">
            <summary>
            Returns true if CellWithViewProperties instances are equal
            </summary>
            <param name="input">Instance of CellWithViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CellWithViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Check">
            <summary>
            Check
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Check.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Check" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Check.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.DashboardQuery,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.CheckBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Check" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Check.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Check.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Check.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Check.Equals(InfluxDB.Client.Api.Domain.Check)">
            <summary>
            Returns true if Check instances are equal
            </summary>
            <param name="input">Instance of Check to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Check.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckBase">
            <summary>
            CheckBase
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckBase.LastRunStatusEnum">
            <summary>
            Defines LastRunStatus
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckBase.LastRunStatusEnum.Failed">
            <summary>
            Enum Failed for value: failed
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckBase.LastRunStatusEnum.Success">
            <summary>
            Enum Success for value: success
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckBase.LastRunStatusEnum.Canceled">
            <summary>
            Enum Canceled for value: canceled
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.LastRunStatus">
            <summary>
            Gets or Sets LastRunStatus
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBase.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.DashboardQuery,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.CheckBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckBase" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="orgID">The ID of the organization that owns this check. (required).</param>
            <param name="taskID">The ID of the task associated with this check..</param>
            <param name="query">query (required).</param>
            <param name="status">status.</param>
            <param name="description">An optional description of the check..</param>
            <param name="labels">labels.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.OrgID">
            <summary>
            The ID of the organization that owns this check.
            </summary>
            <value>The ID of the organization that owns this check.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.TaskID">
            <summary>
            The ID of the task associated with this check.
            </summary>
            <value>The ID of the task associated with this check.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.OwnerID">
            <summary>
            The ID of creator used to create this check.
            </summary>
            <value>The ID of creator used to create this check.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.Query">
            <summary>
            Gets or Sets Query
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.Description">
            <summary>
            An optional description of the check.
            </summary>
            <value>An optional description of the check.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.LatestCompleted">
            <summary>
            Timestamp (in RFC3339 date/time format](https://datatracker.ietf.org/doc/html/rfc3339)) of the latest scheduled and completed run.
            </summary>
            <value>Timestamp (in RFC3339 date/time format](https://datatracker.ietf.org/doc/html/rfc3339)) of the latest scheduled and completed run.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.LastRunError">
            <summary>
            Gets or Sets LastRunError
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBase.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBase.Equals(InfluxDB.Client.Api.Domain.CheckBase)">
            <summary>
            Returns true if CheckBase instances are equal
            </summary>
            <param name="input">Instance of CheckBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckBaseLinks">
            <summary>
            CheckBaseLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBaseLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckBaseLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBaseLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBaseLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBaseLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBaseLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckBaseLinks.Query">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBaseLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBaseLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBaseLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBaseLinks.Equals(InfluxDB.Client.Api.Domain.CheckBaseLinks)">
            <summary>
            Returns true if CheckBaseLinks instances are equal
            </summary>
            <param name="input">Instance of CheckBaseLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckBaseLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckDiscriminator">
            <summary>
            CheckDiscriminator
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckDiscriminator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckDiscriminator" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckDiscriminator.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.DashboardQuery,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.CheckBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckDiscriminator" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckDiscriminator.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckDiscriminator.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckDiscriminator.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckDiscriminator.Equals(InfluxDB.Client.Api.Domain.CheckDiscriminator)">
            <summary>
            Returns true if CheckDiscriminator instances are equal
            </summary>
            <param name="input">Instance of CheckDiscriminator to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckDiscriminator.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckPatch">
            <summary>
            CheckPatch
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckPatch.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckPatch.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckPatch.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckPatch.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckPatch.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.CheckPatch.StatusEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckPatch" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckPatch.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckPatch.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckPatch.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckPatch.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckPatch.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckPatch.Equals(InfluxDB.Client.Api.Domain.CheckPatch)">
            <summary>
            Returns true if CheckPatch instances are equal
            </summary>
            <param name="input">Instance of CheckPatch to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckPatch.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Checks">
            <summary>
            Checks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Checks.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Check},InfluxDB.Client.Api.Domain.Links)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Checks" /> class.
            </summary>
            <param name="checks">checks.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Checks._Checks">
            <summary>
            Gets or Sets _Checks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Checks.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Checks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Checks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Checks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Checks.Equals(InfluxDB.Client.Api.Domain.Checks)">
            <summary>
            Returns true if Checks instances are equal
            </summary>
            <param name="input">Instance of Checks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Checks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckStatusLevel">
            <summary>
            The state to record if check matches a criteria.
            </summary>
            <value>The state to record if check matches a criteria.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckStatusLevel.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckStatusLevel.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckStatusLevel.INFO">
            <summary>
            Enum INFO for value: INFO
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckStatusLevel.CRIT">
            <summary>
            Enum CRIT for value: CRIT
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckStatusLevel.WARN">
            <summary>
            Enum WARN for value: WARN
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckViewProperties">
            <summary>
            CheckViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckViewProperties.TypeEnum.Check">
            <summary>
            Enum Check for value: check
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CheckViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CheckViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckViewProperties.#ctor(InfluxDB.Client.Api.Domain.CheckViewProperties.TypeEnum,InfluxDB.Client.Api.Domain.CheckViewProperties.ShapeEnum,System.String,InfluxDB.Client.Api.Domain.Check,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CheckViewProperties" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Check).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="checkID">checkID (required).</param>
            <param name="check">check.</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.CheckID">
            <summary>
            Gets or Sets CheckID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.Check">
            <summary>
            Gets or Sets Check
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CheckViewProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckViewProperties.Equals(InfluxDB.Client.Api.Domain.CheckViewProperties)">
            <summary>
            Returns true if CheckViewProperties instances are equal
            </summary>
            <param name="input">Instance of CheckViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CheckViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ConditionalExpression">
            <summary>
            Selects one of two expressions, &#x60;Alternate&#x60; or &#x60;Consequent&#x60;, depending on a third boolean expression, &#x60;Test&#x60;
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConditionalExpression.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ConditionalExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="test">test.</param>
            <param name="alternate">alternate.</param>
            <param name="consequent">consequent.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ConditionalExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ConditionalExpression.Test">
            <summary>
            Gets or Sets Test
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ConditionalExpression.Alternate">
            <summary>
            Gets or Sets Alternate
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ConditionalExpression.Consequent">
            <summary>
            Gets or Sets Consequent
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConditionalExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConditionalExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConditionalExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConditionalExpression.Equals(InfluxDB.Client.Api.Domain.ConditionalExpression)">
            <summary>
            Returns true if ConditionalExpression instances are equal
            </summary>
            <param name="input">Instance of ConditionalExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConditionalExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Config">
            <summary>
            Config
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Config.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Config" /> class.
            </summary>
            <param name="config">config.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Config._Config">
            <summary>
            Gets or Sets _Config
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Config.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Config.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Config.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Config.Equals(InfluxDB.Client.Api.Domain.Config)">
            <summary>
            Returns true if Config instances are equal
            </summary>
            <param name="input">Instance of Config to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Config.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ConstantVariableProperties">
            <summary>
            ConstantVariableProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ConstantVariableProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ConstantVariableProperties.TypeEnum.Constant">
            <summary>
            Enum Constant for value: constant
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ConstantVariableProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConstantVariableProperties.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.ConstantVariableProperties.TypeEnum},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ConstantVariableProperties" /> class.
            </summary>
            <param name="type">type.</param>
            <param name="values">values.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ConstantVariableProperties.Values">
            <summary>
            Gets or Sets Values
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConstantVariableProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConstantVariableProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConstantVariableProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConstantVariableProperties.Equals(InfluxDB.Client.Api.Domain.ConstantVariableProperties)">
            <summary>
            Returns true if ConstantVariableProperties instances are equal
            </summary>
            <param name="input">Instance of ConstantVariableProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ConstantVariableProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CreateCell">
            <summary>
            CreateCell
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateCell.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CreateCell" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="x">x.</param>
            <param name="y">y.</param>
            <param name="w">w.</param>
            <param name="h">h.</param>
            <param name="usingView">Makes a copy of the provided view..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateCell.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateCell.X">
            <summary>
            Gets or Sets X
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateCell.Y">
            <summary>
            Gets or Sets Y
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateCell.W">
            <summary>
            Gets or Sets W
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateCell.H">
            <summary>
            Gets or Sets H
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateCell.UsingView">
            <summary>
            Makes a copy of the provided view.
            </summary>
            <value>Makes a copy of the provided view.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateCell.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateCell.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateCell.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateCell.Equals(InfluxDB.Client.Api.Domain.CreateCell)">
            <summary>
            Returns true if CreateCell instances are equal
            </summary>
            <param name="input">Instance of CreateCell to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateCell.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CreateDashboardRequest">
            <summary>
            CreateDashboardRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateDashboardRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CreateDashboardRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateDashboardRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CreateDashboardRequest" /> class.
            </summary>
            <param name="orgID">The ID of the organization that owns the dashboard. (required).</param>
            <param name="name">The user-facing name of the dashboard. (required).</param>
            <param name="description">The user-facing description of the dashboard..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateDashboardRequest.OrgID">
            <summary>
            The ID of the organization that owns the dashboard.
            </summary>
            <value>The ID of the organization that owns the dashboard.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateDashboardRequest.Name">
            <summary>
            The user-facing name of the dashboard.
            </summary>
            <value>The user-facing name of the dashboard.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CreateDashboardRequest.Description">
            <summary>
            The user-facing description of the dashboard.
            </summary>
            <value>The user-facing description of the dashboard.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateDashboardRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateDashboardRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateDashboardRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateDashboardRequest.Equals(InfluxDB.Client.Api.Domain.CreateDashboardRequest)">
            <summary>
            Returns true if CreateDashboardRequest instances are equal
            </summary>
            <param name="input">Instance of CreateDashboardRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CreateDashboardRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CustomCheck">
            <summary>
            CustomCheck
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.CustomCheck.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.CustomCheck.TypeEnum.Custom">
            <summary>
            Enum Custom for value: custom
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.CustomCheck.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CustomCheck.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CustomCheck" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CustomCheck.#ctor(InfluxDB.Client.Api.Domain.CustomCheck.TypeEnum,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.DashboardQuery,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.CheckBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.CustomCheck" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Custom).</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CustomCheck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CustomCheck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CustomCheck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CustomCheck.Equals(InfluxDB.Client.Api.Domain.CustomCheck)">
            <summary>
            Returns true if CustomCheck instances are equal
            </summary>
            <param name="input">Instance of CustomCheck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.CustomCheck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Dashboard">
            <summary>
            Dashboard
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Dashboard" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboard.#ctor(InfluxDB.Client.Api.Domain.DashboardLinks,InfluxDB.Client.Api.Domain.DashboardMeta,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Dashboard" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="meta">meta.</param>
            <param name="cells">cells.</param>
            <param name="labels">labels.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dashboard.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dashboard.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dashboard.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dashboard.Cells">
            <summary>
            Gets or Sets Cells
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dashboard.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboard.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboard.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboard.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboard.Equals(InfluxDB.Client.Api.Domain.Dashboard)">
            <summary>
            Returns true if Dashboard instances are equal
            </summary>
            <param name="input">Instance of Dashboard to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboard.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DashboardColor">
            <summary>
            Defines an encoding of data value into color space.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum">
            <summary>
            Type is how the color is used.
            </summary>
            <value>Type is how the color is used.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum.Min">
            <summary>
            Enum Min for value: min
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum.Max">
            <summary>
            Enum Max for value: max
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum.Threshold">
            <summary>
            Enum Threshold for value: threshold
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum.Scale">
            <summary>
            Enum Scale for value: scale
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum.Text">
            <summary>
            Enum Text for value: text
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum.Background">
            <summary>
            Enum Background for value: background
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardColor.Type">
            <summary>
            Type is how the color is used.
            </summary>
            <value>Type is how the color is used.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DashboardColor" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardColor.#ctor(System.String,InfluxDB.Client.Api.Domain.DashboardColor.TypeEnum,System.String,System.String,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DashboardColor" /> class.
            </summary>
            <param name="id">The unique ID of the view color. (required).</param>
            <param name="type">Type is how the color is used. (required).</param>
            <param name="hex">The hex number of the color (required).</param>
            <param name="name">The user-facing name of the hex color. (required).</param>
            <param name="value">The data value mapped to this color. (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardColor.Id">
            <summary>
            The unique ID of the view color.
            </summary>
            <value>The unique ID of the view color.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardColor.Hex">
            <summary>
            The hex number of the color
            </summary>
            <value>The hex number of the color</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardColor.Name">
            <summary>
            The user-facing name of the hex color.
            </summary>
            <value>The user-facing name of the hex color.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardColor.Value">
            <summary>
            The data value mapped to this color.
            </summary>
            <value>The data value mapped to this color.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardColor.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardColor.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardColor.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardColor.Equals(InfluxDB.Client.Api.Domain.DashboardColor)">
            <summary>
            Returns true if DashboardColor instances are equal
            </summary>
            <param name="input">Instance of DashboardColor to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardColor.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DashboardLinks">
            <summary>
            DashboardLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DashboardLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardLinks.Cells">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardLinks.Org">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardLinks.Equals(InfluxDB.Client.Api.Domain.DashboardLinks)">
            <summary>
            Returns true if DashboardLinks instances are equal
            </summary>
            <param name="input">Instance of DashboardLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DashboardMeta">
            <summary>
            DashboardMeta
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardMeta.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DashboardMeta" /> class.
            </summary>
            <param name="createdAt">createdAt.</param>
            <param name="updatedAt">updatedAt.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardMeta.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardMeta.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardMeta.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardMeta.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardMeta.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardMeta.Equals(InfluxDB.Client.Api.Domain.DashboardMeta)">
            <summary>
            Returns true if DashboardMeta instances are equal
            </summary>
            <param name="input">Instance of DashboardMeta to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardMeta.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DashboardQuery">
            <summary>
            DashboardQuery
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardQuery.EditMode">
            <summary>
            Gets or Sets EditMode
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardQuery.#ctor(System.String,System.Nullable{InfluxDB.Client.Api.Domain.QueryEditMode},System.String,InfluxDB.Client.Api.Domain.BuilderConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DashboardQuery" /> class.
            </summary>
            <param name="text">The text of the Flux query..</param>
            <param name="editMode">editMode.</param>
            <param name="name">name.</param>
            <param name="builderConfig">builderConfig.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardQuery.Text">
            <summary>
            The text of the Flux query.
            </summary>
            <value>The text of the Flux query.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardQuery.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardQuery.BuilderConfig">
            <summary>
            Gets or Sets BuilderConfig
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardQuery.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardQuery.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardQuery.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardQuery.Equals(InfluxDB.Client.Api.Domain.DashboardQuery)">
            <summary>
            Returns true if DashboardQuery instances are equal
            </summary>
            <param name="input">Instance of DashboardQuery to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardQuery.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Dashboards">
            <summary>
            Dashboards
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboards.#ctor(InfluxDB.Client.Api.Domain.Links,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Dashboard})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Dashboards" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="dashboards">dashboards.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dashboards.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dashboards._Dashboards">
            <summary>
            Gets or Sets _Dashboards
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboards.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboards.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboards.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboards.Equals(InfluxDB.Client.Api.Domain.Dashboards)">
            <summary>
            Returns true if Dashboards instances are equal
            </summary>
            <param name="input">Instance of Dashboards to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dashboards.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DashboardWithViewProperties">
            <summary>
            DashboardWithViewProperties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DashboardWithViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.#ctor(InfluxDB.Client.Api.Domain.DashboardLinks,InfluxDB.Client.Api.Domain.DashboardMeta,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.CellWithViewProperties},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DashboardWithViewProperties" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="meta">meta.</param>
            <param name="cells">cells.</param>
            <param name="labels">labels.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.Meta">
            <summary>
            Gets or Sets Meta
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.Cells">
            <summary>
            Gets or Sets Cells
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.Equals(InfluxDB.Client.Api.Domain.DashboardWithViewProperties)">
            <summary>
            Returns true if DashboardWithViewProperties instances are equal
            </summary>
            <param name="input">Instance of DashboardWithViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DashboardWithViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DateTimeLiteral">
            <summary>
            Represents an instant in time with nanosecond precision using the syntax of golang&#39;s RFC3339 Nanosecond variant
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DateTimeLiteral.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DateTimeLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DateTimeLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DateTimeLiteral.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DateTimeLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DateTimeLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DateTimeLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DateTimeLiteral.Equals(InfluxDB.Client.Api.Domain.DateTimeLiteral)">
            <summary>
            Returns true if DateTimeLiteral instances are equal
            </summary>
            <param name="input">Instance of DateTimeLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DateTimeLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DBRP">
            <summary>
            DBRP
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRP.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DBRP" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRP.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},InfluxDB.Client.Api.Domain.Links)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DBRP" /> class.
            </summary>
            <param name="orgID">ID of the organization that owns this mapping. (required).</param>
            <param name="bucketID">ID of the bucket used as the target for the translation. (required).</param>
            <param name="database">InfluxDB v1 database (required).</param>
            <param name="retentionPolicy">InfluxDB v1 retention policy (required).</param>
            <param name="_default">Mapping represents the default retention policy for the database specified. (required).</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRP.Id">
            <summary>
            ID of the DBRP mapping.
            </summary>
            <value>ID of the DBRP mapping.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRP.OrgID">
            <summary>
            ID of the organization that owns this mapping.
            </summary>
            <value>ID of the organization that owns this mapping.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRP.BucketID">
            <summary>
            ID of the bucket used as the target for the translation.
            </summary>
            <value>ID of the bucket used as the target for the translation.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRP.Database">
            <summary>
            InfluxDB v1 database
            </summary>
            <value>InfluxDB v1 database</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRP.RetentionPolicy">
            <summary>
            InfluxDB v1 retention policy
            </summary>
            <value>InfluxDB v1 retention policy</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRP.Default">
            <summary>
            Mapping represents the default retention policy for the database specified.
            </summary>
            <value>Mapping represents the default retention policy for the database specified.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRP.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRP.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRP.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRP.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRP.Equals(InfluxDB.Client.Api.Domain.DBRP)">
            <summary>
            Returns true if DBRP instances are equal
            </summary>
            <param name="input">Instance of DBRP to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRP.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DBRPCreate">
            <summary>
            DBRPCreate
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPCreate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DBRPCreate" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPCreate.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DBRPCreate" /> class.
            </summary>
            <param name="orgID">ID of the organization that owns this mapping..</param>
            <param name="org">Name of the organization that owns this mapping..</param>
            <param name="bucketID">ID of the bucket used as the target for the translation. (required).</param>
            <param name="database">InfluxDB v1 database (required).</param>
            <param name="retentionPolicy">InfluxDB v1 retention policy (required).</param>
            <param name="_default">Mapping represents the default retention policy for the database specified..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPCreate.OrgID">
            <summary>
            ID of the organization that owns this mapping.
            </summary>
            <value>ID of the organization that owns this mapping.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPCreate.Org">
            <summary>
            Name of the organization that owns this mapping.
            </summary>
            <value>Name of the organization that owns this mapping.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPCreate.BucketID">
            <summary>
            ID of the bucket used as the target for the translation.
            </summary>
            <value>ID of the bucket used as the target for the translation.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPCreate.Database">
            <summary>
            InfluxDB v1 database
            </summary>
            <value>InfluxDB v1 database</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPCreate.RetentionPolicy">
            <summary>
            InfluxDB v1 retention policy
            </summary>
            <value>InfluxDB v1 retention policy</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPCreate.Default">
            <summary>
            Mapping represents the default retention policy for the database specified.
            </summary>
            <value>Mapping represents the default retention policy for the database specified.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPCreate.Equals(InfluxDB.Client.Api.Domain.DBRPCreate)">
            <summary>
            Returns true if DBRPCreate instances are equal
            </summary>
            <param name="input">Instance of DBRPCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DBRPGet">
            <summary>
            DBRPGet
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPGet.#ctor(InfluxDB.Client.Api.Domain.DBRP)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DBRPGet" /> class.
            </summary>
            <param name="content">content.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPGet.Content">
            <summary>
            Gets or Sets Content
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPGet.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPGet.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPGet.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPGet.Equals(InfluxDB.Client.Api.Domain.DBRPGet)">
            <summary>
            Returns true if DBRPGet instances are equal
            </summary>
            <param name="input">Instance of DBRPGet to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPGet.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DBRPs">
            <summary>
            DBRPs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPs.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DBRP})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DBRPs" /> class.
            </summary>
            <param name="content">content.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPs.Content">
            <summary>
            Gets or Sets Content
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPs.Equals(InfluxDB.Client.Api.Domain.DBRPs)">
            <summary>
            Returns true if DBRPs instances are equal
            </summary>
            <param name="input">Instance of DBRPs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DBRPUpdate">
            <summary>
            DBRPUpdate
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPUpdate.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DBRPUpdate" /> class.
            </summary>
            <param name="retentionPolicy">InfluxDB v1 retention policy.</param>
            <param name="_default">_default.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPUpdate.RetentionPolicy">
            <summary>
            InfluxDB v1 retention policy
            </summary>
            <value>InfluxDB v1 retention policy</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DBRPUpdate.Default">
            <summary>
            Gets or Sets Default
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPUpdate.Equals(InfluxDB.Client.Api.Domain.DBRPUpdate)">
            <summary>
            Returns true if DBRPUpdate instances are equal
            </summary>
            <param name="input">Instance of DBRPUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DBRPUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DeadmanCheck">
            <summary>
            DeadmanCheck
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DeadmanCheck.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.DeadmanCheck.TypeEnum.Deadman">
            <summary>
            Enum Deadman for value: deadman
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.Level">
            <summary>
            Gets or Sets Level
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeadmanCheck.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DeadmanCheck" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeadmanCheck.#ctor(InfluxDB.Client.Api.Domain.DeadmanCheck.TypeEnum,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{InfluxDB.Client.Api.Domain.CheckStatusLevel},System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ThresholdCheckTags},System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.DashboardQuery,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.CheckBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DeadmanCheck" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Deadman).</param>
            <param name="timeSince">String duration before deadman triggers..</param>
            <param name="staleTime">String duration for time that a series is considered stale and should not trigger deadman..</param>
            <param name="reportZero">If only zero values reported since time, trigger an alert.</param>
            <param name="level">level.</param>
            <param name="every">Check repetition interval..</param>
            <param name="offset">Duration to delay after the schedule, before executing check..</param>
            <param name="tags">List of tags to write to each status..</param>
            <param name="statusMessageTemplate">The template used to generate and write a status message..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.TimeSince">
            <summary>
            String duration before deadman triggers.
            </summary>
            <value>String duration before deadman triggers.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.StaleTime">
            <summary>
            String duration for time that a series is considered stale and should not trigger deadman.
            </summary>
            <value>String duration for time that a series is considered stale and should not trigger deadman.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.ReportZero">
            <summary>
            If only zero values reported since time, trigger an alert
            </summary>
            <value>If only zero values reported since time, trigger an alert</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.Every">
            <summary>
            Check repetition interval.
            </summary>
            <value>Check repetition interval.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.Offset">
            <summary>
            Duration to delay after the schedule, before executing check.
            </summary>
            <value>Duration to delay after the schedule, before executing check.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.Tags">
            <summary>
            List of tags to write to each status.
            </summary>
            <value>List of tags to write to each status.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeadmanCheck.StatusMessageTemplate">
            <summary>
            The template used to generate and write a status message.
            </summary>
            <value>The template used to generate and write a status message.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeadmanCheck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeadmanCheck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeadmanCheck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeadmanCheck.Equals(InfluxDB.Client.Api.Domain.DeadmanCheck)">
            <summary>
            Returns true if DeadmanCheck instances are equal
            </summary>
            <param name="input">Instance of DeadmanCheck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeadmanCheck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DecimalPlaces">
            <summary>
            Indicates whether decimal places should be enforced, and how many digits it should show.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DecimalPlaces.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DecimalPlaces" /> class.
            </summary>
            <param name="isEnforced">Indicates whether decimal point setting should be enforced.</param>
            <param name="digits">The number of digits after decimal to display.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DecimalPlaces.IsEnforced">
            <summary>
            Indicates whether decimal point setting should be enforced
            </summary>
            <value>Indicates whether decimal point setting should be enforced</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DecimalPlaces.Digits">
            <summary>
            The number of digits after decimal to display
            </summary>
            <value>The number of digits after decimal to display</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DecimalPlaces.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DecimalPlaces.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DecimalPlaces.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DecimalPlaces.Equals(InfluxDB.Client.Api.Domain.DecimalPlaces)">
            <summary>
            Returns true if DecimalPlaces instances are equal
            </summary>
            <param name="input">Instance of DecimalPlaces to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DecimalPlaces.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DeletePredicateRequest">
            <summary>
            The delete predicate request.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeletePredicateRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DeletePredicateRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeletePredicateRequest.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DeletePredicateRequest" /> class.
            </summary>
            <param name="start">RFC3339Nano (required).</param>
            <param name="stop">RFC3339Nano (required).</param>
            <param name="predicate">InfluxQL-like delete statement.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeletePredicateRequest.Start">
            <summary>
            RFC3339Nano
            </summary>
            <value>RFC3339Nano</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeletePredicateRequest.Stop">
            <summary>
            RFC3339Nano
            </summary>
            <value>RFC3339Nano</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DeletePredicateRequest.Predicate">
            <summary>
            InfluxQL-like delete statement
            </summary>
            <value>InfluxQL-like delete statement</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeletePredicateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeletePredicateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeletePredicateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeletePredicateRequest.Equals(InfluxDB.Client.Api.Domain.DeletePredicateRequest)">
            <summary>
            Returns true if DeletePredicateRequest instances are equal
            </summary>
            <param name="input">Instance of DeletePredicateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DeletePredicateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Dialect">
            <summary>
            Dialect are options to change the default CSV output format; https://www.w3.org/TR/2015/REC-tabular-metadata-20151217/#dialect-descriptions
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Dialect.AnnotationsEnum">
            <summary>
            Defines Annotations
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Dialect.AnnotationsEnum.Group">
            <summary>
            Enum Group for value: group
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Dialect.AnnotationsEnum.Datatype">
            <summary>
            Enum Datatype for value: datatype
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Dialect.AnnotationsEnum.Default">
            <summary>
            Enum Default for value: default
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dialect.Annotations">
            <summary>
            https://www.w3.org/TR/2015/REC-tabular-data-model-20151217/#columns
            </summary>
            <value>https://www.w3.org/TR/2015/REC-tabular-data-model-20151217/#columns</value>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Dialect.DateTimeFormatEnum">
            <summary>
            Format of timestamps
            </summary>
            <value>Format of timestamps</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Dialect.DateTimeFormatEnum.RFC3339">
            <summary>
            Enum RFC3339 for value: RFC3339
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Dialect.DateTimeFormatEnum.RFC3339Nano">
            <summary>
            Enum RFC3339Nano for value: RFC3339Nano
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dialect.DateTimeFormat">
            <summary>
            Format of timestamps
            </summary>
            <value>Format of timestamps</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dialect.#ctor(System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Dialect.AnnotationsEnum},System.String,System.Nullable{InfluxDB.Client.Api.Domain.Dialect.DateTimeFormatEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Dialect" /> class.
            </summary>
            <param name="header">If true, the results will contain a header row (default to true).</param>
            <param name="delimiter">Separator between cells; the default is , (default to &quot;,&quot;).</param>
            <param name="annotations">https://www.w3.org/TR/2015/REC-tabular-data-model-20151217/#columns.</param>
            <param name="commentPrefix">Character prefixed to comment strings (default to &quot;#&quot;).</param>
            <param name="dateTimeFormat">Format of timestamps (default to DateTimeFormatEnum.RFC3339).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dialect.Header">
            <summary>
            If true, the results will contain a header row
            </summary>
            <value>If true, the results will contain a header row</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dialect.Delimiter">
            <summary>
            Separator between cells; the default is ,
            </summary>
            <value>Separator between cells; the default is ,</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Dialect.CommentPrefix">
            <summary>
            Character prefixed to comment strings
            </summary>
            <value>Character prefixed to comment strings</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dialect.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dialect.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dialect.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dialect.Equals(InfluxDB.Client.Api.Domain.Dialect)">
            <summary>
            Returns true if Dialect instances are equal
            </summary>
            <param name="input">Instance of Dialect to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Dialect.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DictExpression">
            <summary>
            Used to create and directly specify the elements of a dictionary
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictExpression.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DictItem})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DictExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="elements">Elements of the dictionary.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DictExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DictExpression.Elements">
            <summary>
            Elements of the dictionary
            </summary>
            <value>Elements of the dictionary</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictExpression.Equals(InfluxDB.Client.Api.Domain.DictExpression)">
            <summary>
            Returns true if DictExpression instances are equal
            </summary>
            <param name="input">Instance of DictExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DictItem">
            <summary>
            A key/value pair in a dictionary
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictItem.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DictItem" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="key">key.</param>
            <param name="val">val.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DictItem.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DictItem.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DictItem.Val">
            <summary>
            Gets or Sets Val
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictItem.Equals(InfluxDB.Client.Api.Domain.DictItem)">
            <summary>
            Returns true if DictItem instances are equal
            </summary>
            <param name="input">Instance of DictItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DictItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Duration">
            <summary>
            A pair consisting of length of time and the unit of time measured. It is the atomic unit from which all duration literals are composed.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Duration.#ctor(System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Duration" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="magnitude">magnitude.</param>
            <param name="unit">unit.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Duration.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Duration.Magnitude">
            <summary>
            Gets or Sets Magnitude
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Duration.Unit">
            <summary>
            Gets or Sets Unit
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Duration.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Duration.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Duration.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Duration.Equals(InfluxDB.Client.Api.Domain.Duration)">
            <summary>
            Returns true if Duration instances are equal
            </summary>
            <param name="input">Instance of Duration to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Duration.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.DurationLiteral">
            <summary>
            Represents the elapsed time between two instants as an int64 nanosecond count with syntax of golang&#39;s time.Duration
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DurationLiteral.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Duration})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.DurationLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="values">Duration values.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DurationLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.DurationLiteral.Values">
            <summary>
            Duration values
            </summary>
            <value>Duration values</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DurationLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DurationLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DurationLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DurationLiteral.Equals(InfluxDB.Client.Api.Domain.DurationLiteral)">
            <summary>
            Returns true if DurationLiteral instances are equal
            </summary>
            <param name="input">Instance of DurationLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.DurationLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Error.CodeEnum">
            <summary>
            code is the machine-readable error code.
            </summary>
            <value>code is the machine-readable error code.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Internalerror">
            <summary>
            Enum Internalerror for value: internal error
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Notfound">
            <summary>
            Enum Notfound for value: not found
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Conflict">
            <summary>
            Enum Conflict for value: conflict
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Invalid">
            <summary>
            Enum Invalid for value: invalid
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Unprocessableentity">
            <summary>
            Enum Unprocessableentity for value: unprocessable entity
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Emptyvalue">
            <summary>
            Enum Emptyvalue for value: empty value
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Unavailable">
            <summary>
            Enum Unavailable for value: unavailable
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Forbidden">
            <summary>
            Enum Forbidden for value: forbidden
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Toomanyrequests">
            <summary>
            Enum Toomanyrequests for value: too many requests
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Unauthorized">
            <summary>
            Enum Unauthorized for value: unauthorized
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Methodnotallowed">
            <summary>
            Enum Methodnotallowed for value: method not allowed
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Requesttoolarge">
            <summary>
            Enum Requesttoolarge for value: request too large
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Error.CodeEnum.Unsupportedmediatype">
            <summary>
            Enum Unsupportedmediatype for value: unsupported media type
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Error.Code">
            <summary>
            code is the machine-readable error code.
            </summary>
            <value>code is the machine-readable error code.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Error.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Error" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Error.Message">
            <summary>
            Human-readable message.
            </summary>
            <value>Human-readable message.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Error.Op">
            <summary>
            Describes the logical code operation when the error occurred. Useful for debugging.
            </summary>
            <value>Describes the logical code operation when the error occurred. Useful for debugging.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Error.Err">
            <summary>
            Stack of errors that occurred during processing of the request. Useful for debugging.
            </summary>
            <value>Stack of errors that occurred during processing of the request. Useful for debugging.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Error.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Error.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Error.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Error.Equals(InfluxDB.Client.Api.Domain.Error)">
            <summary>
            Returns true if Error instances are equal
            </summary>
            <param name="input">Instance of Error to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Error.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Expression">
            <summary>
            Expression
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Expression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Expression" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Expression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Expression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Expression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Expression.Equals(InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Returns true if Expression instances are equal
            </summary>
            <param name="input">Instance of Expression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Expression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ExpressionStatement">
            <summary>
            May consist of an expression that does not return a value and is executed solely for its side-effects
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ExpressionStatement.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ExpressionStatement" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="expression">expression.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ExpressionStatement.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ExpressionStatement.Expression">
            <summary>
            Gets or Sets Expression
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ExpressionStatement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ExpressionStatement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ExpressionStatement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ExpressionStatement.Equals(InfluxDB.Client.Api.Domain.ExpressionStatement)">
            <summary>
            Returns true if ExpressionStatement instances are equal
            </summary>
            <param name="input">Instance of ExpressionStatement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ExpressionStatement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Field">
            <summary>
            Field
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Field.TypeEnum">
            <summary>
            &#x60;type&#x60; describes the field type. &#x60;func&#x60; is a function. &#x60;field&#x60; is a field reference.
            </summary>
            <value>&#x60;type&#x60; describes the field type. &#x60;func&#x60; is a function. &#x60;field&#x60; is a field reference.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Field.TypeEnum.Func">
            <summary>
            Enum Func for value: func
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Field.TypeEnum.Field">
            <summary>
            Enum Field for value: field
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Field.TypeEnum.Integer">
            <summary>
            Enum Integer for value: integer
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Field.TypeEnum.Number">
            <summary>
            Enum Number for value: number
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Field.TypeEnum.Regex">
            <summary>
            Enum Regex for value: regex
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Field.TypeEnum.Wildcard">
            <summary>
            Enum Wildcard for value: wildcard
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Field.Type">
            <summary>
            &#x60;type&#x60; describes the field type. &#x60;func&#x60; is a function. &#x60;field&#x60; is a field reference.
            </summary>
            <value>&#x60;type&#x60; describes the field type. &#x60;func&#x60; is a function. &#x60;field&#x60; is a field reference.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Field.#ctor(System.String,System.Nullable{InfluxDB.Client.Api.Domain.Field.TypeEnum},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Field})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Field" /> class.
            </summary>
            <param name="value">value is the value of the field.  Meaning of the value is implied by the &#x60;type&#x60; key.</param>
            <param name="type">&#x60;type&#x60; describes the field type. &#x60;func&#x60; is a function. &#x60;field&#x60; is a field reference..</param>
            <param name="alias">Alias overrides the field name in the returned response.  Applies only if type is &#x60;func&#x60;.</param>
            <param name="args">Args are the arguments to the function.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Field.Value">
            <summary>
            value is the value of the field.  Meaning of the value is implied by the &#x60;type&#x60; key
            </summary>
            <value>value is the value of the field.  Meaning of the value is implied by the &#x60;type&#x60; key</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Field.Alias">
            <summary>
            Alias overrides the field name in the returned response.  Applies only if type is &#x60;func&#x60;
            </summary>
            <value>Alias overrides the field name in the returned response.  Applies only if type is &#x60;func&#x60;</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Field.Args">
            <summary>
            Args are the arguments to the function
            </summary>
            <value>Args are the arguments to the function</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Field.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Field.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Field.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Field.Equals(InfluxDB.Client.Api.Domain.Field)">
            <summary>
            Returns true if Field instances are equal
            </summary>
            <param name="input">Instance of Field to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Field.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.File">
            <summary>
            Represents a source from a single file
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.File.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.PackageClause,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ImportDeclaration},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Statement})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.File" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="name">The name of the file..</param>
            <param name="package">package.</param>
            <param name="imports">A list of package imports.</param>
            <param name="body">List of Flux statements.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.File.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.File.Name">
            <summary>
            The name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.File.Package">
            <summary>
            Gets or Sets Package
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.File.Imports">
            <summary>
            A list of package imports
            </summary>
            <value>A list of package imports</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.File.Body">
            <summary>
            List of Flux statements
            </summary>
            <value>List of Flux statements</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.File.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.File.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.File.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.File.Equals(InfluxDB.Client.Api.Domain.File)">
            <summary>
            Returns true if File instances are equal
            </summary>
            <param name="input">Instance of File to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.File.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.FloatLiteral">
            <summary>
            Represents floating point numbers according to the double representations defined by the IEEE-754-1985
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FloatLiteral.#ctor(System.String,System.Nullable{System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.FloatLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FloatLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FloatLiteral.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FloatLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FloatLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FloatLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FloatLiteral.Equals(InfluxDB.Client.Api.Domain.FloatLiteral)">
            <summary>
            Returns true if FloatLiteral instances are equal
            </summary>
            <param name="input">Instance of FloatLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FloatLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.FluxResponse">
            <summary>
            Rendered flux that backs the check or notification.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.FluxResponse" /> class.
            </summary>
            <param name="flux">flux.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FluxResponse.Flux">
            <summary>
            Gets or Sets Flux
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxResponse.Equals(InfluxDB.Client.Api.Domain.FluxResponse)">
            <summary>
            Returns true if FluxResponse instances are equal
            </summary>
            <param name="input">Instance of FluxResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.FluxSuggestion">
            <summary>
            FluxSuggestion
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestion.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.FluxSuggestion" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="_params">_params.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FluxSuggestion.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FluxSuggestion.Params">
            <summary>
            Gets or Sets Params
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestion.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestion.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestion.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestion.Equals(InfluxDB.Client.Api.Domain.FluxSuggestion)">
            <summary>
            Returns true if FluxSuggestion instances are equal
            </summary>
            <param name="input">Instance of FluxSuggestion to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestion.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.FluxSuggestions">
            <summary>
            FluxSuggestions
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestions.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.FluxSuggestion})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.FluxSuggestions" /> class.
            </summary>
            <param name="funcs">funcs.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FluxSuggestions.Funcs">
            <summary>
            Gets or Sets Funcs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestions.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestions.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestions.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestions.Equals(InfluxDB.Client.Api.Domain.FluxSuggestions)">
            <summary>
            Returns true if FluxSuggestions instances are equal
            </summary>
            <param name="input">Instance of FluxSuggestions to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FluxSuggestions.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.FunctionExpression">
            <summary>
            Function expression
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FunctionExpression.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Property},InfluxDB.Client.Api.Domain.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.FunctionExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="_params">Function parameters.</param>
            <param name="body">body.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FunctionExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FunctionExpression.Params">
            <summary>
            Function parameters
            </summary>
            <value>Function parameters</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.FunctionExpression.Body">
            <summary>
            Gets or Sets Body
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FunctionExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FunctionExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FunctionExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FunctionExpression.Equals(InfluxDB.Client.Api.Domain.FunctionExpression)">
            <summary>
            Returns true if FunctionExpression instances are equal
            </summary>
            <param name="input">Instance of FunctionExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.FunctionExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.GaugeViewProperties">
            <summary>
            GaugeViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.GaugeViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.GaugeViewProperties.TypeEnum.Gauge">
            <summary>
            Enum Gauge for value: gauge
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.GaugeViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.GaugeViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GaugeViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.GaugeViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GaugeViewProperties.#ctor(InfluxDB.Client.Api.Domain.GaugeViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},InfluxDB.Client.Api.Domain.GaugeViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.DecimalPlaces)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.GaugeViewProperties" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Gauge).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="prefix">prefix (required).</param>
            <param name="tickPrefix">tickPrefix (required).</param>
            <param name="suffix">suffix (required).</param>
            <param name="tickSuffix">tickSuffix (required).</param>
            <param name="decimalPlaces">decimalPlaces (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.Prefix">
            <summary>
            Gets or Sets Prefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.TickPrefix">
            <summary>
            Gets or Sets TickPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.Suffix">
            <summary>
            Gets or Sets Suffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.TickSuffix">
            <summary>
            Gets or Sets TickSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GaugeViewProperties.DecimalPlaces">
            <summary>
            Gets or Sets DecimalPlaces
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GaugeViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GaugeViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GaugeViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GaugeViewProperties.Equals(InfluxDB.Client.Api.Domain.GaugeViewProperties)">
            <summary>
            Returns true if GaugeViewProperties instances are equal
            </summary>
            <param name="input">Instance of GaugeViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GaugeViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.GreaterThreshold">
            <summary>
            GreaterThreshold
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.GreaterThreshold.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.GreaterThreshold.TypeEnum.Greater">
            <summary>
            Enum Greater for value: greater
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GreaterThreshold.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GreaterThreshold.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.GreaterThreshold" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GreaterThreshold.#ctor(InfluxDB.Client.Api.Domain.GreaterThreshold.TypeEnum,System.Nullable{System.Single},System.Nullable{InfluxDB.Client.Api.Domain.CheckStatusLevel},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.GreaterThreshold" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Greater).</param>
            <param name="value">value (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.GreaterThreshold.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GreaterThreshold.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GreaterThreshold.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GreaterThreshold.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GreaterThreshold.Equals(InfluxDB.Client.Api.Domain.GreaterThreshold)">
            <summary>
            Returns true if GreaterThreshold instances are equal
            </summary>
            <param name="input">Instance of GreaterThreshold to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.GreaterThreshold.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HealthCheck">
            <summary>
            HealthCheck
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HealthCheck.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HealthCheck.StatusEnum.Pass">
            <summary>
            Enum Pass for value: pass
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HealthCheck.StatusEnum.Fail">
            <summary>
            Enum Fail for value: fail
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HealthCheck.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HealthCheck.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HealthCheck" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HealthCheck.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.HealthCheck},InfluxDB.Client.Api.Domain.HealthCheck.StatusEnum,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HealthCheck" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="message">message.</param>
            <param name="checks">checks.</param>
            <param name="status">status (required).</param>
            <param name="version">version.</param>
            <param name="commit">commit.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HealthCheck.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HealthCheck.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HealthCheck.Checks">
            <summary>
            Gets or Sets Checks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HealthCheck.Version">
            <summary>
            Gets or Sets Version
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HealthCheck.Commit">
            <summary>
            Gets or Sets Commit
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HealthCheck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HealthCheck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HealthCheck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HealthCheck.Equals(InfluxDB.Client.Api.Domain.HealthCheck)">
            <summary>
            Returns true if HealthCheck instances are equal
            </summary>
            <param name="input">Instance of HealthCheck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HealthCheck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HeatmapViewProperties">
            <summary>
            HeatmapViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HeatmapViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HeatmapViewProperties.TypeEnum.Heatmap">
            <summary>
            Enum Heatmap for value: heatmap
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HeatmapViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HeatmapViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HeatmapViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HeatmapViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HeatmapViewProperties.#ctor(System.String,InfluxDB.Client.Api.Domain.HeatmapViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.HeatmapViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Collections.Generic.List{System.Nullable{System.Decimal}},System.Collections.Generic.List{System.Nullable{System.Decimal}},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HeatmapViewProperties" /> class.
            </summary>
            <param name="timeFormat">timeFormat.</param>
            <param name="type">type (required) (default to TypeEnum.Heatmap).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="xColumn">xColumn (required).</param>
            <param name="generateXAxisTicks">generateXAxisTicks.</param>
            <param name="xTotalTicks">xTotalTicks.</param>
            <param name="xTickStart">xTickStart.</param>
            <param name="xTickStep">xTickStep.</param>
            <param name="yColumn">yColumn (required).</param>
            <param name="generateYAxisTicks">generateYAxisTicks.</param>
            <param name="yTotalTicks">yTotalTicks.</param>
            <param name="yTickStart">yTickStart.</param>
            <param name="yTickStep">yTickStep.</param>
            <param name="xDomain">xDomain (required).</param>
            <param name="yDomain">yDomain (required).</param>
            <param name="xAxisLabel">xAxisLabel (required).</param>
            <param name="yAxisLabel">yAxisLabel (required).</param>
            <param name="xPrefix">xPrefix (required).</param>
            <param name="xSuffix">xSuffix (required).</param>
            <param name="yPrefix">yPrefix (required).</param>
            <param name="ySuffix">ySuffix (required).</param>
            <param name="binSize">binSize (required).</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.TimeFormat">
            <summary>
            Gets or Sets TimeFormat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XColumn">
            <summary>
            Gets or Sets XColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.GenerateXAxisTicks">
            <summary>
            Gets or Sets GenerateXAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XTotalTicks">
            <summary>
            Gets or Sets XTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XTickStart">
            <summary>
            Gets or Sets XTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XTickStep">
            <summary>
            Gets or Sets XTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YColumn">
            <summary>
            Gets or Sets YColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.GenerateYAxisTicks">
            <summary>
            Gets or Sets GenerateYAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YTotalTicks">
            <summary>
            Gets or Sets YTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YTickStart">
            <summary>
            Gets or Sets YTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YTickStep">
            <summary>
            Gets or Sets YTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XDomain">
            <summary>
            Gets or Sets XDomain
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YDomain">
            <summary>
            Gets or Sets YDomain
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XAxisLabel">
            <summary>
            Gets or Sets XAxisLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YAxisLabel">
            <summary>
            Gets or Sets YAxisLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XPrefix">
            <summary>
            Gets or Sets XPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.XSuffix">
            <summary>
            Gets or Sets XSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YPrefix">
            <summary>
            Gets or Sets YPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.YSuffix">
            <summary>
            Gets or Sets YSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.BinSize">
            <summary>
            Gets or Sets BinSize
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HeatmapViewProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HeatmapViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HeatmapViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HeatmapViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HeatmapViewProperties.Equals(InfluxDB.Client.Api.Domain.HeatmapViewProperties)">
            <summary>
            Returns true if HeatmapViewProperties instances are equal
            </summary>
            <param name="input">Instance of HeatmapViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HeatmapViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HistogramViewProperties">
            <summary>
            HistogramViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HistogramViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HistogramViewProperties.TypeEnum.Histogram">
            <summary>
            Enum Histogram for value: histogram
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HistogramViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HistogramViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HistogramViewProperties.PositionEnum">
            <summary>
            Defines Position
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HistogramViewProperties.PositionEnum.Overlaid">
            <summary>
            Enum Overlaid for value: overlaid
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HistogramViewProperties.PositionEnum.Stacked">
            <summary>
            Enum Stacked for value: stacked
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.Position">
            <summary>
            Gets or Sets Position
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HistogramViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HistogramViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HistogramViewProperties.#ctor(InfluxDB.Client.Api.Domain.HistogramViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},InfluxDB.Client.Api.Domain.HistogramViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Nullable{System.Single}},System.String,InfluxDB.Client.Api.Domain.HistogramViewProperties.PositionEnum,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HistogramViewProperties" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Histogram).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="xColumn">xColumn (required).</param>
            <param name="fillColumns">fillColumns (required).</param>
            <param name="xDomain">xDomain (required).</param>
            <param name="xAxisLabel">xAxisLabel (required).</param>
            <param name="position">position (required).</param>
            <param name="binCount">binCount (required).</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.XColumn">
            <summary>
            Gets or Sets XColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.FillColumns">
            <summary>
            Gets or Sets FillColumns
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.XDomain">
            <summary>
            Gets or Sets XDomain
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.XAxisLabel">
            <summary>
            Gets or Sets XAxisLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.BinCount">
            <summary>
            Gets or Sets BinCount
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HistogramViewProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HistogramViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HistogramViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HistogramViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HistogramViewProperties.Equals(InfluxDB.Client.Api.Domain.HistogramViewProperties)">
            <summary>
            Returns true if HistogramViewProperties instances are equal
            </summary>
            <param name="input">Instance of HistogramViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HistogramViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint">
            <summary>
            HTTPNotificationEndpoint
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum">
            <summary>
            Defines Method
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum.POST">
            <summary>
            Enum POST for value: POST
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum.GET">
            <summary>
            Enum GET for value: GET
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum.PUT">
            <summary>
            Enum PUT for value: PUT
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Method">
            <summary>
            Gets or Sets Method
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.AuthMethodEnum">
            <summary>
            Defines AuthMethod
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.AuthMethodEnum.None">
            <summary>
            Enum None for value: none
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.AuthMethodEnum.Basic">
            <summary>
            Enum Basic for value: basic
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.AuthMethodEnum.Bearer">
            <summary>
            Enum Bearer for value: bearer
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.AuthMethod">
            <summary>
            Gets or Sets AuthMethod
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.#ctor(System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.AuthMethodEnum,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks,InfluxDB.Client.Api.Domain.NotificationEndpointType)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint" /> class.
            </summary>
            <param name="url">url (required).</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <param name="token">token.</param>
            <param name="method">method (required).</param>
            <param name="authMethod">authMethod (required).</param>
            <param name="contentTemplate">contentTemplate.</param>
            <param name="headers">Customized headers..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.ContentTemplate">
            <summary>
            Gets or Sets ContentTemplate
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Headers">
            <summary>
            Customized headers.
            </summary>
            <value>Customized headers.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.Equals(InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint)">
            <summary>
            Returns true if HTTPNotificationEndpoint instances are equal
            </summary>
            <param name="input">Instance of HTTPNotificationEndpoint to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HTTPNotificationRule">
            <summary>
            HTTPNotificationRule
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HTTPNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRule.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks,InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.TypeEnum,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HTTPNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRule.Equals(InfluxDB.Client.Api.Domain.HTTPNotificationRule)">
            <summary>
            Returns true if HTTPNotificationRule instances are equal
            </summary>
            <param name="input">Instance of HTTPNotificationRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase">
            <summary>
            HTTPNotificationRuleBase
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.TypeEnum.Http">
            <summary>
            Enum Http for value: http
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.#ctor(InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.TypeEnum,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Http).</param>
            <param name="url">url.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.Equals(InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase)">
            <summary>
            Returns true if HTTPNotificationRuleBase instances are equal
            </summary>
            <param name="input">Instance of HTTPNotificationRuleBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.HTTPNotificationRuleBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Identifier">
            <summary>
            A valid Flux identifier
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Identifier.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Identifier" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="name">name.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Identifier.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Identifier.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Identifier.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Identifier.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Identifier.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Identifier.Equals(InfluxDB.Client.Api.Domain.Identifier)">
            <summary>
            Returns true if Identifier instances are equal
            </summary>
            <param name="input">Instance of Identifier to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Identifier.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ImportDeclaration">
            <summary>
            Declares a package import
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ImportDeclaration.#ctor(System.String,InfluxDB.Client.Api.Domain.Identifier,InfluxDB.Client.Api.Domain.StringLiteral)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ImportDeclaration" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="_as">_as.</param>
            <param name="path">path.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ImportDeclaration.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ImportDeclaration.As">
            <summary>
            Gets or Sets As
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ImportDeclaration.Path">
            <summary>
            Gets or Sets Path
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ImportDeclaration.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ImportDeclaration.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ImportDeclaration.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ImportDeclaration.Equals(InfluxDB.Client.Api.Domain.ImportDeclaration)">
            <summary>
            Returns true if ImportDeclaration instances are equal
            </summary>
            <param name="input">Instance of ImportDeclaration to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ImportDeclaration.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.IndexExpression">
            <summary>
            Represents indexing into an array
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IndexExpression.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.IndexExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="array">array.</param>
            <param name="index">index.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.IndexExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.IndexExpression.Array">
            <summary>
            Gets or Sets Array
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.IndexExpression.Index">
            <summary>
            Gets or Sets Index
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IndexExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IndexExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IndexExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IndexExpression.Equals(InfluxDB.Client.Api.Domain.IndexExpression)">
            <summary>
            Returns true if IndexExpression instances are equal
            </summary>
            <param name="input">Instance of IndexExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IndexExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.IntegerLiteral">
            <summary>
            Represents integer numbers
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IntegerLiteral.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.IntegerLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.IntegerLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.IntegerLiteral.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IntegerLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IntegerLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IntegerLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IntegerLiteral.Equals(InfluxDB.Client.Api.Domain.IntegerLiteral)">
            <summary>
            Returns true if IntegerLiteral instances are equal
            </summary>
            <param name="input">Instance of IntegerLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IntegerLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.IsOnboarding">
            <summary>
            IsOnboarding
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IsOnboarding.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.IsOnboarding" /> class.
            </summary>
            <param name="allowed">True means that the influxdb instance has NOT had initial setup; false means that the database has been setup..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.IsOnboarding.Allowed">
            <summary>
            True means that the influxdb instance has NOT had initial setup; false means that the database has been setup.
            </summary>
            <value>True means that the influxdb instance has NOT had initial setup; false means that the database has been setup.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IsOnboarding.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IsOnboarding.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IsOnboarding.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IsOnboarding.Equals(InfluxDB.Client.Api.Domain.IsOnboarding)">
            <summary>
            Returns true if IsOnboarding instances are equal
            </summary>
            <param name="input">Instance of IsOnboarding to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.IsOnboarding.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Label.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Label" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="properties">Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Label.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Label.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Label.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Label.Properties">
            <summary>
            Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.
            </summary>
            <value>Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Label.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Label.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Label.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Label.Equals(InfluxDB.Client.Api.Domain.Label)">
            <summary>
            Returns true if Label instances are equal
            </summary>
            <param name="input">Instance of Label to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Label.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LabelCreateRequest">
            <summary>
            LabelCreateRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelCreateRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LabelCreateRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelCreateRequest.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LabelCreateRequest" /> class.
            </summary>
            <param name="orgID">orgID (required).</param>
            <param name="name">name (required).</param>
            <param name="properties">Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelCreateRequest.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelCreateRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelCreateRequest.Properties">
            <summary>
            Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.
            </summary>
            <value>Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelCreateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelCreateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelCreateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelCreateRequest.Equals(InfluxDB.Client.Api.Domain.LabelCreateRequest)">
            <summary>
            Returns true if LabelCreateRequest instances are equal
            </summary>
            <param name="input">Instance of LabelCreateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelCreateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LabelMapping">
            <summary>
            LabelMapping
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelMapping.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LabelMapping" /> class.
            </summary>
            <param name="labelID">labelID.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelMapping.LabelID">
            <summary>
            Gets or Sets LabelID
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelMapping.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelMapping.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelMapping.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelMapping.Equals(InfluxDB.Client.Api.Domain.LabelMapping)">
            <summary>
            Returns true if LabelMapping instances are equal
            </summary>
            <param name="input">Instance of LabelMapping to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelMapping.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LabelResponse">
            <summary>
            LabelResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelResponse.#ctor(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Links)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LabelResponse" /> class.
            </summary>
            <param name="label">label.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelResponse.Label">
            <summary>
            Gets or Sets Label
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelResponse.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelResponse.Equals(InfluxDB.Client.Api.Domain.LabelResponse)">
            <summary>
            Returns true if LabelResponse instances are equal
            </summary>
            <param name="input">Instance of LabelResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LabelsResponse">
            <summary>
            LabelsResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelsResponse.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.Links)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LabelsResponse" /> class.
            </summary>
            <param name="labels">labels.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelsResponse.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelsResponse.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelsResponse.Equals(InfluxDB.Client.Api.Domain.LabelsResponse)">
            <summary>
            Returns true if LabelsResponse instances are equal
            </summary>
            <param name="input">Instance of LabelsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LabelUpdate">
            <summary>
            LabelUpdate
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelUpdate.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LabelUpdate" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="properties">Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelUpdate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LabelUpdate.Properties">
            <summary>
            Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.
            </summary>
            <value>Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelUpdate.Equals(InfluxDB.Client.Api.Domain.LabelUpdate)">
            <summary>
            Returns true if LabelUpdate instances are equal
            </summary>
            <param name="input">Instance of LabelUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LabelUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LanguageRequest">
            <summary>
            Flux query to be analyzed.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LanguageRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LanguageRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LanguageRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LanguageRequest" /> class.
            </summary>
            <param name="query">Flux query script to be analyzed (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LanguageRequest.Query">
            <summary>
            Flux query script to be analyzed
            </summary>
            <value>Flux query script to be analyzed</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LanguageRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LanguageRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LanguageRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LanguageRequest.Equals(InfluxDB.Client.Api.Domain.LanguageRequest)">
            <summary>
            Returns true if LanguageRequest instances are equal
            </summary>
            <param name="input">Instance of LanguageRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LanguageRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest">
            <summary>
            LegacyAuthorizationPostRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Permission},System.Nullable{InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest.StatusEnum},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest" /> class.
            </summary>
            <param name="orgID">ID of org that authorization is scoped to..</param>
            <param name="userID">ID of user that authorization is scoped to..</param>
            <param name="token">Token (name) of the authorization.</param>
            <param name="permissions">List of permissions for an auth.  An auth must have at least one Permission..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.OrgID">
            <summary>
            ID of org that authorization is scoped to.
            </summary>
            <value>ID of org that authorization is scoped to.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.UserID">
            <summary>
            ID of user that authorization is scoped to.
            </summary>
            <value>ID of user that authorization is scoped to.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.Token">
            <summary>
            Token (name) of the authorization
            </summary>
            <value>Token (name) of the authorization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.Permissions">
            <summary>
            List of permissions for an auth.  An auth must have at least one Permission.
            </summary>
            <value>List of permissions for an auth.  An auth must have at least one Permission.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.Equals(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest)">
            <summary>
            Returns true if LegacyAuthorizationPostRequest instances are equal
            </summary>
            <param name="input">Instance of LegacyAuthorizationPostRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LesserThreshold">
            <summary>
            LesserThreshold
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LesserThreshold.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LesserThreshold.TypeEnum.Lesser">
            <summary>
            Enum Lesser for value: lesser
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LesserThreshold.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LesserThreshold.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LesserThreshold" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LesserThreshold.#ctor(InfluxDB.Client.Api.Domain.LesserThreshold.TypeEnum,System.Nullable{System.Single},System.Nullable{InfluxDB.Client.Api.Domain.CheckStatusLevel},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LesserThreshold" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Lesser).</param>
            <param name="value">value (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LesserThreshold.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LesserThreshold.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LesserThreshold.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LesserThreshold.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LesserThreshold.Equals(InfluxDB.Client.Api.Domain.LesserThreshold)">
            <summary>
            Returns true if LesserThreshold instances are equal
            </summary>
            <param name="input">Instance of LesserThreshold to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LesserThreshold.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties">
            <summary>
            LinePlusSingleStatProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.TypeEnum.LinePlusSingleStat">
            <summary>
            Enum LinePlusSingleStat for value: line-plus-single-stat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.HoverDimensionEnum">
            <summary>
            Defines HoverDimension
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.HoverDimensionEnum.Auto">
            <summary>
            Enum Auto for value: auto
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.HoverDimensionEnum.X">
            <summary>
            Enum X for value: x
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.HoverDimensionEnum.Y">
            <summary>
            Enum Y for value: y
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.HoverDimensionEnum.Xy">
            <summary>
            Enum Xy for value: xy
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.HoverDimension">
            <summary>
            Gets or Sets HoverDimension
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.PositionEnum">
            <summary>
            Defines Position
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.PositionEnum.Overlaid">
            <summary>
            Enum Overlaid for value: overlaid
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.PositionEnum.Stacked">
            <summary>
            Enum Stacked for value: stacked
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Position">
            <summary>
            Gets or Sets Position
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.#ctor(System.String,InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},InfluxDB.Client.Api.Domain.Axes,InfluxDB.Client.Api.Domain.StaticLegend,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.HoverDimensionEnum},InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.PositionEnum,System.String,System.String,InfluxDB.Client.Api.Domain.DecimalPlaces,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties" /> class.
            </summary>
            <param name="timeFormat">timeFormat.</param>
            <param name="type">type (required) (default to TypeEnum.LinePlusSingleStat).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="axes">axes (required).</param>
            <param name="staticLegend">staticLegend.</param>
            <param name="xColumn">xColumn.</param>
            <param name="generateXAxisTicks">generateXAxisTicks.</param>
            <param name="xTotalTicks">xTotalTicks.</param>
            <param name="xTickStart">xTickStart.</param>
            <param name="xTickStep">xTickStep.</param>
            <param name="yColumn">yColumn.</param>
            <param name="generateYAxisTicks">generateYAxisTicks.</param>
            <param name="yTotalTicks">yTotalTicks.</param>
            <param name="yTickStart">yTickStart.</param>
            <param name="yTickStep">yTickStep.</param>
            <param name="shadeBelow">shadeBelow.</param>
            <param name="hoverDimension">hoverDimension.</param>
            <param name="position">position (required).</param>
            <param name="prefix">prefix (required).</param>
            <param name="suffix">suffix (required).</param>
            <param name="decimalPlaces">decimalPlaces (required).</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.TimeFormat">
            <summary>
            Gets or Sets TimeFormat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Axes">
            <summary>
            Gets or Sets Axes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.StaticLegend">
            <summary>
            Gets or Sets StaticLegend
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.XColumn">
            <summary>
            Gets or Sets XColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.GenerateXAxisTicks">
            <summary>
            Gets or Sets GenerateXAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.XTotalTicks">
            <summary>
            Gets or Sets XTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.XTickStart">
            <summary>
            Gets or Sets XTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.XTickStep">
            <summary>
            Gets or Sets XTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.YColumn">
            <summary>
            Gets or Sets YColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.GenerateYAxisTicks">
            <summary>
            Gets or Sets GenerateYAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.YTotalTicks">
            <summary>
            Gets or Sets YTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.YTickStart">
            <summary>
            Gets or Sets YTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.YTickStep">
            <summary>
            Gets or Sets YTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.ShadeBelow">
            <summary>
            Gets or Sets ShadeBelow
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Prefix">
            <summary>
            Gets or Sets Prefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Suffix">
            <summary>
            Gets or Sets Suffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.DecimalPlaces">
            <summary>
            Gets or Sets DecimalPlaces
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.Equals(InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties)">
            <summary>
            Returns true if LinePlusSingleStatProperties instances are equal
            </summary>
            <param name="input">Instance of LinePlusSingleStatProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LinePlusSingleStatProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LineProtocolError">
            <summary>
            LineProtocolError
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LineProtocolError.CodeEnum">
            <summary>
            Code is the machine-readable error code.
            </summary>
            <value>Code is the machine-readable error code.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LineProtocolError.CodeEnum.Internalerror">
            <summary>
            Enum Internalerror for value: internal error
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LineProtocolError.CodeEnum.Notfound">
            <summary>
            Enum Notfound for value: not found
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LineProtocolError.CodeEnum.Conflict">
            <summary>
            Enum Conflict for value: conflict
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LineProtocolError.CodeEnum.Invalid">
            <summary>
            Enum Invalid for value: invalid
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LineProtocolError.CodeEnum.Emptyvalue">
            <summary>
            Enum Emptyvalue for value: empty value
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LineProtocolError.CodeEnum.Unavailable">
            <summary>
            Enum Unavailable for value: unavailable
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LineProtocolError.Code">
            <summary>
            Code is the machine-readable error code.
            </summary>
            <value>Code is the machine-readable error code.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LineProtocolError" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LineProtocolError.Message">
            <summary>
            Human-readable message.
            </summary>
            <value>Human-readable message.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LineProtocolError.Op">
            <summary>
            Describes the logical code operation when the error occurred. Useful for debugging.
            </summary>
            <value>Describes the logical code operation when the error occurred. Useful for debugging.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LineProtocolError.Err">
            <summary>
            Stack of errors that occurred during processing of the request. Useful for debugging.
            </summary>
            <value>Stack of errors that occurred during processing of the request. Useful for debugging.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LineProtocolError.Line">
            <summary>
            First line in the request body that contains malformed data.
            </summary>
            <value>First line in the request body that contains malformed data.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolError.Equals(InfluxDB.Client.Api.Domain.LineProtocolError)">
            <summary>
            Returns true if LineProtocolError instances are equal
            </summary>
            <param name="input">Instance of LineProtocolError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LineProtocolLengthError">
            <summary>
            LineProtocolLengthError
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LineProtocolLengthError.CodeEnum">
            <summary>
            Code is the machine-readable error code.
            </summary>
            <value>Code is the machine-readable error code.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.LineProtocolLengthError.CodeEnum.Invalid">
            <summary>
            Enum Invalid for value: invalid
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LineProtocolLengthError.Code">
            <summary>
            Code is the machine-readable error code.
            </summary>
            <value>Code is the machine-readable error code.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolLengthError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LineProtocolLengthError" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LineProtocolLengthError.Message">
            <summary>
            Human-readable message.
            </summary>
            <value>Human-readable message.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolLengthError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolLengthError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolLengthError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolLengthError.Equals(InfluxDB.Client.Api.Domain.LineProtocolLengthError)">
            <summary>
            Returns true if LineProtocolLengthError instances are equal
            </summary>
            <param name="input">Instance of LineProtocolLengthError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LineProtocolLengthError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Links">
            <summary>
            Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Links.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Links" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Links.Next">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Links.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Links.Prev">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Links.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Links.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Links.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Links.Equals(InfluxDB.Client.Api.Domain.Links)">
            <summary>
            Returns true if Links instances are equal
            </summary>
            <param name="input">Instance of Links to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Links.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ListStacksResponse">
            <summary>
            ListStacksResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ListStacksResponse.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Stack})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ListStacksResponse" /> class.
            </summary>
            <param name="stacks">stacks.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ListStacksResponse.Stacks">
            <summary>
            Gets or Sets Stacks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ListStacksResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ListStacksResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ListStacksResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ListStacksResponse.Equals(InfluxDB.Client.Api.Domain.ListStacksResponse)">
            <summary>
            Returns true if ListStacksResponse instances are equal
            </summary>
            <param name="input">Instance of ListStacksResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ListStacksResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LogEvent">
            <summary>
            LogEvent
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LogEvent" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LogEvent.Time">
            <summary>
            Time event occurred, RFC3339Nano.
            </summary>
            <value>Time event occurred, RFC3339Nano.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LogEvent.Message">
            <summary>
            A description of the event that occurred.
            </summary>
            <value>A description of the event that occurred.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LogEvent.RunID">
            <summary>
            the ID of the task that logged
            </summary>
            <value>the ID of the task that logged</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogEvent.Equals(InfluxDB.Client.Api.Domain.LogEvent)">
            <summary>
            Returns true if LogEvent instances are equal
            </summary>
            <param name="input">Instance of LogEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.LogicalExpression">
            <summary>
            Represents the rule conditions that collectively evaluate to either true or false
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogicalExpression.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.LogicalExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="_operator">_operator.</param>
            <param name="left">left.</param>
            <param name="right">right.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LogicalExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LogicalExpression.Operator">
            <summary>
            Gets or Sets Operator
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LogicalExpression.Left">
            <summary>
            Gets or Sets Left
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.LogicalExpression.Right">
            <summary>
            Gets or Sets Right
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogicalExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogicalExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogicalExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogicalExpression.Equals(InfluxDB.Client.Api.Domain.LogicalExpression)">
            <summary>
            Returns true if LogicalExpression instances are equal
            </summary>
            <param name="input">Instance of LogicalExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.LogicalExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Logs">
            <summary>
            Logs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Logs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Logs" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Logs.Events">
            <summary>
            Gets or Sets Events
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Logs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Logs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Logs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Logs.Equals(InfluxDB.Client.Api.Domain.Logs)">
            <summary>
            Returns true if Logs instances are equal
            </summary>
            <param name="input">Instance of Logs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Logs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MapVariableProperties">
            <summary>
            MapVariableProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MapVariableProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MapVariableProperties.TypeEnum.Map">
            <summary>
            Enum Map for value: map
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MapVariableProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MapVariableProperties.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.MapVariableProperties.TypeEnum},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MapVariableProperties" /> class.
            </summary>
            <param name="type">type.</param>
            <param name="values">values.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MapVariableProperties.Values">
            <summary>
            Gets or Sets Values
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MapVariableProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MapVariableProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MapVariableProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MapVariableProperties.Equals(InfluxDB.Client.Api.Domain.MapVariableProperties)">
            <summary>
            Returns true if MapVariableProperties instances are equal
            </summary>
            <param name="input">Instance of MapVariableProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MapVariableProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MarkdownViewProperties">
            <summary>
            MarkdownViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MarkdownViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MarkdownViewProperties.TypeEnum.Markdown">
            <summary>
            Enum Markdown for value: markdown
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MarkdownViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MarkdownViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MarkdownViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MarkdownViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MarkdownViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MarkdownViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MarkdownViewProperties.#ctor(InfluxDB.Client.Api.Domain.MarkdownViewProperties.TypeEnum,InfluxDB.Client.Api.Domain.MarkdownViewProperties.ShapeEnum,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MarkdownViewProperties" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Markdown).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MarkdownViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MarkdownViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MarkdownViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MarkdownViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MarkdownViewProperties.Equals(InfluxDB.Client.Api.Domain.MarkdownViewProperties)">
            <summary>
            Returns true if MarkdownViewProperties instances are equal
            </summary>
            <param name="input">Instance of MarkdownViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MarkdownViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MemberAssignment">
            <summary>
            Object property assignment
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberAssignment.#ctor(System.String,InfluxDB.Client.Api.Domain.MemberExpression,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MemberAssignment" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="member">member.</param>
            <param name="init">init.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MemberAssignment.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MemberAssignment.Member">
            <summary>
            Gets or Sets Member
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MemberAssignment.Init">
            <summary>
            Gets or Sets Init
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberAssignment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberAssignment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberAssignment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberAssignment.Equals(InfluxDB.Client.Api.Domain.MemberAssignment)">
            <summary>
            Returns true if MemberAssignment instances are equal
            </summary>
            <param name="input">Instance of MemberAssignment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberAssignment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MemberExpression">
            <summary>
            Represents accessing a property of an object
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberExpression.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.PropertyKey)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MemberExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="_object">_object.</param>
            <param name="property">property.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MemberExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MemberExpression.Object">
            <summary>
            Gets or Sets Object
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MemberExpression.Property">
            <summary>
            Gets or Sets Property
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberExpression.Equals(InfluxDB.Client.Api.Domain.MemberExpression)">
            <summary>
            Returns true if MemberExpression instances are equal
            </summary>
            <param name="input">Instance of MemberExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MemberExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MetadataBackup">
            <summary>
            MetadataBackup
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MetadataBackup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MetadataBackup" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MetadataBackup.#ctor(System.IO.Stream,System.IO.Stream,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.BucketMetadataManifest})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MetadataBackup" /> class.
            </summary>
            <param name="kv">kv (required).</param>
            <param name="sql">sql (required).</param>
            <param name="buckets">buckets (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MetadataBackup.Kv">
            <summary>
            Gets or Sets Kv
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MetadataBackup.Sql">
            <summary>
            Gets or Sets Sql
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MetadataBackup.Buckets">
            <summary>
            Gets or Sets Buckets
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MetadataBackup.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MetadataBackup.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MetadataBackup.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MetadataBackup.Equals(InfluxDB.Client.Api.Domain.MetadataBackup)">
            <summary>
            Returns true if MetadataBackup instances are equal
            </summary>
            <param name="input">Instance of MetadataBackup to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MetadataBackup.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MosaicViewProperties">
            <summary>
            MosaicViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MosaicViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MosaicViewProperties.TypeEnum.Mosaic">
            <summary>
            Enum Mosaic for value: mosaic
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MosaicViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MosaicViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.MosaicViewProperties.HoverDimensionEnum">
            <summary>
            Defines HoverDimension
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MosaicViewProperties.HoverDimensionEnum.Auto">
            <summary>
            Enum Auto for value: auto
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MosaicViewProperties.HoverDimensionEnum.X">
            <summary>
            Enum X for value: x
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MosaicViewProperties.HoverDimensionEnum.Y">
            <summary>
            Enum Y for value: y
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.MosaicViewProperties.HoverDimensionEnum.Xy">
            <summary>
            Enum Xy for value: xy
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.HoverDimension">
            <summary>
            Gets or Sets HoverDimension
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MosaicViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MosaicViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MosaicViewProperties.#ctor(System.String,InfluxDB.Client.Api.Domain.MosaicViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.MosaicViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Nullable{System.Decimal}},System.Collections.Generic.List{System.Nullable{System.Decimal}},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.MosaicViewProperties.HoverDimensionEnum},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.MosaicViewProperties" /> class.
            </summary>
            <param name="timeFormat">timeFormat.</param>
            <param name="type">type (required) (default to TypeEnum.Mosaic).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="xColumn">xColumn (required).</param>
            <param name="generateXAxisTicks">generateXAxisTicks.</param>
            <param name="xTotalTicks">xTotalTicks.</param>
            <param name="xTickStart">xTickStart.</param>
            <param name="xTickStep">xTickStep.</param>
            <param name="yLabelColumnSeparator">yLabelColumnSeparator.</param>
            <param name="yLabelColumns">yLabelColumns.</param>
            <param name="ySeriesColumns">ySeriesColumns (required).</param>
            <param name="fillColumns">fillColumns (required).</param>
            <param name="xDomain">xDomain (required).</param>
            <param name="yDomain">yDomain (required).</param>
            <param name="xAxisLabel">xAxisLabel (required).</param>
            <param name="yAxisLabel">yAxisLabel (required).</param>
            <param name="xPrefix">xPrefix (required).</param>
            <param name="xSuffix">xSuffix (required).</param>
            <param name="yPrefix">yPrefix (required).</param>
            <param name="ySuffix">ySuffix (required).</param>
            <param name="hoverDimension">hoverDimension.</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.TimeFormat">
            <summary>
            Gets or Sets TimeFormat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XColumn">
            <summary>
            Gets or Sets XColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.GenerateXAxisTicks">
            <summary>
            Gets or Sets GenerateXAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XTotalTicks">
            <summary>
            Gets or Sets XTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XTickStart">
            <summary>
            Gets or Sets XTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XTickStep">
            <summary>
            Gets or Sets XTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.YLabelColumnSeparator">
            <summary>
            Gets or Sets YLabelColumnSeparator
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.YLabelColumns">
            <summary>
            Gets or Sets YLabelColumns
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.YSeriesColumns">
            <summary>
            Gets or Sets YSeriesColumns
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.FillColumns">
            <summary>
            Gets or Sets FillColumns
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XDomain">
            <summary>
            Gets or Sets XDomain
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.YDomain">
            <summary>
            Gets or Sets YDomain
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XAxisLabel">
            <summary>
            Gets or Sets XAxisLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.YAxisLabel">
            <summary>
            Gets or Sets YAxisLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XPrefix">
            <summary>
            Gets or Sets XPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.XSuffix">
            <summary>
            Gets or Sets XSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.YPrefix">
            <summary>
            Gets or Sets YPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.YSuffix">
            <summary>
            Gets or Sets YSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.MosaicViewProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MosaicViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MosaicViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MosaicViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MosaicViewProperties.Equals(InfluxDB.Client.Api.Domain.MosaicViewProperties)">
            <summary>
            Returns true if MosaicViewProperties instances are equal
            </summary>
            <param name="input">Instance of MosaicViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.MosaicViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Node">
            <summary>
            Node
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Node.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Node" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Node.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Node.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Node.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Node.Equals(InfluxDB.Client.Api.Domain.Node)">
            <summary>
            Returns true if Node instances are equal
            </summary>
            <param name="input">Instance of Node to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Node.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpoint">
            <summary>
            NotificationEndpoint
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpoint" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoint.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks,InfluxDB.Client.Api.Domain.NotificationEndpointType)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpoint" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoint.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoint.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoint.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoint.Equals(InfluxDB.Client.Api.Domain.NotificationEndpoint)">
            <summary>
            Returns true if NotificationEndpoint instances are equal
            </summary>
            <param name="input">Instance of NotificationEndpoint to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoint.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpointBase">
            <summary>
            NotificationEndpointBase
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum">
            <summary>
            The status of the endpoint.
            </summary>
            <value>The status of the endpoint.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Status">
            <summary>
            The status of the endpoint.
            </summary>
            <value>The status of the endpoint.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks,InfluxDB.Client.Api.Domain.NotificationEndpointType)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointBase" /> class.
            </summary>
            <param name="id">id.</param>
            <param name="orgID">orgID.</param>
            <param name="userID">userID.</param>
            <param name="description">An optional description of the notification endpoint..</param>
            <param name="name">name (required).</param>
            <param name="status">The status of the endpoint. (default to StatusEnum.Active).</param>
            <param name="labels">labels.</param>
            <param name="links">links.</param>
            <param name="type">type (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.UserID">
            <summary>
            Gets or Sets UserID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Description">
            <summary>
            An optional description of the notification endpoint.
            </summary>
            <value>An optional description of the notification endpoint.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBase.Equals(InfluxDB.Client.Api.Domain.NotificationEndpointBase)">
            <summary>
            Returns true if NotificationEndpointBase instances are equal
            </summary>
            <param name="input">Instance of NotificationEndpointBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks">
            <summary>
            NotificationEndpointBaseLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.Equals(InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks)">
            <summary>
            Returns true if NotificationEndpointBaseLinks instances are equal
            </summary>
            <param name="input">Instance of NotificationEndpointBaseLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator">
            <summary>
            NotificationEndpointDiscriminator
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks,InfluxDB.Client.Api.Domain.NotificationEndpointType)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator.Equals(InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator)">
            <summary>
            Returns true if NotificationEndpointDiscriminator instances are equal
            </summary>
            <param name="input">Instance of NotificationEndpointDiscriminator to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpoints">
            <summary>
            NotificationEndpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoints.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.NotificationEndpoint},InfluxDB.Client.Api.Domain.Links)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpoints" /> class.
            </summary>
            <param name="notificationEndpoints">notificationEndpoints.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpoints._NotificationEndpoints">
            <summary>
            Gets or Sets _NotificationEndpoints
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpoints.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoints.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoints.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoints.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoints.Equals(InfluxDB.Client.Api.Domain.NotificationEndpoints)">
            <summary>
            Returns true if NotificationEndpoints instances are equal
            </summary>
            <param name="input">Instance of NotificationEndpoints to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpoints.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpointType">
            <summary>
            Defines NotificationEndpointType
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointType.Slack">
            <summary>
            Enum Slack for value: slack
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointType.Pagerduty">
            <summary>
            Enum Pagerduty for value: pagerduty
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointType.Http">
            <summary>
            Enum Http for value: http
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointType.Telegram">
            <summary>
            Enum Telegram for value: telegram
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate">
            <summary>
            NotificationEndpointUpdate
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.StatusEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.Equals(InfluxDB.Client.Api.Domain.NotificationEndpointUpdate)">
            <summary>
            Returns true if NotificationEndpointUpdate instances are equal
            </summary>
            <param name="input">Instance of NotificationEndpointUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRule">
            <summary>
            NotificationRule
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRule.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRule.Equals(InfluxDB.Client.Api.Domain.NotificationRule)">
            <summary>
            Returns true if NotificationRule instances are equal
            </summary>
            <param name="input">Instance of NotificationRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRuleBase">
            <summary>
            NotificationRuleBase
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRuleBase.LastRunStatusEnum">
            <summary>
            Defines LastRunStatus
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationRuleBase.LastRunStatusEnum.Failed">
            <summary>
            Enum Failed for value: failed
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationRuleBase.LastRunStatusEnum.Success">
            <summary>
            Enum Success for value: success
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationRuleBase.LastRunStatusEnum.Canceled">
            <summary>
            Enum Canceled for value: canceled
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.LastRunStatus">
            <summary>
            Gets or Sets LastRunStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRuleBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBase.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRuleBase" /> class.
            </summary>
            <param name="endpointID">endpointID (required).</param>
            <param name="orgID">The ID of the organization that owns this notification rule. (required).</param>
            <param name="taskID">The ID of the task associated with this notification rule..</param>
            <param name="status">status (required).</param>
            <param name="name">Human-readable name describing the notification rule. (required).</param>
            <param name="sleepUntil">sleepUntil.</param>
            <param name="every">The notification repetition interval..</param>
            <param name="offset">Duration to delay after the schedule, before executing check..</param>
            <param name="runbookLink">runbookLink.</param>
            <param name="limitEvery">Don&#39;t notify me more than &lt;limit&gt; times every &lt;limitEvery&gt; seconds. If set, limit cannot be empty..</param>
            <param name="limit">Don&#39;t notify me more than &lt;limit&gt; times every &lt;limitEvery&gt; seconds. If set, limitEvery cannot be empty..</param>
            <param name="tagRules">List of tag rules the notification rule attempts to match..</param>
            <param name="description">An optional description of the notification rule..</param>
            <param name="statusRules">List of status rules the notification rule attempts to match. (required).</param>
            <param name="labels">labels.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.LatestCompleted">
            <summary>
            Timestamp (in RFC3339 date/time format](https://datatracker.ietf.org/doc/html/rfc3339)) of the latest scheduled and completed run.
            </summary>
            <value>Timestamp (in RFC3339 date/time format](https://datatracker.ietf.org/doc/html/rfc3339)) of the latest scheduled and completed run.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.LastRunError">
            <summary>
            Gets or Sets LastRunError
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.EndpointID">
            <summary>
            Gets or Sets EndpointID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.OrgID">
            <summary>
            The ID of the organization that owns this notification rule.
            </summary>
            <value>The ID of the organization that owns this notification rule.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.TaskID">
            <summary>
            The ID of the task associated with this notification rule.
            </summary>
            <value>The ID of the task associated with this notification rule.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.OwnerID">
            <summary>
            The ID of creator used to create this notification rule.
            </summary>
            <value>The ID of creator used to create this notification rule.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Name">
            <summary>
            Human-readable name describing the notification rule.
            </summary>
            <value>Human-readable name describing the notification rule.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.SleepUntil">
            <summary>
            Gets or Sets SleepUntil
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Every">
            <summary>
            The notification repetition interval.
            </summary>
            <value>The notification repetition interval.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Offset">
            <summary>
            Duration to delay after the schedule, before executing check.
            </summary>
            <value>Duration to delay after the schedule, before executing check.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.RunbookLink">
            <summary>
            Gets or Sets RunbookLink
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.LimitEvery">
            <summary>
            Don&#39;t notify me more than &lt;limit&gt; times every &lt;limitEvery&gt; seconds. If set, limit cannot be empty.
            </summary>
            <value>Don&#39;t notify me more than &lt;limit&gt; times every &lt;limitEvery&gt; seconds. If set, limit cannot be empty.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Limit">
            <summary>
            Don&#39;t notify me more than &lt;limit&gt; times every &lt;limitEvery&gt; seconds. If set, limitEvery cannot be empty.
            </summary>
            <value>Don&#39;t notify me more than &lt;limit&gt; times every &lt;limitEvery&gt; seconds. If set, limitEvery cannot be empty.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.TagRules">
            <summary>
            List of tag rules the notification rule attempts to match.
            </summary>
            <value>List of tag rules the notification rule attempts to match.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Description">
            <summary>
            An optional description of the notification rule.
            </summary>
            <value>An optional description of the notification rule.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.StatusRules">
            <summary>
            List of status rules the notification rule attempts to match.
            </summary>
            <value>List of status rules the notification rule attempts to match.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBase.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBase.Equals(InfluxDB.Client.Api.Domain.NotificationRuleBase)">
            <summary>
            Returns true if NotificationRuleBase instances are equal
            </summary>
            <param name="input">Instance of NotificationRuleBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks">
            <summary>
            NotificationRuleBaseLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.Query">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.Equals(InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Returns true if NotificationRuleBaseLinks instances are equal
            </summary>
            <param name="input">Instance of NotificationRuleBaseLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator">
            <summary>
            NotificationRuleDiscriminator
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator.Equals(InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator)">
            <summary>
            Returns true if NotificationRuleDiscriminator instances are equal
            </summary>
            <param name="input">Instance of NotificationRuleDiscriminator to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleDiscriminator.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRules">
            <summary>
            NotificationRules
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRules.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.NotificationRule},InfluxDB.Client.Api.Domain.Links)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRules" /> class.
            </summary>
            <param name="notificationRules">notificationRules.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRules._NotificationRules">
            <summary>
            Gets or Sets _NotificationRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRules.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRules.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRules.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRules.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRules.Equals(InfluxDB.Client.Api.Domain.NotificationRules)">
            <summary>
            Returns true if NotificationRules instances are equal
            </summary>
            <param name="input">Instance of NotificationRules to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRules.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRuleUpdate">
            <summary>
            NotificationRuleUpdate
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationRuleUpdate.StatusEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRuleUpdate" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.Equals(InfluxDB.Client.Api.Domain.NotificationRuleUpdate)">
            <summary>
            Returns true if NotificationRuleUpdate instances are equal
            </summary>
            <param name="input">Instance of NotificationRuleUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.NotificationRuleUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ObjectExpression">
            <summary>
            Allows the declaration of an anonymous object within a declaration
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ObjectExpression.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Property})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ObjectExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="properties">Object properties.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ObjectExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ObjectExpression.Properties">
            <summary>
            Object properties
            </summary>
            <value>Object properties</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ObjectExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ObjectExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ObjectExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ObjectExpression.Equals(InfluxDB.Client.Api.Domain.ObjectExpression)">
            <summary>
            Returns true if ObjectExpression instances are equal
            </summary>
            <param name="input">Instance of ObjectExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ObjectExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.OnboardingRequest">
            <summary>
            OnboardingRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.OnboardingRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingRequest.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.OnboardingRequest" /> class.
            </summary>
            <param name="username">username (required).</param>
            <param name="password">password.</param>
            <param name="org">org (required).</param>
            <param name="bucket">bucket (required).</param>
            <param name="retentionPeriodSeconds">retentionPeriodSeconds.</param>
            <param name="retentionPeriodHrs">Retention period *in nanoseconds* for the new bucket. This key&#39;s name has been misleading since OSS 2.0 GA, please transition to use &#x60;retentionPeriodSeconds&#x60;.</param>
            <param name="token">Authentication token to set on the initial user. If not specified, the server will generate a token..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingRequest.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingRequest.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingRequest.Org">
            <summary>
            Gets or Sets Org
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingRequest.Bucket">
            <summary>
            Gets or Sets Bucket
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingRequest.RetentionPeriodSeconds">
            <summary>
            Gets or Sets RetentionPeriodSeconds
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingRequest.RetentionPeriodHrs">
            <summary>
            Retention period *in nanoseconds* for the new bucket. This key&#39;s name has been misleading since OSS 2.0 GA, please transition to use &#x60;retentionPeriodSeconds&#x60;
            </summary>
            <value>Retention period *in nanoseconds* for the new bucket. This key&#39;s name has been misleading since OSS 2.0 GA, please transition to use &#x60;retentionPeriodSeconds&#x60;</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingRequest.Token">
            <summary>
            Authentication token to set on the initial user. If not specified, the server will generate a token.
            </summary>
            <value>Authentication token to set on the initial user. If not specified, the server will generate a token.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingRequest.Equals(InfluxDB.Client.Api.Domain.OnboardingRequest)">
            <summary>
            Returns true if OnboardingRequest instances are equal
            </summary>
            <param name="input">Instance of OnboardingRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.OnboardingResponse">
            <summary>
            OnboardingResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingResponse.#ctor(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,InfluxDB.Client.Api.Domain.Bucket,InfluxDB.Client.Api.Domain.Authorization)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.OnboardingResponse" /> class.
            </summary>
            <param name="user">user.</param>
            <param name="org">org.</param>
            <param name="bucket">bucket.</param>
            <param name="auth">auth.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingResponse.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingResponse.Org">
            <summary>
            Gets or Sets Org
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingResponse.Bucket">
            <summary>
            Gets or Sets Bucket
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OnboardingResponse.Auth">
            <summary>
            Gets or Sets Auth
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingResponse.Equals(InfluxDB.Client.Api.Domain.OnboardingResponse)">
            <summary>
            Returns true if OnboardingResponse instances are equal
            </summary>
            <param name="input">Instance of OnboardingResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OnboardingResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.OptionStatement">
            <summary>
            A single variable declaration
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OptionStatement.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.OptionStatement" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="assignment">assignment.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OptionStatement.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OptionStatement.Assignment">
            <summary>
            Gets or Sets Assignment
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OptionStatement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OptionStatement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OptionStatement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OptionStatement.Equals(InfluxDB.Client.Api.Domain.OptionStatement)">
            <summary>
            Returns true if OptionStatement instances are equal
            </summary>
            <param name="input">Instance of OptionStatement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OptionStatement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Organization">
            <summary>
            Organization
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Organization.StatusEnum">
            <summary>
            If inactive the organization is inactive.
            </summary>
            <value>If inactive the organization is inactive.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Organization.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Organization.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organization.Status">
            <summary>
            If inactive the organization is inactive.
            </summary>
            <value>If inactive the organization is inactive.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Organization" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organization.#ctor(InfluxDB.Client.Api.Domain.OrganizationLinks,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.Organization.StatusEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Organization" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="status">If inactive the organization is inactive. (default to StatusEnum.Active).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organization.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organization.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organization.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organization.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organization.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organization.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organization.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organization.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organization.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organization.Equals(InfluxDB.Client.Api.Domain.Organization)">
            <summary>
            Returns true if Organization instances are equal
            </summary>
            <param name="input">Instance of Organization to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organization.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.OrganizationLinks">
            <summary>
            OrganizationLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OrganizationLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.OrganizationLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Secrets">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Buckets">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Tasks">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.OrganizationLinks.Dashboards">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OrganizationLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OrganizationLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OrganizationLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OrganizationLinks.Equals(InfluxDB.Client.Api.Domain.OrganizationLinks)">
            <summary>
            Returns true if OrganizationLinks instances are equal
            </summary>
            <param name="input">Instance of OrganizationLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.OrganizationLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Organizations">
            <summary>
            Organizations
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organizations.#ctor(InfluxDB.Client.Api.Domain.Links,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Organization})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Organizations" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="orgs">orgs.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organizations.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Organizations.Orgs">
            <summary>
            Gets or Sets Orgs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organizations.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organizations.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organizations.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organizations.Equals(InfluxDB.Client.Api.Domain.Organizations)">
            <summary>
            Returns true if Organizations instances are equal
            </summary>
            <param name="input">Instance of Organizations to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Organizations.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Package">
            <summary>
            Represents a complete package source tree.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Package.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.File})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Package" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="path">Package import path.</param>
            <param name="package">Package name.</param>
            <param name="files">Package files.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Package.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Package.Path">
            <summary>
            Package import path
            </summary>
            <value>Package import path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Package._Package">
            <summary>
            Package name
            </summary>
            <value>Package name</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Package.Files">
            <summary>
            Package files
            </summary>
            <value>Package files</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Package.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Package.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Package.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Package.Equals(InfluxDB.Client.Api.Domain.Package)">
            <summary>
            Returns true if Package instances are equal
            </summary>
            <param name="input">Instance of Package to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Package.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PackageClause">
            <summary>
            Defines a package identifier
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PackageClause.#ctor(System.String,InfluxDB.Client.Api.Domain.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PackageClause" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="name">name.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PackageClause.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PackageClause.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PackageClause.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PackageClause.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PackageClause.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PackageClause.Equals(InfluxDB.Client.Api.Domain.PackageClause)">
            <summary>
            Returns true if PackageClause instances are equal
            </summary>
            <param name="input">Instance of PackageClause to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PackageClause.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint">
            <summary>
            PagerDutyNotificationEndpoint
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks,InfluxDB.Client.Api.Domain.NotificationEndpointType)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint" /> class.
            </summary>
            <param name="clientURL">clientURL.</param>
            <param name="routingKey">routingKey (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.ClientURL">
            <summary>
            Gets or Sets ClientURL
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.RoutingKey">
            <summary>
            Gets or Sets RoutingKey
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.Equals(InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint)">
            <summary>
            Returns true if PagerDutyNotificationEndpoint instances are equal
            </summary>
            <param name="input">Instance of PagerDutyNotificationEndpoint to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule">
            <summary>
            PagerDutyNotificationRule
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks,InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.TypeEnum,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule.Equals(InfluxDB.Client.Api.Domain.PagerDutyNotificationRule)">
            <summary>
            Returns true if PagerDutyNotificationRule instances are equal
            </summary>
            <param name="input">Instance of PagerDutyNotificationRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase">
            <summary>
            PagerDutyNotificationRuleBase
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.TypeEnum.Pagerduty">
            <summary>
            Enum Pagerduty for value: pagerduty
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.#ctor(InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.TypeEnum,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Pagerduty).</param>
            <param name="messageTemplate">messageTemplate (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.MessageTemplate">
            <summary>
            Gets or Sets MessageTemplate
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.Equals(InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase)">
            <summary>
            Returns true if PagerDutyNotificationRuleBase instances are equal
            </summary>
            <param name="input">Instance of PagerDutyNotificationRuleBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PagerDutyNotificationRuleBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ParenExpression">
            <summary>
            Represents an expression wrapped in parenthesis
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ParenExpression.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ParenExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="expression">expression.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ParenExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ParenExpression.Expression">
            <summary>
            Gets or Sets Expression
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ParenExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ParenExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ParenExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ParenExpression.Equals(InfluxDB.Client.Api.Domain.ParenExpression)">
            <summary>
            Returns true if ParenExpression instances are equal
            </summary>
            <param name="input">Instance of ParenExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ParenExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PasswordResetBody">
            <summary>
            PasswordResetBody
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PasswordResetBody.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PasswordResetBody" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PasswordResetBody.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PasswordResetBody" /> class.
            </summary>
            <param name="password">password (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PasswordResetBody.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PasswordResetBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PasswordResetBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PasswordResetBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PasswordResetBody.Equals(InfluxDB.Client.Api.Domain.PasswordResetBody)">
            <summary>
            Returns true if PasswordResetBody instances are equal
            </summary>
            <param name="input">Instance of PasswordResetBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PasswordResetBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PatchBucketRequest">
            <summary>
            Updates to an existing bucket resource.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchBucketRequest.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.PatchRetentionRule})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchBucketRequest" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="retentionRules">Updates to rules to expire or retain data. No rules means no updates..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchBucketRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchBucketRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchBucketRequest.RetentionRules">
            <summary>
            Updates to rules to expire or retain data. No rules means no updates.
            </summary>
            <value>Updates to rules to expire or retain data. No rules means no updates.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchBucketRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchBucketRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchBucketRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchBucketRequest.Equals(InfluxDB.Client.Api.Domain.PatchBucketRequest)">
            <summary>
            Returns true if PatchBucketRequest instances are equal
            </summary>
            <param name="input">Instance of PatchBucketRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchBucketRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PatchDashboardRequest">
            <summary>
            PatchDashboardRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchDashboardRequest.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.CellWithViewProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchDashboardRequest" /> class.
            </summary>
            <param name="name">optional, when provided will replace the name.</param>
            <param name="description">optional, when provided will replace the description.</param>
            <param name="cells">cells.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchDashboardRequest.Name">
            <summary>
            optional, when provided will replace the name
            </summary>
            <value>optional, when provided will replace the name</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchDashboardRequest.Description">
            <summary>
            optional, when provided will replace the description
            </summary>
            <value>optional, when provided will replace the description</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchDashboardRequest.Cells">
            <summary>
            Gets or Sets Cells
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchDashboardRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchDashboardRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchDashboardRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchDashboardRequest.Equals(InfluxDB.Client.Api.Domain.PatchDashboardRequest)">
            <summary>
            Returns true if PatchDashboardRequest instances are equal
            </summary>
            <param name="input">Instance of PatchDashboardRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchDashboardRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PatchOrganizationRequest">
            <summary>
            PatchOrganizationRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchOrganizationRequest" /> class.
            </summary>
            <param name="name">New name to set on the organization.</param>
            <param name="description">New description to set on the organization.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.Name">
            <summary>
            New name to set on the organization
            </summary>
            <value>New name to set on the organization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.Description">
            <summary>
            New description to set on the organization
            </summary>
            <value>New description to set on the organization</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.Equals(InfluxDB.Client.Api.Domain.PatchOrganizationRequest)">
            <summary>
            Returns true if PatchOrganizationRequest instances are equal
            </summary>
            <param name="input">Instance of PatchOrganizationRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchOrganizationRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PatchRetentionRule">
            <summary>
            Updates to a rule to expire or retain data.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PatchRetentionRule.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.PatchRetentionRule.TypeEnum.Expire">
            <summary>
            Enum Expire for value: expire
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchRetentionRule.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchRetentionRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchRetentionRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchRetentionRule.#ctor(InfluxDB.Client.Api.Domain.PatchRetentionRule.TypeEnum,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchRetentionRule" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Expire).</param>
            <param name="everySeconds">Duration in seconds for how long data will be kept in the database. 0 means infinite..</param>
            <param name="shardGroupDurationSeconds">Shard duration measured in seconds..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchRetentionRule.EverySeconds">
            <summary>
            Duration in seconds for how long data will be kept in the database. 0 means infinite.
            </summary>
            <value>Duration in seconds for how long data will be kept in the database. 0 means infinite.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchRetentionRule.ShardGroupDurationSeconds">
            <summary>
            Shard duration measured in seconds.
            </summary>
            <value>Shard duration measured in seconds.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchRetentionRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchRetentionRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchRetentionRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchRetentionRule.Equals(InfluxDB.Client.Api.Domain.PatchRetentionRule)">
            <summary>
            Returns true if PatchRetentionRule instances are equal
            </summary>
            <param name="input">Instance of PatchRetentionRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchRetentionRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PatchStackRequest">
            <summary>
            PatchStackRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequest.#ctor(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchStackRequest" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="templateURLs">templateURLs.</param>
            <param name="additionalResources">additionalResources.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchStackRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchStackRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchStackRequest.TemplateURLs">
            <summary>
            Gets or Sets TemplateURLs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchStackRequest.AdditionalResources">
            <summary>
            Gets or Sets AdditionalResources
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequest.Equals(InfluxDB.Client.Api.Domain.PatchStackRequest)">
            <summary>
            Returns true if PatchStackRequest instances are equal
            </summary>
            <param name="input">Instance of PatchStackRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources">
            <summary>
            PatchStackRequestAdditionalResources
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources" /> class.
            </summary>
            <param name="resourceID">resourceID (required).</param>
            <param name="kind">kind (required).</param>
            <param name="templateMetaName">templateMetaName.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.ResourceID">
            <summary>
            Gets or Sets ResourceID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.Equals(InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources)">
            <summary>
            Returns true if PatchStackRequestAdditionalResources instances are equal
            </summary>
            <param name="input">Instance of PatchStackRequestAdditionalResources to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PatchStackRequestAdditionalResources.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Permission">
            <summary>
            Permission
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Permission.ActionEnum">
            <summary>
            Defines Action
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Permission.ActionEnum.Read">
            <summary>
            Enum Read for value: read
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Permission.ActionEnum.Write">
            <summary>
            Enum Write for value: write
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Permission.Action">
            <summary>
            Gets or Sets Action
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Permission.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Permission" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Permission.#ctor(InfluxDB.Client.Api.Domain.Permission.ActionEnum,InfluxDB.Client.Api.Domain.PermissionResource)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Permission" /> class.
            </summary>
            <param name="action">action (required).</param>
            <param name="resource">resource (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Permission.Resource">
            <summary>
            Gets or Sets Resource
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Permission.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Permission.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Permission.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Permission.Equals(InfluxDB.Client.Api.Domain.Permission)">
            <summary>
            Returns true if Permission instances are equal
            </summary>
            <param name="input">Instance of Permission to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Permission.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PermissionResource">
            <summary>
            PermissionResource
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PermissionResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PermissionResource" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PermissionResource.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PermissionResource" /> class.
            </summary>
            <param name="type">type (required).</param>
            <param name="id">If ID is set that is a permission for a specific resource. if it is not set it is a permission for all resources of that resource type..</param>
            <param name="name">Optional name of the resource if the resource has a name field..</param>
            <param name="orgID">If orgID is set that is a permission for all resources owned my that org. if it is not set it is a permission for all resources of that resource type..</param>
            <param name="org">Optional name of the organization of the organization with orgID..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PermissionResource.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PermissionResource.Id">
            <summary>
            If ID is set that is a permission for a specific resource. if it is not set it is a permission for all resources of that resource type.
            </summary>
            <value>If ID is set that is a permission for a specific resource. if it is not set it is a permission for all resources of that resource type.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PermissionResource.Name">
            <summary>
            Optional name of the resource if the resource has a name field.
            </summary>
            <value>Optional name of the resource if the resource has a name field.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PermissionResource.OrgID">
            <summary>
            If orgID is set that is a permission for all resources owned my that org. if it is not set it is a permission for all resources of that resource type.
            </summary>
            <value>If orgID is set that is a permission for all resources owned my that org. if it is not set it is a permission for all resources of that resource type.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PermissionResource.Org">
            <summary>
            Optional name of the organization of the organization with orgID.
            </summary>
            <value>Optional name of the organization of the organization with orgID.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PermissionResource.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PermissionResource.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PermissionResource.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PermissionResource.Equals(InfluxDB.Client.Api.Domain.PermissionResource)">
            <summary>
            Returns true if PermissionResource instances are equal
            </summary>
            <param name="input">Instance of PermissionResource to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PermissionResource.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PipeExpression">
            <summary>
            Call expression with pipe argument
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeExpression.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression,InfluxDB.Client.Api.Domain.CallExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PipeExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="argument">argument.</param>
            <param name="call">call.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PipeExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PipeExpression.Argument">
            <summary>
            Gets or Sets Argument
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PipeExpression.Call">
            <summary>
            Gets or Sets Call
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeExpression.Equals(InfluxDB.Client.Api.Domain.PipeExpression)">
            <summary>
            Returns true if PipeExpression instances are equal
            </summary>
            <param name="input">Instance of PipeExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PipeLiteral">
            <summary>
            Represents a specialized literal value, indicating the left hand value of a pipe expression
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeLiteral.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PipeLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PipeLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeLiteral.Equals(InfluxDB.Client.Api.Domain.PipeLiteral)">
            <summary>
            Returns true if PipeLiteral instances are equal
            </summary>
            <param name="input">Instance of PipeLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PipeLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PostBucketRequest">
            <summary>
            PostBucketRequest
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostBucketRequest.SchemaType">
            <summary>
            Gets or Sets SchemaType
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostBucketRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostBucketRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostBucketRequest.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.BucketRetentionRules},System.Nullable{InfluxDB.Client.Api.Domain.SchemaType})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostBucketRequest" /> class.
            </summary>
            <param name="orgID">orgID (required).</param>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="rp">rp.</param>
            <param name="retentionRules">Rules to expire or retain data.  No rules means data never expires. (required).</param>
            <param name="schemaType">schemaType.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostBucketRequest.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostBucketRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostBucketRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostBucketRequest.Rp">
            <summary>
            Gets or Sets Rp
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostBucketRequest.RetentionRules">
            <summary>
            Rules to expire or retain data.  No rules means data never expires.
            </summary>
            <value>Rules to expire or retain data.  No rules means data never expires.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostBucketRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostBucketRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostBucketRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostBucketRequest.Equals(InfluxDB.Client.Api.Domain.PostBucketRequest)">
            <summary>
            Returns true if PostBucketRequest instances are equal
            </summary>
            <param name="input">Instance of PostBucketRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostBucketRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PostOrganizationRequest">
            <summary>
            PostOrganizationRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostOrganizationRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostOrganizationRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostOrganizationRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostOrganizationRequest" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostOrganizationRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostOrganizationRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostOrganizationRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostOrganizationRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostOrganizationRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostOrganizationRequest.Equals(InfluxDB.Client.Api.Domain.PostOrganizationRequest)">
            <summary>
            Returns true if PostOrganizationRequest instances are equal
            </summary>
            <param name="input">Instance of PostOrganizationRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostOrganizationRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PostRestoreKVResponse">
            <summary>
            PostRestoreKVResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostRestoreKVResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostRestoreKVResponse" /> class.
            </summary>
            <param name="token">token is the root token for the instance after restore (this is overwritten during the restore).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostRestoreKVResponse.Token">
            <summary>
            token is the root token for the instance after restore (this is overwritten during the restore)
            </summary>
            <value>token is the root token for the instance after restore (this is overwritten during the restore)</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostRestoreKVResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostRestoreKVResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostRestoreKVResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostRestoreKVResponse.Equals(InfluxDB.Client.Api.Domain.PostRestoreKVResponse)">
            <summary>
            Returns true if PostRestoreKVResponse instances are equal
            </summary>
            <param name="input">Instance of PostRestoreKVResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostRestoreKVResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PostStackRequest">
            <summary>
            PostStackRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostStackRequest.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostStackRequest" /> class.
            </summary>
            <param name="orgID">orgID.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="urls">urls.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostStackRequest.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostStackRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostStackRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostStackRequest.Urls">
            <summary>
            Gets or Sets Urls
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostStackRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostStackRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostStackRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostStackRequest.Equals(InfluxDB.Client.Api.Domain.PostStackRequest)">
            <summary>
            Returns true if PostStackRequest instances are equal
            </summary>
            <param name="input">Instance of PostStackRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostStackRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PostUser">
            <summary>
            PostUser
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PostUser.StatusEnum">
            <summary>
            If inactive the user is inactive.
            </summary>
            <value>If inactive the user is inactive.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.PostUser.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.PostUser.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostUser.Status">
            <summary>
            If inactive the user is inactive.
            </summary>
            <value>If inactive the user is inactive.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostUser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostUser" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostUser.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.PostUser.StatusEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PostUser" /> class.
            </summary>
            <param name="oauthID">oauthID.</param>
            <param name="name">name (required).</param>
            <param name="status">If inactive the user is inactive. (default to StatusEnum.Active).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostUser.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostUser.OauthID">
            <summary>
            Gets or Sets OauthID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.PostUser.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostUser.Equals(InfluxDB.Client.Api.Domain.PostUser)">
            <summary>
            Returns true if PostUser instances are equal
            </summary>
            <param name="input">Instance of PostUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PostUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Property">
            <summary>
            The value associated with a key
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Property.#ctor(System.String,InfluxDB.Client.Api.Domain.PropertyKey,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Property" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="key">key.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Property.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Property.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Property.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Property.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Property.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Property.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Property.Equals(InfluxDB.Client.Api.Domain.Property)">
            <summary>
            Returns true if Property instances are equal
            </summary>
            <param name="input">Instance of Property to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Property.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.PropertyKey">
            <summary>
            PropertyKey
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PropertyKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.PropertyKey" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PropertyKey.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PropertyKey.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PropertyKey.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PropertyKey.Equals(InfluxDB.Client.Api.Domain.PropertyKey)">
            <summary>
            Returns true if PropertyKey instances are equal
            </summary>
            <param name="input">Instance of PropertyKey to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.PropertyKey.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Query">
            <summary>
            Query influx using the Flux language
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Query.TypeEnum">
            <summary>
            The type of query. Must be \&quot;flux\&quot;.
            </summary>
            <value>The type of query. Must be \&quot;flux\&quot;.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Query.TypeEnum.Flux">
            <summary>
            Enum Flux for value: flux
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Query.Type">
            <summary>
            The type of query. Must be \&quot;flux\&quot;.
            </summary>
            <value>The type of query. Must be \&quot;flux\&quot;.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Query.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Query" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Query.#ctor(InfluxDB.Client.Api.Domain.File,System.String,System.Nullable{InfluxDB.Client.Api.Domain.Query.TypeEnum},System.Collections.Generic.Dictionary{System.String,System.Object},InfluxDB.Client.Api.Domain.Dialect,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Query" /> class.
            </summary>
            <param name="_extern">_extern.</param>
            <param name="query">Query script to execute. (required).</param>
            <param name="type">The type of query. Must be \&quot;flux\&quot;..</param>
            <param name="_params">Enumeration of key/value pairs that respresent parameters to be injected into query (can only specify either this field or extern and not both).</param>
            <param name="dialect">dialect.</param>
            <param name="now">Specifies the time that should be reported as \&quot;now\&quot; in the query. Default is the server&#39;s now time..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Query.Extern">
            <summary>
            Gets or Sets Extern
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Query._Query">
            <summary>
            Query script to execute.
            </summary>
            <value>Query script to execute.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Query.Params">
            <summary>
            Enumeration of key/value pairs that respresent parameters to be injected into query (can only specify either this field or extern and not both)
            </summary>
            <value>Enumeration of key/value pairs that respresent parameters to be injected into query (can only specify either this field or extern and not both)</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Query.Dialect">
            <summary>
            Gets or Sets Dialect
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Query.Now">
            <summary>
            Specifies the time that should be reported as \&quot;now\&quot; in the query. Default is the server&#39;s now time.
            </summary>
            <value>Specifies the time that should be reported as \&quot;now\&quot; in the query. Default is the server&#39;s now time.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Query.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Query.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Query.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Query.Equals(InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Returns true if Query instances are equal
            </summary>
            <param name="input">Instance of Query to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Query.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.QueryEditMode">
            <summary>
            Defines QueryEditMode
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.QueryEditMode.Builder">
            <summary>
            Enum Builder for value: builder
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.QueryEditMode.Advanced">
            <summary>
            Enum Advanced for value: advanced
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.QueryVariableProperties">
            <summary>
            QueryVariableProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.QueryVariableProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.QueryVariableProperties.TypeEnum.Query">
            <summary>
            Enum Query for value: query
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.QueryVariableProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariableProperties.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.QueryVariableProperties.TypeEnum},InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.QueryVariableProperties" /> class.
            </summary>
            <param name="type">type.</param>
            <param name="values">values.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.QueryVariableProperties.Values">
            <summary>
            Gets or Sets Values
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariableProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariableProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariableProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariableProperties.Equals(InfluxDB.Client.Api.Domain.QueryVariableProperties)">
            <summary>
            Returns true if QueryVariableProperties instances are equal
            </summary>
            <param name="input">Instance of QueryVariableProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariableProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues">
            <summary>
            QueryVariablePropertiesValues
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues" /> class.
            </summary>
            <param name="query">query.</param>
            <param name="language">language.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.Query">
            <summary>
            Gets or Sets Query
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.Language">
            <summary>
            Gets or Sets Language
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.Equals(InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues)">
            <summary>
            Returns true if QueryVariablePropertiesValues instances are equal
            </summary>
            <param name="input">Instance of QueryVariablePropertiesValues to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.QueryVariablePropertiesValues.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RangeThreshold">
            <summary>
            RangeThreshold
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RangeThreshold.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.RangeThreshold.TypeEnum.Range">
            <summary>
            Enum Range for value: range
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RangeThreshold.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RangeThreshold.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RangeThreshold" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RangeThreshold.#ctor(InfluxDB.Client.Api.Domain.RangeThreshold.TypeEnum,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{InfluxDB.Client.Api.Domain.CheckStatusLevel},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RangeThreshold" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Range).</param>
            <param name="min">min (required).</param>
            <param name="max">max (required).</param>
            <param name="within">within (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RangeThreshold.Min">
            <summary>
            Gets or Sets Min
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RangeThreshold.Max">
            <summary>
            Gets or Sets Max
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RangeThreshold.Within">
            <summary>
            Gets or Sets Within
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RangeThreshold.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RangeThreshold.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RangeThreshold.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RangeThreshold.Equals(InfluxDB.Client.Api.Domain.RangeThreshold)">
            <summary>
            Returns true if RangeThreshold instances are equal
            </summary>
            <param name="input">Instance of RangeThreshold to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RangeThreshold.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Ready">
            <summary>
            Ready
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Ready.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Ready.StatusEnum.Ready">
            <summary>
            Enum Ready for value: ready
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Ready.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Ready.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.Ready.StatusEnum},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Ready" /> class.
            </summary>
            <param name="status">status.</param>
            <param name="started">started.</param>
            <param name="up">up.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Ready.Started">
            <summary>
            Gets or Sets Started
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Ready.Up">
            <summary>
            Gets or Sets Up
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Ready.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Ready.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Ready.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Ready.Equals(InfluxDB.Client.Api.Domain.Ready)">
            <summary>
            Returns true if Ready instances are equal
            </summary>
            <param name="input">Instance of Ready to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Ready.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RegexpLiteral">
            <summary>
            Expressions begin and end with &#x60;/&#x60; and are regular expressions with syntax accepted by RE2
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RegexpLiteral.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RegexpLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RegexpLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RegexpLiteral.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RegexpLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RegexpLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RegexpLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RegexpLiteral.Equals(InfluxDB.Client.Api.Domain.RegexpLiteral)">
            <summary>
            Returns true if RegexpLiteral instances are equal
            </summary>
            <param name="input">Instance of RegexpLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RegexpLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RemoteConnection">
            <summary>
            RemoteConnection
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RemoteConnection" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RemoteConnection" /> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="name">name (required).</param>
            <param name="orgID">orgID (required).</param>
            <param name="description">description.</param>
            <param name="remoteURL">remoteURL (required).</param>
            <param name="remoteOrgID">remoteOrgID (required).</param>
            <param name="allowInsecureTLS">allowInsecureTLS (required) (default to false).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnection.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnection.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnection.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnection.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnection.RemoteURL">
            <summary>
            Gets or Sets RemoteURL
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnection.RemoteOrgID">
            <summary>
            Gets or Sets RemoteOrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnection.AllowInsecureTLS">
            <summary>
            Gets or Sets AllowInsecureTLS
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnection.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnection.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnection.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnection.Equals(InfluxDB.Client.Api.Domain.RemoteConnection)">
            <summary>
            Returns true if RemoteConnection instances are equal
            </summary>
            <param name="input">Instance of RemoteConnection to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnection.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest">
            <summary>
            RemoteConnectionCreationRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="orgID">orgID (required).</param>
            <param name="remoteURL">remoteURL (required).</param>
            <param name="remoteAPIToken">remoteAPIToken (required).</param>
            <param name="remoteOrgID">remoteOrgID (required).</param>
            <param name="allowInsecureTLS">allowInsecureTLS (required) (default to false).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.RemoteURL">
            <summary>
            Gets or Sets RemoteURL
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.RemoteAPIToken">
            <summary>
            Gets or Sets RemoteAPIToken
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.RemoteOrgID">
            <summary>
            Gets or Sets RemoteOrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.AllowInsecureTLS">
            <summary>
            Gets or Sets AllowInsecureTLS
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.Equals(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest)">
            <summary>
            Returns true if RemoteConnectionCreationRequest instances are equal
            </summary>
            <param name="input">Instance of RemoteConnectionCreationRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RemoteConnections">
            <summary>
            RemoteConnections
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnections.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.RemoteConnection})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RemoteConnections" /> class.
            </summary>
            <param name="remotes">remotes.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnections.Remotes">
            <summary>
            Gets or Sets Remotes
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnections.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnections.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnections.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnections.Equals(InfluxDB.Client.Api.Domain.RemoteConnections)">
            <summary>
            Returns true if RemoteConnections instances are equal
            </summary>
            <param name="input">Instance of RemoteConnections to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnections.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest">
            <summary>
            RemoteConnectionUpdateRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="remoteURL">remoteURL.</param>
            <param name="remoteAPIToken">remoteAPIToken.</param>
            <param name="remoteOrgID">remoteOrgID.</param>
            <param name="allowInsecureTLS">allowInsecureTLS (default to false).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.RemoteURL">
            <summary>
            Gets or Sets RemoteURL
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.RemoteAPIToken">
            <summary>
            Gets or Sets RemoteAPIToken
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.RemoteOrgID">
            <summary>
            Gets or Sets RemoteOrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.AllowInsecureTLS">
            <summary>
            Gets or Sets AllowInsecureTLS
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.Equals(InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest)">
            <summary>
            Returns true if RemoteConnectionUpdateRequest instances are equal
            </summary>
            <param name="input">Instance of RemoteConnectionUpdateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RenamableField">
            <summary>
            Describes a field that can be renamed and made visible or invisible.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RenamableField.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RenamableField" /> class.
            </summary>
            <param name="displayName">The name that a field is renamed to by the user..</param>
            <param name="visible">Indicates whether this field should be visible on the table..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RenamableField.InternalName">
            <summary>
            The calculated name of a field.
            </summary>
            <value>The calculated name of a field.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RenamableField.DisplayName">
            <summary>
            The name that a field is renamed to by the user.
            </summary>
            <value>The name that a field is renamed to by the user.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RenamableField.Visible">
            <summary>
            Indicates whether this field should be visible on the table.
            </summary>
            <value>Indicates whether this field should be visible on the table.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RenamableField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RenamableField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RenamableField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RenamableField.Equals(InfluxDB.Client.Api.Domain.RenamableField)">
            <summary>
            Returns true if RenamableField instances are equal
            </summary>
            <param name="input">Instance of RenamableField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RenamableField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Replication">
            <summary>
            Replication
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replication.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Replication" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replication.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Replication" /> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="orgID">orgID (required).</param>
            <param name="remoteID">remoteID (required).</param>
            <param name="localBucketID">localBucketID (required).</param>
            <param name="remoteBucketID">remoteBucketID (required).</param>
            <param name="maxQueueSizeBytes">maxQueueSizeBytes (required).</param>
            <param name="currentQueueSizeBytes">currentQueueSizeBytes (required).</param>
            <param name="latestResponseCode">latestResponseCode.</param>
            <param name="latestErrorMessage">latestErrorMessage.</param>
            <param name="dropNonRetryableData">dropNonRetryableData.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.RemoteID">
            <summary>
            Gets or Sets RemoteID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.LocalBucketID">
            <summary>
            Gets or Sets LocalBucketID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.RemoteBucketID">
            <summary>
            Gets or Sets RemoteBucketID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.MaxQueueSizeBytes">
            <summary>
            Gets or Sets MaxQueueSizeBytes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.CurrentQueueSizeBytes">
            <summary>
            Gets or Sets CurrentQueueSizeBytes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.LatestResponseCode">
            <summary>
            Gets or Sets LatestResponseCode
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.LatestErrorMessage">
            <summary>
            Gets or Sets LatestErrorMessage
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replication.DropNonRetryableData">
            <summary>
            Gets or Sets DropNonRetryableData
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replication.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replication.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replication.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replication.Equals(InfluxDB.Client.Api.Domain.Replication)">
            <summary>
            Returns true if Replication instances are equal
            </summary>
            <param name="input">Instance of Replication to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replication.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ReplicationCreationRequest">
            <summary>
            ReplicationCreationRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ReplicationCreationRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ReplicationCreationRequest" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="orgID">orgID (required).</param>
            <param name="remoteID">remoteID (required).</param>
            <param name="localBucketID">localBucketID (required).</param>
            <param name="remoteBucketID">remoteBucketID (required).</param>
            <param name="maxQueueSizeBytes">maxQueueSizeBytes (required) (default to 67108860).</param>
            <param name="dropNonRetryableData">dropNonRetryableData (default to false).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.RemoteID">
            <summary>
            Gets or Sets RemoteID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.LocalBucketID">
            <summary>
            Gets or Sets LocalBucketID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.RemoteBucketID">
            <summary>
            Gets or Sets RemoteBucketID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.MaxQueueSizeBytes">
            <summary>
            Gets or Sets MaxQueueSizeBytes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.DropNonRetryableData">
            <summary>
            Gets or Sets DropNonRetryableData
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.Equals(InfluxDB.Client.Api.Domain.ReplicationCreationRequest)">
            <summary>
            Returns true if ReplicationCreationRequest instances are equal
            </summary>
            <param name="input">Instance of ReplicationCreationRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationCreationRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Replications">
            <summary>
            Replications
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replications.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Replication})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Replications" /> class.
            </summary>
            <param name="replications">replications.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Replications._Replications">
            <summary>
            Gets or Sets _Replications
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replications.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replications.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replications.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replications.Equals(InfluxDB.Client.Api.Domain.Replications)">
            <summary>
            Returns true if Replications instances are equal
            </summary>
            <param name="input">Instance of Replications to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Replications.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest">
            <summary>
            ReplicationUpdateRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="remoteID">remoteID.</param>
            <param name="remoteBucketID">remoteBucketID.</param>
            <param name="maxQueueSizeBytes">maxQueueSizeBytes.</param>
            <param name="dropNonRetryableData">dropNonRetryableData.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.RemoteID">
            <summary>
            Gets or Sets RemoteID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.RemoteBucketID">
            <summary>
            Gets or Sets RemoteBucketID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.MaxQueueSizeBytes">
            <summary>
            Gets or Sets MaxQueueSizeBytes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.DropNonRetryableData">
            <summary>
            Gets or Sets DropNonRetryableData
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.Equals(InfluxDB.Client.Api.Domain.ReplicationUpdateRequest)">
            <summary>
            Returns true if ReplicationUpdateRequest instances are equal
            </summary>
            <param name="input">Instance of ReplicationUpdateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReplicationUpdateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ResourceMember">
            <summary>
            ResourceMember
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ResourceMember.RoleEnum">
            <summary>
            Defines Role
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ResourceMember.RoleEnum.Member">
            <summary>
            Enum Member for value: member
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ResourceMember.Role">
            <summary>
            Gets or Sets Role
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMember.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ResourceMember" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMember.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.ResourceMember.RoleEnum},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.User.StatusEnum},InfluxDB.Client.Api.Domain.UserLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ResourceMember" /> class.
            </summary>
            <param name="role">role (default to RoleEnum.Member).</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMember.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMember.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMember.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMember.Equals(InfluxDB.Client.Api.Domain.ResourceMember)">
            <summary>
            Returns true if ResourceMember instances are equal
            </summary>
            <param name="input">Instance of ResourceMember to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMember.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ResourceMembers">
            <summary>
            ResourceMembers
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMembers.#ctor(InfluxDB.Client.Api.Domain.UsersLinks,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ResourceMember})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ResourceMembers" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="users">users.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ResourceMembers.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ResourceMembers.Users">
            <summary>
            Gets or Sets Users
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMembers.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMembers.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMembers.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMembers.Equals(InfluxDB.Client.Api.Domain.ResourceMembers)">
            <summary>
            Returns true if ResourceMembers instances are equal
            </summary>
            <param name="input">Instance of ResourceMembers to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceMembers.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ResourceOwner">
            <summary>
            ResourceOwner
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ResourceOwner.RoleEnum">
            <summary>
            Defines Role
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ResourceOwner.RoleEnum.Owner">
            <summary>
            Enum Owner for value: owner
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ResourceOwner.Role">
            <summary>
            Gets or Sets Role
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ResourceOwner" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwner.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.ResourceOwner.RoleEnum},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.User.StatusEnum},InfluxDB.Client.Api.Domain.UserLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ResourceOwner" /> class.
            </summary>
            <param name="role">role (default to RoleEnum.Owner).</param>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwner.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwner.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwner.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwner.Equals(InfluxDB.Client.Api.Domain.ResourceOwner)">
            <summary>
            Returns true if ResourceOwner instances are equal
            </summary>
            <param name="input">Instance of ResourceOwner to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwner.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ResourceOwners">
            <summary>
            ResourceOwners
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwners.#ctor(InfluxDB.Client.Api.Domain.UsersLinks,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ResourceOwner})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ResourceOwners" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="users">users.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ResourceOwners.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ResourceOwners.Users">
            <summary>
            Gets or Sets Users
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwners.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwners.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwners.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwners.Equals(InfluxDB.Client.Api.Domain.ResourceOwners)">
            <summary>
            Returns true if ResourceOwners instances are equal
            </summary>
            <param name="input">Instance of ResourceOwners to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ResourceOwners.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RestoredBucketMappings">
            <summary>
            RestoredBucketMappings
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RestoredBucketMappings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RestoredBucketMappings" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RestoredBucketMappings.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.BucketShardMapping})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RestoredBucketMappings" /> class.
            </summary>
            <param name="id">New ID of the restored bucket (required).</param>
            <param name="name">name (required).</param>
            <param name="shardMappings">shardMappings (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RestoredBucketMappings.Id">
            <summary>
            New ID of the restored bucket
            </summary>
            <value>New ID of the restored bucket</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RestoredBucketMappings.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RestoredBucketMappings.ShardMappings">
            <summary>
            Gets or Sets ShardMappings
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RestoredBucketMappings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RestoredBucketMappings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RestoredBucketMappings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RestoredBucketMappings.Equals(InfluxDB.Client.Api.Domain.RestoredBucketMappings)">
            <summary>
            Returns true if RestoredBucketMappings instances are equal
            </summary>
            <param name="input">Instance of RestoredBucketMappings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RestoredBucketMappings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RetentionPolicyManifest">
            <summary>
            RetentionPolicyManifest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RetentionPolicyManifest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ShardGroupManifest},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.SubscriptionManifest})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RetentionPolicyManifest" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="replicaN">replicaN (required).</param>
            <param name="duration">duration (required).</param>
            <param name="shardGroupDuration">shardGroupDuration (required).</param>
            <param name="shardGroups">shardGroups (required).</param>
            <param name="subscriptions">subscriptions (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.ReplicaN">
            <summary>
            Gets or Sets ReplicaN
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.Duration">
            <summary>
            Gets or Sets Duration
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.ShardGroupDuration">
            <summary>
            Gets or Sets ShardGroupDuration
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.ShardGroups">
            <summary>
            Gets or Sets ShardGroups
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.Subscriptions">
            <summary>
            Gets or Sets Subscriptions
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.Equals(InfluxDB.Client.Api.Domain.RetentionPolicyManifest)">
            <summary>
            Returns true if RetentionPolicyManifest instances are equal
            </summary>
            <param name="input">Instance of RetentionPolicyManifest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RetentionPolicyManifest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ReturnStatement">
            <summary>
            Defines an expression to return
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReturnStatement.#ctor(System.String,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ReturnStatement" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="argument">argument.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReturnStatement.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ReturnStatement.Argument">
            <summary>
            Gets or Sets Argument
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReturnStatement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReturnStatement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReturnStatement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReturnStatement.Equals(InfluxDB.Client.Api.Domain.ReturnStatement)">
            <summary>
            Returns true if ReturnStatement instances are equal
            </summary>
            <param name="input">Instance of ReturnStatement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ReturnStatement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Routes">
            <summary>
            Routes
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Routes.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RoutesExternal,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RoutesQuery,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RoutesSystem,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Routes" /> class.
            </summary>
            <param name="authorizations">authorizations.</param>
            <param name="buckets">buckets.</param>
            <param name="dashboards">dashboards.</param>
            <param name="external">external.</param>
            <param name="variables">variables.</param>
            <param name="me">me.</param>
            <param name="flags">flags.</param>
            <param name="orgs">orgs.</param>
            <param name="query">query.</param>
            <param name="setup">setup.</param>
            <param name="signin">signin.</param>
            <param name="signout">signout.</param>
            <param name="sources">sources.</param>
            <param name="system">system.</param>
            <param name="tasks">tasks.</param>
            <param name="telegrafs">telegrafs.</param>
            <param name="users">users.</param>
            <param name="write">write.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Authorizations">
            <summary>
            Gets or Sets Authorizations
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Buckets">
            <summary>
            Gets or Sets Buckets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Dashboards">
            <summary>
            Gets or Sets Dashboards
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.External">
            <summary>
            Gets or Sets External
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Variables">
            <summary>
            Gets or Sets Variables
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Me">
            <summary>
            Gets or Sets Me
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Flags">
            <summary>
            Gets or Sets Flags
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Orgs">
            <summary>
            Gets or Sets Orgs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Query">
            <summary>
            Gets or Sets Query
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Setup">
            <summary>
            Gets or Sets Setup
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Signin">
            <summary>
            Gets or Sets Signin
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Signout">
            <summary>
            Gets or Sets Signout
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Sources">
            <summary>
            Gets or Sets Sources
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.System">
            <summary>
            Gets or Sets System
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Tasks">
            <summary>
            Gets or Sets Tasks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Telegrafs">
            <summary>
            Gets or Sets Telegrafs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Users">
            <summary>
            Gets or Sets Users
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Routes.Write">
            <summary>
            Gets or Sets Write
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Routes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Routes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Routes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Routes.Equals(InfluxDB.Client.Api.Domain.Routes)">
            <summary>
            Returns true if Routes instances are equal
            </summary>
            <param name="input">Instance of Routes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Routes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RoutesExternal">
            <summary>
            RoutesExternal
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesExternal.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RoutesExternal" /> class.
            </summary>
            <param name="statusFeed">statusFeed.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesExternal.StatusFeed">
            <summary>
            Gets or Sets StatusFeed
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesExternal.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesExternal.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesExternal.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesExternal.Equals(InfluxDB.Client.Api.Domain.RoutesExternal)">
            <summary>
            Returns true if RoutesExternal instances are equal
            </summary>
            <param name="input">Instance of RoutesExternal to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesExternal.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RoutesQuery">
            <summary>
            RoutesQuery
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesQuery.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RoutesQuery" /> class.
            </summary>
            <param name="self">self.</param>
            <param name="ast">ast.</param>
            <param name="analyze">analyze.</param>
            <param name="suggestions">suggestions.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesQuery.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesQuery.Ast">
            <summary>
            Gets or Sets Ast
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesQuery.Analyze">
            <summary>
            Gets or Sets Analyze
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesQuery.Suggestions">
            <summary>
            Gets or Sets Suggestions
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesQuery.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesQuery.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesQuery.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesQuery.Equals(InfluxDB.Client.Api.Domain.RoutesQuery)">
            <summary>
            Returns true if RoutesQuery instances are equal
            </summary>
            <param name="input">Instance of RoutesQuery to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesQuery.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RoutesSystem">
            <summary>
            RoutesSystem
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesSystem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RoutesSystem" /> class.
            </summary>
            <param name="metrics">metrics.</param>
            <param name="debug">debug.</param>
            <param name="health">health.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesSystem.Metrics">
            <summary>
            Gets or Sets Metrics
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesSystem.Debug">
            <summary>
            Gets or Sets Debug
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RoutesSystem.Health">
            <summary>
            Gets or Sets Health
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesSystem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesSystem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesSystem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesSystem.Equals(InfluxDB.Client.Api.Domain.RoutesSystem)">
            <summary>
            Returns true if RoutesSystem instances are equal
            </summary>
            <param name="input">Instance of RoutesSystem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RoutesSystem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RuleStatusLevel">
            <summary>
            The state to record if check matches a criteria.
            </summary>
            <value>The state to record if check matches a criteria.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.RuleStatusLevel.UNKNOWN">
            <summary>
            Enum UNKNOWN for value: UNKNOWN
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.RuleStatusLevel.OK">
            <summary>
            Enum OK for value: OK
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.RuleStatusLevel.INFO">
            <summary>
            Enum INFO for value: INFO
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.RuleStatusLevel.CRIT">
            <summary>
            Enum CRIT for value: CRIT
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.RuleStatusLevel.WARN">
            <summary>
            Enum WARN for value: WARN
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.RuleStatusLevel.ANY">
            <summary>
            Enum ANY for value: ANY
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Run">
            <summary>
            Run
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Run.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Run.StatusEnum.Scheduled">
            <summary>
            Enum Scheduled for value: scheduled
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Run.StatusEnum.Started">
            <summary>
            Enum Started for value: started
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Run.StatusEnum.Failed">
            <summary>
            Enum Failed for value: failed
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Run.StatusEnum.Success">
            <summary>
            Enum Success for value: success
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Run.StatusEnum.Canceled">
            <summary>
            Enum Canceled for value: canceled
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Run.#ctor(System.Nullable{System.DateTime},InfluxDB.Client.Api.Domain.RunLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Run" /> class.
            </summary>
            <param name="scheduledFor">Time used for run&#39;s \&quot;now\&quot; option, RFC3339..</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.TaskID">
            <summary>
            Gets or Sets TaskID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.ScheduledFor">
            <summary>
            Time used for run&#39;s \&quot;now\&quot; option, RFC3339.
            </summary>
            <value>Time used for run&#39;s \&quot;now\&quot; option, RFC3339.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.Log">
            <summary>
            An array of logs associated with the run.
            </summary>
            <value>An array of logs associated with the run.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.StartedAt">
            <summary>
            Time run started executing, RFC3339Nano.
            </summary>
            <value>Time run started executing, RFC3339Nano.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.FinishedAt">
            <summary>
            Time run finished executing, RFC3339Nano.
            </summary>
            <value>Time run finished executing, RFC3339Nano.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.RequestedAt">
            <summary>
            Time run was manually requested, RFC3339Nano.
            </summary>
            <value>Time run was manually requested, RFC3339Nano.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Run.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Run.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Run.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Run.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Run.Equals(InfluxDB.Client.Api.Domain.Run)">
            <summary>
            Returns true if Run instances are equal
            </summary>
            <param name="input">Instance of Run to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Run.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RunLinks">
            <summary>
            RunLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunLinks.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RunLinks" /> class.
            </summary>
            <param name="self">self.</param>
            <param name="task">task.</param>
            <param name="retry">retry.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RunLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RunLinks.Task">
            <summary>
            Gets or Sets Task
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RunLinks.Retry">
            <summary>
            Gets or Sets Retry
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunLinks.Equals(InfluxDB.Client.Api.Domain.RunLinks)">
            <summary>
            Returns true if RunLinks instances are equal
            </summary>
            <param name="input">Instance of RunLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.RunManually">
            <summary>
            RunManually
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunManually.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.RunManually" /> class.
            </summary>
            <param name="scheduledFor">Time used for run&#39;s \&quot;now\&quot; option, RFC3339.  Default is the server&#39;s now time..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.RunManually.ScheduledFor">
            <summary>
            Time used for run&#39;s \&quot;now\&quot; option, RFC3339.  Default is the server&#39;s now time.
            </summary>
            <value>Time used for run&#39;s \&quot;now\&quot; option, RFC3339.  Default is the server&#39;s now time.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunManually.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunManually.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunManually.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunManually.Equals(InfluxDB.Client.Api.Domain.RunManually)">
            <summary>
            Returns true if RunManually instances are equal
            </summary>
            <param name="input">Instance of RunManually to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.RunManually.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Runs">
            <summary>
            Runs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Runs.#ctor(InfluxDB.Client.Api.Domain.Links,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Run})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Runs" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="runs">runs.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Runs.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Runs._Runs">
            <summary>
            Gets or Sets _Runs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Runs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Runs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Runs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Runs.Equals(InfluxDB.Client.Api.Domain.Runs)">
            <summary>
            Returns true if Runs instances are equal
            </summary>
            <param name="input">Instance of Runs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Runs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScatterViewProperties">
            <summary>
            ScatterViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScatterViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ScatterViewProperties.TypeEnum.Scatter">
            <summary>
            Enum Scatter for value: scatter
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScatterViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ScatterViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScatterViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScatterViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScatterViewProperties.#ctor(System.String,InfluxDB.Client.Api.Domain.ScatterViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.ScatterViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Nullable{System.Decimal}},System.Collections.Generic.List{System.Nullable{System.Decimal}},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScatterViewProperties" /> class.
            </summary>
            <param name="timeFormat">timeFormat.</param>
            <param name="type">type (required) (default to TypeEnum.Scatter).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="xColumn">xColumn (required).</param>
            <param name="generateXAxisTicks">generateXAxisTicks.</param>
            <param name="xTotalTicks">xTotalTicks.</param>
            <param name="xTickStart">xTickStart.</param>
            <param name="xTickStep">xTickStep.</param>
            <param name="yColumn">yColumn (required).</param>
            <param name="generateYAxisTicks">generateYAxisTicks.</param>
            <param name="yTotalTicks">yTotalTicks.</param>
            <param name="yTickStart">yTickStart.</param>
            <param name="yTickStep">yTickStep.</param>
            <param name="fillColumns">fillColumns (required).</param>
            <param name="symbolColumns">symbolColumns (required).</param>
            <param name="xDomain">xDomain (required).</param>
            <param name="yDomain">yDomain (required).</param>
            <param name="xAxisLabel">xAxisLabel (required).</param>
            <param name="yAxisLabel">yAxisLabel (required).</param>
            <param name="xPrefix">xPrefix (required).</param>
            <param name="xSuffix">xSuffix (required).</param>
            <param name="yPrefix">yPrefix (required).</param>
            <param name="ySuffix">ySuffix (required).</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.TimeFormat">
            <summary>
            Gets or Sets TimeFormat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XColumn">
            <summary>
            Gets or Sets XColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.GenerateXAxisTicks">
            <summary>
            Gets or Sets GenerateXAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XTotalTicks">
            <summary>
            Gets or Sets XTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XTickStart">
            <summary>
            Gets or Sets XTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XTickStep">
            <summary>
            Gets or Sets XTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YColumn">
            <summary>
            Gets or Sets YColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.GenerateYAxisTicks">
            <summary>
            Gets or Sets GenerateYAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YTotalTicks">
            <summary>
            Gets or Sets YTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YTickStart">
            <summary>
            Gets or Sets YTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YTickStep">
            <summary>
            Gets or Sets YTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.FillColumns">
            <summary>
            Gets or Sets FillColumns
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.SymbolColumns">
            <summary>
            Gets or Sets SymbolColumns
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XDomain">
            <summary>
            Gets or Sets XDomain
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YDomain">
            <summary>
            Gets or Sets YDomain
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XAxisLabel">
            <summary>
            Gets or Sets XAxisLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YAxisLabel">
            <summary>
            Gets or Sets YAxisLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XPrefix">
            <summary>
            Gets or Sets XPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.XSuffix">
            <summary>
            Gets or Sets XSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YPrefix">
            <summary>
            Gets or Sets YPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.YSuffix">
            <summary>
            Gets or Sets YSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScatterViewProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScatterViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScatterViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScatterViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScatterViewProperties.Equals(InfluxDB.Client.Api.Domain.ScatterViewProperties)">
            <summary>
            Returns true if ScatterViewProperties instances are equal
            </summary>
            <param name="input">Instance of ScatterViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScatterViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SchemaType">
            <summary>
            Defines SchemaType
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SchemaType.Implicit">
            <summary>
            Enum Implicit for value: implicit
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SchemaType.Explicit">
            <summary>
            Enum Explicit for value: explicit
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScraperTargetRequest">
            <summary>
            ScraperTargetRequest
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScraperTargetRequest.TypeEnum">
            <summary>
            The type of the metrics to be parsed.
            </summary>
            <value>The type of the metrics to be parsed.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ScraperTargetRequest.TypeEnum.Prometheus">
            <summary>
            Enum Prometheus for value: prometheus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetRequest.Type">
            <summary>
            The type of the metrics to be parsed.
            </summary>
            <value>The type of the metrics to be parsed.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetRequest.#ctor(System.String,System.Nullable{InfluxDB.Client.Api.Domain.ScraperTargetRequest.TypeEnum},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScraperTargetRequest" /> class.
            </summary>
            <param name="name">The name of the scraper target..</param>
            <param name="type">The type of the metrics to be parsed..</param>
            <param name="url">The URL of the metrics endpoint..</param>
            <param name="orgID">The organization ID..</param>
            <param name="bucketID">The ID of the bucket to write to..</param>
            <param name="allowInsecure">Skip TLS verification on endpoint. (default to false).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetRequest.Name">
            <summary>
            The name of the scraper target.
            </summary>
            <value>The name of the scraper target.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetRequest.Url">
            <summary>
            The URL of the metrics endpoint.
            </summary>
            <value>The URL of the metrics endpoint.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetRequest.OrgID">
            <summary>
            The organization ID.
            </summary>
            <value>The organization ID.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetRequest.BucketID">
            <summary>
            The ID of the bucket to write to.
            </summary>
            <value>The ID of the bucket to write to.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetRequest.AllowInsecure">
            <summary>
            Skip TLS verification on endpoint.
            </summary>
            <value>Skip TLS verification on endpoint.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetRequest.Equals(InfluxDB.Client.Api.Domain.ScraperTargetRequest)">
            <summary>
            Returns true if ScraperTargetRequest instances are equal
            </summary>
            <param name="input">Instance of ScraperTargetRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScraperTargetResponse">
            <summary>
            ScraperTargetResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponse.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks,System.String,System.Nullable{InfluxDB.Client.Api.Domain.ScraperTargetRequest.TypeEnum},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScraperTargetResponse" /> class.
            </summary>
            <param name="org">The name of the organization..</param>
            <param name="bucket">The bucket name..</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Org">
            <summary>
            The name of the organization.
            </summary>
            <value>The name of the organization.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Bucket">
            <summary>
            The bucket name.
            </summary>
            <value>The bucket name.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Equals(InfluxDB.Client.Api.Domain.ScraperTargetResponse)">
            <summary>
            Returns true if ScraperTargetResponse instances are equal
            </summary>
            <param name="input">Instance of ScraperTargetResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks">
            <summary>
            ScraperTargetResponseLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.Bucket">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.Organization">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.Equals(InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks)">
            <summary>
            Returns true if ScraperTargetResponseLinks instances are equal
            </summary>
            <param name="input">Instance of ScraperTargetResponseLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponseLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScraperTargetResponses">
            <summary>
            ScraperTargetResponses
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponses.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ScraperTargetResponse})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScraperTargetResponses" /> class.
            </summary>
            <param name="configurations">configurations.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScraperTargetResponses.Configurations">
            <summary>
            Gets or Sets Configurations
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponses.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponses.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponses.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponses.Equals(InfluxDB.Client.Api.Domain.ScraperTargetResponses)">
            <summary>
            Returns true if ScraperTargetResponses instances are equal
            </summary>
            <param name="input">Instance of ScraperTargetResponses to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScraperTargetResponses.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Script">
            <summary>
            Script
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.Language">
            <summary>
            Gets or Sets Language
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Script.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Script" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Script.#ctor(System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.ScriptLanguage},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Script" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="orgID">orgID (required).</param>
            <param name="script">script to be executed (required).</param>
            <param name="language">language.</param>
            <param name="url">invocation endpoint address.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script._Script">
            <summary>
            script to be executed
            </summary>
            <value>script to be executed</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.Url">
            <summary>
            invocation endpoint address
            </summary>
            <value>invocation endpoint address</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Script.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Script.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Script.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Script.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Script.Equals(InfluxDB.Client.Api.Domain.Script)">
            <summary>
            Returns true if Script instances are equal
            </summary>
            <param name="input">Instance of Script to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Script.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScriptCreateRequest">
            <summary>
            ScriptCreateRequest
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptCreateRequest.Language">
            <summary>
            Gets or Sets Language
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptCreateRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScriptCreateRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptCreateRequest.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.ScriptLanguage)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScriptCreateRequest" /> class.
            </summary>
            <param name="name">The name of the script. The name must be unique within the organization. (required).</param>
            <param name="description">description (required).</param>
            <param name="script">The script to execute. (required).</param>
            <param name="language">language (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptCreateRequest.Name">
            <summary>
            The name of the script. The name must be unique within the organization.
            </summary>
            <value>The name of the script. The name must be unique within the organization.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptCreateRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptCreateRequest.Script">
            <summary>
            The script to execute.
            </summary>
            <value>The script to execute.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptCreateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptCreateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptCreateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptCreateRequest.Equals(InfluxDB.Client.Api.Domain.ScriptCreateRequest)">
            <summary>
            Returns true if ScriptCreateRequest instances are equal
            </summary>
            <param name="input">Instance of ScriptCreateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptCreateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScriptInvocationParams">
            <summary>
            ScriptInvocationParams
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptInvocationParams.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScriptInvocationParams" /> class.
            </summary>
            <param name="_params">_params.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptInvocationParams.Params">
            <summary>
            Gets or Sets Params
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptInvocationParams.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptInvocationParams.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptInvocationParams.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptInvocationParams.Equals(InfluxDB.Client.Api.Domain.ScriptInvocationParams)">
            <summary>
            Returns true if ScriptInvocationParams instances are equal
            </summary>
            <param name="input">Instance of ScriptInvocationParams to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptInvocationParams.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScriptLanguage">
            <summary>
            Defines ScriptLanguage
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ScriptLanguage.Flux">
            <summary>
            Enum Flux for value: flux
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Scripts">
            <summary>
            Scripts
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Scripts.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Script})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Scripts" /> class.
            </summary>
            <param name="scripts">scripts.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Scripts._Scripts">
            <summary>
            Gets or Sets _Scripts
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Scripts.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Scripts.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Scripts.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Scripts.Equals(InfluxDB.Client.Api.Domain.Scripts)">
            <summary>
            Returns true if Scripts instances are equal
            </summary>
            <param name="input">Instance of Scripts to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Scripts.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ScriptUpdateRequest">
            <summary>
            ScriptUpdateRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ScriptUpdateRequest" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="script">script is script to be executed.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.Script">
            <summary>
            script is script to be executed
            </summary>
            <value>script is script to be executed</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.Equals(InfluxDB.Client.Api.Domain.ScriptUpdateRequest)">
            <summary>
            Returns true if ScriptUpdateRequest instances are equal
            </summary>
            <param name="input">Instance of ScriptUpdateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ScriptUpdateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SecretKeys">
            <summary>
            SecretKeys
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeys.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SecretKeys" /> class.
            </summary>
            <param name="secrets">secrets.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SecretKeys.Secrets">
            <summary>
            Gets or Sets Secrets
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeys.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeys.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeys.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeys.Equals(InfluxDB.Client.Api.Domain.SecretKeys)">
            <summary>
            Returns true if SecretKeys instances are equal
            </summary>
            <param name="input">Instance of SecretKeys to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeys.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SecretKeysResponse">
            <summary>
            SecretKeysResponse
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponse.#ctor(InfluxDB.Client.Api.Domain.SecretKeysResponseLinks,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SecretKeysResponse" /> class.
            </summary>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SecretKeysResponse.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponse.Equals(InfluxDB.Client.Api.Domain.SecretKeysResponse)">
            <summary>
            Returns true if SecretKeysResponse instances are equal
            </summary>
            <param name="input">Instance of SecretKeysResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks">
            <summary>
            SecretKeysResponseLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks" /> class.
            </summary>
            <param name="self">self.</param>
            <param name="org">org.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.Org">
            <summary>
            Gets or Sets Org
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.Equals(InfluxDB.Client.Api.Domain.SecretKeysResponseLinks)">
            <summary>
            Returns true if SecretKeysResponseLinks instances are equal
            </summary>
            <param name="input">Instance of SecretKeysResponseLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SecretKeysResponseLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ShardGroupManifest">
            <summary>
            ShardGroupManifest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardGroupManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ShardGroupManifest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardGroupManifest.#ctor(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ShardManifest})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ShardGroupManifest" /> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="startTime">startTime (required).</param>
            <param name="endTime">endTime (required).</param>
            <param name="deletedAt">deletedAt.</param>
            <param name="truncatedAt">truncatedAt.</param>
            <param name="shards">shards (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardGroupManifest.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardGroupManifest.StartTime">
            <summary>
            Gets or Sets StartTime
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardGroupManifest.EndTime">
            <summary>
            Gets or Sets EndTime
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardGroupManifest.DeletedAt">
            <summary>
            Gets or Sets DeletedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardGroupManifest.TruncatedAt">
            <summary>
            Gets or Sets TruncatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardGroupManifest.Shards">
            <summary>
            Gets or Sets Shards
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardGroupManifest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardGroupManifest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardGroupManifest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardGroupManifest.Equals(InfluxDB.Client.Api.Domain.ShardGroupManifest)">
            <summary>
            Returns true if ShardGroupManifest instances are equal
            </summary>
            <param name="input">Instance of ShardGroupManifest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardGroupManifest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ShardManifest">
            <summary>
            ShardManifest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ShardManifest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardManifest.#ctor(System.Nullable{System.Int64},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ShardOwner})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ShardManifest" /> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="shardOwners">shardOwners (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardManifest.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardManifest.ShardOwners">
            <summary>
            Gets or Sets ShardOwners
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardManifest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardManifest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardManifest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardManifest.Equals(InfluxDB.Client.Api.Domain.ShardManifest)">
            <summary>
            Returns true if ShardManifest instances are equal
            </summary>
            <param name="input">Instance of ShardManifest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardManifest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ShardOwner">
            <summary>
            ShardOwner
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardOwner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ShardOwner" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardOwner.#ctor(System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ShardOwner" /> class.
            </summary>
            <param name="nodeID">ID of the node that owns a shard. (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ShardOwner.NodeID">
            <summary>
            ID of the node that owns a shard.
            </summary>
            <value>ID of the node that owns a shard.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardOwner.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardOwner.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardOwner.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardOwner.Equals(InfluxDB.Client.Api.Domain.ShardOwner)">
            <summary>
            Returns true if ShardOwner instances are equal
            </summary>
            <param name="input">Instance of ShardOwner to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ShardOwner.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SimpleTableViewProperties">
            <summary>
            SimpleTableViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.TypeEnum.SimpleTable">
            <summary>
            Enum SimpleTable for value: simple-table
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SimpleTableViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.#ctor(InfluxDB.Client.Api.Domain.SimpleTableViewProperties.TypeEnum,System.Nullable{System.Boolean},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},InfluxDB.Client.Api.Domain.SimpleTableViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SimpleTableViewProperties" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.SimpleTable).</param>
            <param name="showAll">showAll (required).</param>
            <param name="queries">queries (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.ShowAll">
            <summary>
            Gets or Sets ShowAll
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.Equals(InfluxDB.Client.Api.Domain.SimpleTableViewProperties)">
            <summary>
            Returns true if SimpleTableViewProperties instances are equal
            </summary>
            <param name="input">Instance of SimpleTableViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SimpleTableViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SingleStatViewProperties">
            <summary>
            SingleStatViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SingleStatViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SingleStatViewProperties.TypeEnum.SingleStat">
            <summary>
            Enum SingleStat for value: single-stat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SingleStatViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SingleStatViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SingleStatViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SingleStatViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SingleStatViewProperties.#ctor(InfluxDB.Client.Api.Domain.SingleStatViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},InfluxDB.Client.Api.Domain.SingleStatViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.StaticLegend,InfluxDB.Client.Api.Domain.DecimalPlaces)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SingleStatViewProperties" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.SingleStat).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="prefix">prefix (required).</param>
            <param name="tickPrefix">tickPrefix (required).</param>
            <param name="suffix">suffix (required).</param>
            <param name="tickSuffix">tickSuffix (required).</param>
            <param name="staticLegend">staticLegend.</param>
            <param name="decimalPlaces">decimalPlaces (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Prefix">
            <summary>
            Gets or Sets Prefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.TickPrefix">
            <summary>
            Gets or Sets TickPrefix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Suffix">
            <summary>
            Gets or Sets Suffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.TickSuffix">
            <summary>
            Gets or Sets TickSuffix
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.StaticLegend">
            <summary>
            Gets or Sets StaticLegend
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SingleStatViewProperties.DecimalPlaces">
            <summary>
            Gets or Sets DecimalPlaces
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SingleStatViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SingleStatViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SingleStatViewProperties.Equals(InfluxDB.Client.Api.Domain.SingleStatViewProperties)">
            <summary>
            Returns true if SingleStatViewProperties instances are equal
            </summary>
            <param name="input">Instance of SingleStatViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SingleStatViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint">
            <summary>
            SlackNotificationEndpoint
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks,InfluxDB.Client.Api.Domain.NotificationEndpointType)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint" /> class.
            </summary>
            <param name="url">Specifies the URL of the Slack endpoint. Specify either &#x60;URL&#x60; or &#x60;Token&#x60;..</param>
            <param name="token">Specifies the API token string. Specify either &#x60;URL&#x60; or &#x60;Token&#x60;..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.Url">
            <summary>
            Specifies the URL of the Slack endpoint. Specify either &#x60;URL&#x60; or &#x60;Token&#x60;.
            </summary>
            <value>Specifies the URL of the Slack endpoint. Specify either &#x60;URL&#x60; or &#x60;Token&#x60;.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.Token">
            <summary>
            Specifies the API token string. Specify either &#x60;URL&#x60; or &#x60;Token&#x60;.
            </summary>
            <value>Specifies the API token string. Specify either &#x60;URL&#x60; or &#x60;Token&#x60;.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.Equals(InfluxDB.Client.Api.Domain.SlackNotificationEndpoint)">
            <summary>
            Returns true if SlackNotificationEndpoint instances are equal
            </summary>
            <param name="input">Instance of SlackNotificationEndpoint to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationEndpoint.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SlackNotificationRule">
            <summary>
            SlackNotificationRule
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SlackNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRule.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks,InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.TypeEnum,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SlackNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRule.Equals(InfluxDB.Client.Api.Domain.SlackNotificationRule)">
            <summary>
            Returns true if SlackNotificationRule instances are equal
            </summary>
            <param name="input">Instance of SlackNotificationRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase">
            <summary>
            SlackNotificationRuleBase
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.TypeEnum.Slack">
            <summary>
            Enum Slack for value: slack
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.#ctor(InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.TypeEnum,System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Slack).</param>
            <param name="channel">channel.</param>
            <param name="messageTemplate">messageTemplate (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.Channel">
            <summary>
            Gets or Sets Channel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.MessageTemplate">
            <summary>
            Gets or Sets MessageTemplate
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.Equals(InfluxDB.Client.Api.Domain.SlackNotificationRuleBase)">
            <summary>
            Returns true if SlackNotificationRuleBase instances are equal
            </summary>
            <param name="input">Instance of SlackNotificationRuleBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SlackNotificationRuleBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SMTPNotificationRule">
            <summary>
            SMTPNotificationRule
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SMTPNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRule.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks,InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.TypeEnum,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SMTPNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRule.Equals(InfluxDB.Client.Api.Domain.SMTPNotificationRule)">
            <summary>
            Returns true if SMTPNotificationRule instances are equal
            </summary>
            <param name="input">Instance of SMTPNotificationRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase">
            <summary>
            SMTPNotificationRuleBase
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.TypeEnum.Smtp">
            <summary>
            Enum Smtp for value: smtp
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.#ctor(InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.TypeEnum,System.String,System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Smtp).</param>
            <param name="subjectTemplate">subjectTemplate (required).</param>
            <param name="bodyTemplate">bodyTemplate.</param>
            <param name="to">to (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.SubjectTemplate">
            <summary>
            Gets or Sets SubjectTemplate
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.BodyTemplate">
            <summary>
            Gets or Sets BodyTemplate
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.To">
            <summary>
            Gets or Sets To
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.Equals(InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase)">
            <summary>
            Returns true if SMTPNotificationRuleBase instances are equal
            </summary>
            <param name="input">Instance of SMTPNotificationRuleBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SMTPNotificationRuleBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Source.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Source.TypeEnum.V1">
            <summary>
            Enum V1 for value: v1
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Source.TypeEnum.V2">
            <summary>
            Enum V2 for value: v2
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Source.TypeEnum.Self">
            <summary>
            Enum Self for value: self
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Source.LanguagesEnum">
            <summary>
            Defines Languages
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Source.LanguagesEnum.Flux">
            <summary>
            Enum Flux for value: flux
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.Source.LanguagesEnum.Influxql">
            <summary>
            Enum Influxql for value: influxql
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Languages">
            <summary>
            Gets or Sets Languages
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Source.#ctor(InfluxDB.Client.Api.Domain.SourceLinks,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{InfluxDB.Client.Api.Domain.Source.TypeEnum},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Source" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="id">id.</param>
            <param name="orgID">orgID.</param>
            <param name="_default">_default.</param>
            <param name="name">name.</param>
            <param name="type">type.</param>
            <param name="url">url.</param>
            <param name="insecureSkipVerify">insecureSkipVerify.</param>
            <param name="telegraf">telegraf.</param>
            <param name="token">token.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <param name="sharedSecret">sharedSecret.</param>
            <param name="metaUrl">metaUrl.</param>
            <param name="defaultRP">defaultRP.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Default">
            <summary>
            Gets or Sets Default
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.InsecureSkipVerify">
            <summary>
            Gets or Sets InsecureSkipVerify
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Telegraf">
            <summary>
            Gets or Sets Telegraf
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.SharedSecret">
            <summary>
            Gets or Sets SharedSecret
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.MetaUrl">
            <summary>
            Gets or Sets MetaUrl
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Source.DefaultRP">
            <summary>
            Gets or Sets DefaultRP
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Source.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Source.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Source.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Source.Equals(InfluxDB.Client.Api.Domain.Source)">
            <summary>
            Returns true if Source instances are equal
            </summary>
            <param name="input">Instance of Source to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Source.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SourceLinks">
            <summary>
            SourceLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SourceLinks.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SourceLinks" /> class.
            </summary>
            <param name="self">self.</param>
            <param name="query">query.</param>
            <param name="health">health.</param>
            <param name="buckets">buckets.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SourceLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SourceLinks.Query">
            <summary>
            Gets or Sets Query
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SourceLinks.Health">
            <summary>
            Gets or Sets Health
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SourceLinks.Buckets">
            <summary>
            Gets or Sets Buckets
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SourceLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SourceLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SourceLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SourceLinks.Equals(InfluxDB.Client.Api.Domain.SourceLinks)">
            <summary>
            Returns true if SourceLinks instances are equal
            </summary>
            <param name="input">Instance of SourceLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SourceLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Sources">
            <summary>
            Sources
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Sources.#ctor(InfluxDB.Client.Api.Domain.UsersLinks,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Source})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Sources" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="sources">sources.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Sources.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Sources._Sources">
            <summary>
            Gets or Sets _Sources
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Sources.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Sources.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Sources.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Sources.Equals(InfluxDB.Client.Api.Domain.Sources)">
            <summary>
            Returns true if Sources instances are equal
            </summary>
            <param name="input">Instance of Sources to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Sources.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Stack">
            <summary>
            Stack
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Stack.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StackEvents})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Stack" /> class.
            </summary>
            <param name="id">id.</param>
            <param name="orgID">orgID.</param>
            <param name="events">events.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Stack.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Stack.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Stack.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Stack.Events">
            <summary>
            Gets or Sets Events
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Stack.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Stack.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Stack.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Stack.Equals(InfluxDB.Client.Api.Domain.Stack)">
            <summary>
            Returns true if Stack instances are equal
            </summary>
            <param name="input">Instance of Stack to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Stack.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.StackAssociations">
            <summary>
            StackAssociations
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackAssociations.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackAssociations.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.StackAssociations" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="metaName">metaName.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackAssociations.MetaName">
            <summary>
            Gets or Sets MetaName
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackAssociations.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackAssociations.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackAssociations.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackAssociations.Equals(InfluxDB.Client.Api.Domain.StackAssociations)">
            <summary>
            Returns true if StackAssociations instances are equal
            </summary>
            <param name="input">Instance of StackAssociations to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackAssociations.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.StackEvents">
            <summary>
            StackEvents
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackEvents.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StackResources},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.StackEvents" /> class.
            </summary>
            <param name="eventType">eventType.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="sources">sources.</param>
            <param name="resources">resources.</param>
            <param name="urls">urls.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackEvents.EventType">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackEvents.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackEvents.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackEvents.Sources">
            <summary>
            Gets or Sets Sources
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackEvents.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackEvents.Urls">
            <summary>
            Gets or Sets Urls
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackEvents.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackEvents.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackEvents.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackEvents.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackEvents.Equals(InfluxDB.Client.Api.Domain.StackEvents)">
            <summary>
            Returns true if StackEvents instances are equal
            </summary>
            <param name="input">Instance of StackEvents to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackEvents.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.StackLinks">
            <summary>
            StackLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackLinks.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.StackLinks" /> class.
            </summary>
            <param name="self">self.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackLinks.Equals(InfluxDB.Client.Api.Domain.StackLinks)">
            <summary>
            Returns true if StackLinks instances are equal
            </summary>
            <param name="input">Instance of StackLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.StackResources">
            <summary>
            StackResources
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackResources.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackResources.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StackAssociations},InfluxDB.Client.Api.Domain.StackLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.StackResources" /> class.
            </summary>
            <param name="apiVersion">apiVersion.</param>
            <param name="resourceID">resourceID.</param>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="associations">associations.</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackResources.ApiVersion">
            <summary>
            Gets or Sets ApiVersion
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackResources.ResourceID">
            <summary>
            Gets or Sets ResourceID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackResources.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackResources.Associations">
            <summary>
            Gets or Sets Associations
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StackResources.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackResources.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackResources.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackResources.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackResources.Equals(InfluxDB.Client.Api.Domain.StackResources)">
            <summary>
            Returns true if StackResources instances are equal
            </summary>
            <param name="input">Instance of StackResources to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StackResources.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Statement">
            <summary>
            Statement
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Statement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Statement" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Statement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Statement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Statement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Statement.Equals(InfluxDB.Client.Api.Domain.Statement)">
            <summary>
            Returns true if Statement instances are equal
            </summary>
            <param name="input">Instance of Statement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Statement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.StaticLegend">
            <summary>
            StaticLegend represents the options specific to the static legend
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StaticLegend.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32},System.String,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.StaticLegend" /> class.
            </summary>
            <param name="colorizeRows">colorizeRows.</param>
            <param name="heightRatio">heightRatio.</param>
            <param name="show">show.</param>
            <param name="opacity">opacity.</param>
            <param name="orientationThreshold">orientationThreshold.</param>
            <param name="valueAxis">valueAxis.</param>
            <param name="widthRatio">widthRatio.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StaticLegend.ColorizeRows">
            <summary>
            Gets or Sets ColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StaticLegend.HeightRatio">
            <summary>
            Gets or Sets HeightRatio
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StaticLegend.Show">
            <summary>
            Gets or Sets Show
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StaticLegend.Opacity">
            <summary>
            Gets or Sets Opacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StaticLegend.OrientationThreshold">
            <summary>
            Gets or Sets OrientationThreshold
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StaticLegend.ValueAxis">
            <summary>
            Gets or Sets ValueAxis
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StaticLegend.WidthRatio">
            <summary>
            Gets or Sets WidthRatio
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StaticLegend.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StaticLegend.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StaticLegend.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StaticLegend.Equals(InfluxDB.Client.Api.Domain.StaticLegend)">
            <summary>
            Returns true if StaticLegend instances are equal
            </summary>
            <param name="input">Instance of StaticLegend to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StaticLegend.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.StatusRule">
            <summary>
            StatusRule
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StatusRule.CurrentLevel">
            <summary>
            Gets or Sets CurrentLevel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StatusRule.PreviousLevel">
            <summary>
            Gets or Sets PreviousLevel
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StatusRule.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.RuleStatusLevel},System.Nullable{InfluxDB.Client.Api.Domain.RuleStatusLevel},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.StatusRule" /> class.
            </summary>
            <param name="currentLevel">currentLevel.</param>
            <param name="previousLevel">previousLevel.</param>
            <param name="count">count.</param>
            <param name="period">period.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StatusRule.Count">
            <summary>
            Gets or Sets Count
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StatusRule.Period">
            <summary>
            Gets or Sets Period
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StatusRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StatusRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StatusRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StatusRule.Equals(InfluxDB.Client.Api.Domain.StatusRule)">
            <summary>
            Returns true if StatusRule instances are equal
            </summary>
            <param name="input">Instance of StatusRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StatusRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.StringLiteral">
            <summary>
            Expressions begin and end with double quote marks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StringLiteral.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.StringLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StringLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.StringLiteral.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StringLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StringLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StringLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StringLiteral.Equals(InfluxDB.Client.Api.Domain.StringLiteral)">
            <summary>
            Returns true if StringLiteral instances are equal
            </summary>
            <param name="input">Instance of StringLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.StringLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.SubscriptionManifest">
            <summary>
            SubscriptionManifest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SubscriptionManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SubscriptionManifest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SubscriptionManifest.#ctor(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.SubscriptionManifest" /> class.
            </summary>
            <param name="name">name (required).</param>
            <param name="mode">mode (required).</param>
            <param name="destinations">destinations (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SubscriptionManifest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SubscriptionManifest.Mode">
            <summary>
            Gets or Sets Mode
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.SubscriptionManifest.Destinations">
            <summary>
            Gets or Sets Destinations
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SubscriptionManifest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SubscriptionManifest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SubscriptionManifest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SubscriptionManifest.Equals(InfluxDB.Client.Api.Domain.SubscriptionManifest)">
            <summary>
            Returns true if SubscriptionManifest instances are equal
            </summary>
            <param name="input">Instance of SubscriptionManifest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.SubscriptionManifest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TableViewProperties">
            <summary>
            TableViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TableViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TableViewProperties.TypeEnum.Table">
            <summary>
            Enum Table for value: table
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TableViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TableViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TableViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewProperties.#ctor(InfluxDB.Client.Api.Domain.TableViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},InfluxDB.Client.Api.Domain.TableViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.RenamableField},System.String,InfluxDB.Client.Api.Domain.DecimalPlaces)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TableViewProperties" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Table).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="tableOptions">tableOptions (required).</param>
            <param name="fieldOptions">fieldOptions represent the fields retrieved by the query with customization options (required).</param>
            <param name="timeFormat">timeFormat describes the display format for time values according to moment.js date formatting (required).</param>
            <param name="decimalPlaces">decimalPlaces (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.TableOptions">
            <summary>
            Gets or Sets TableOptions
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.FieldOptions">
            <summary>
            fieldOptions represent the fields retrieved by the query with customization options
            </summary>
            <value>fieldOptions represent the fields retrieved by the query with customization options</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.TimeFormat">
            <summary>
            timeFormat describes the display format for time values according to moment.js date formatting
            </summary>
            <value>timeFormat describes the display format for time values according to moment.js date formatting</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewProperties.DecimalPlaces">
            <summary>
            Gets or Sets DecimalPlaces
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewProperties.Equals(InfluxDB.Client.Api.Domain.TableViewProperties)">
            <summary>
            Returns true if TableViewProperties instances are equal
            </summary>
            <param name="input">Instance of TableViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions">
            <summary>
            TableViewPropertiesTableOptions
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.WrappingEnum">
            <summary>
            Wrapping describes the text wrapping style to be used in table views
            </summary>
            <value>Wrapping describes the text wrapping style to be used in table views</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.WrappingEnum.Truncate">
            <summary>
            Enum Truncate for value: truncate
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.WrappingEnum.Wrap">
            <summary>
            Enum Wrap for value: wrap
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.WrappingEnum.SingleLine">
            <summary>
            Enum SingleLine for value: single-line
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.Wrapping">
            <summary>
            Wrapping describes the text wrapping style to be used in table views
            </summary>
            <value>Wrapping describes the text wrapping style to be used in table views</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.#ctor(System.Nullable{System.Boolean},InfluxDB.Client.Api.Domain.RenamableField,System.Nullable{InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.WrappingEnum},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions" /> class.
            </summary>
            <param name="verticalTimeAxis">verticalTimeAxis describes the orientation of the table by indicating whether the time axis will be displayed vertically.</param>
            <param name="sortBy">sortBy.</param>
            <param name="wrapping">Wrapping describes the text wrapping style to be used in table views.</param>
            <param name="fixFirstColumn">fixFirstColumn indicates whether the first column of the table should be locked.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.VerticalTimeAxis">
            <summary>
            verticalTimeAxis describes the orientation of the table by indicating whether the time axis will be displayed vertically
            </summary>
            <value>verticalTimeAxis describes the orientation of the table by indicating whether the time axis will be displayed vertically</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.SortBy">
            <summary>
            Gets or Sets SortBy
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.FixFirstColumn">
            <summary>
            fixFirstColumn indicates whether the first column of the table should be locked
            </summary>
            <value>fixFirstColumn indicates whether the first column of the table should be locked</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.Equals(InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions)">
            <summary>
            Returns true if TableViewPropertiesTableOptions instances are equal
            </summary>
            <param name="input">Instance of TableViewPropertiesTableOptions to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TableViewPropertiesTableOptions.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TagRule">
            <summary>
            TagRule
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TagRule.OperatorEnum">
            <summary>
            Defines Operator
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TagRule.OperatorEnum.Equal">
            <summary>
            Enum Equal for value: equal
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TagRule.OperatorEnum.Notequal">
            <summary>
            Enum Notequal for value: notequal
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TagRule.OperatorEnum.Equalregex">
            <summary>
            Enum Equalregex for value: equalregex
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TagRule.OperatorEnum.Notequalregex">
            <summary>
            Enum Notequalregex for value: notequalregex
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TagRule.Operator">
            <summary>
            Gets or Sets Operator
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TagRule.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TagRule.OperatorEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TagRule" /> class.
            </summary>
            <param name="key">key.</param>
            <param name="value">value.</param>
            <param name="_operator">_operator.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TagRule.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TagRule.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TagRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TagRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TagRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TagRule.Equals(InfluxDB.Client.Api.Domain.TagRule)">
            <summary>
            Returns true if TagRule instances are equal
            </summary>
            <param name="input">Instance of TagRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TagRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TaskCreateRequest">
            <summary>
            TaskCreateRequest
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskCreateRequest.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskCreateRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TaskCreateRequest" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskCreateRequest.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TaskCreateRequest" /> class.
            </summary>
            <param name="orgID">The ID of the organization that owns this Task..</param>
            <param name="org">The name of the organization that owns this Task..</param>
            <param name="status">status.</param>
            <param name="flux">The Flux script to run for this task. (required).</param>
            <param name="description">An optional description of the task..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskCreateRequest.OrgID">
            <summary>
            The ID of the organization that owns this Task.
            </summary>
            <value>The ID of the organization that owns this Task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskCreateRequest.Org">
            <summary>
            The name of the organization that owns this Task.
            </summary>
            <value>The name of the organization that owns this Task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskCreateRequest.Flux">
            <summary>
            The Flux script to run for this task.
            </summary>
            <value>The Flux script to run for this task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskCreateRequest.Description">
            <summary>
            An optional description of the task.
            </summary>
            <value>An optional description of the task.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskCreateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskCreateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskCreateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskCreateRequest.Equals(InfluxDB.Client.Api.Domain.TaskCreateRequest)">
            <summary>
            Returns true if TaskCreateRequest instances are equal
            </summary>
            <param name="input">Instance of TaskCreateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskCreateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TaskLinks">
            <summary>
            TaskLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TaskLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskLinks.Runs">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskLinks.Logs">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskLinks.Equals(InfluxDB.Client.Api.Domain.TaskLinks)">
            <summary>
            Returns true if TaskLinks instances are equal
            </summary>
            <param name="input">Instance of TaskLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Tasks">
            <summary>
            Tasks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Tasks.#ctor(InfluxDB.Client.Api.Domain.Links,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TaskType})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Tasks" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="tasks">tasks.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Tasks.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Tasks._Tasks">
            <summary>
            Gets or Sets _Tasks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Tasks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Tasks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Tasks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Tasks.Equals(InfluxDB.Client.Api.Domain.Tasks)">
            <summary>
            Returns true if Tasks instances are equal
            </summary>
            <param name="input">Instance of Tasks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Tasks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TaskStatusType">
            <summary>
            Defines TaskStatusType
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TaskStatusType.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TaskStatusType.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TaskType">
            <summary>
            TaskType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TaskType.LastRunStatusEnum">
            <summary>
            Defines LastRunStatus
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TaskType.LastRunStatusEnum.Failed">
            <summary>
            Enum Failed for value: failed
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TaskType.LastRunStatusEnum.Success">
            <summary>
            Enum Success for value: success
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TaskType.LastRunStatusEnum.Canceled">
            <summary>
            Enum Canceled for value: canceled
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.LastRunStatus">
            <summary>
            Gets or Sets LastRunStatus
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TaskType" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskType.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TaskType" /> class.
            </summary>
            <param name="type">Type of the task, useful for filtering a task list..</param>
            <param name="orgID">ID of the organization that owns the task. (required).</param>
            <param name="org">Name of the organization that owns the task..</param>
            <param name="name">Name of the task. (required).</param>
            <param name="ownerID">ID of the user who owns this Task..</param>
            <param name="description">Description of the task..</param>
            <param name="status">status.</param>
            <param name="labels">labels.</param>
            <param name="authorizationID">ID of the authorization used when the task communicates with the query engine..</param>
            <param name="flux">Flux script to run for this task. (required).</param>
            <param name="every">Interval at which the task runs. &#x60;every&#x60; also determines when the task first runs, depending on the specified time. Value is a [duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals))..</param>
            <param name="cron">[Cron expression](https://en.wikipedia.org/wiki/Cron#Overview) that defines the schedule on which the task runs. Cron scheduling is based on system time. Value is a [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview)..</param>
            <param name="offset">[Duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals) to delay execution of the task after the scheduled time has elapsed. &#x60;0&#x60; removes the offset. The value is a [duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals)..</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Type">
            <summary>
            Type of the task, useful for filtering a task list.
            </summary>
            <value>Type of the task, useful for filtering a task list.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.OrgID">
            <summary>
            ID of the organization that owns the task.
            </summary>
            <value>ID of the organization that owns the task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Org">
            <summary>
            Name of the organization that owns the task.
            </summary>
            <value>Name of the organization that owns the task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Name">
            <summary>
            Name of the task.
            </summary>
            <value>Name of the task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.OwnerID">
            <summary>
            ID of the user who owns this Task.
            </summary>
            <value>ID of the user who owns this Task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Description">
            <summary>
            Description of the task.
            </summary>
            <value>Description of the task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.AuthorizationID">
            <summary>
            ID of the authorization used when the task communicates with the query engine.
            </summary>
            <value>ID of the authorization used when the task communicates with the query engine.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Flux">
            <summary>
            Flux script to run for this task.
            </summary>
            <value>Flux script to run for this task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Every">
            <summary>
            Interval at which the task runs. &#x60;every&#x60; also determines when the task first runs, depending on the specified time. Value is a [duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals)).
            </summary>
            <value>Interval at which the task runs. &#x60;every&#x60; also determines when the task first runs, depending on the specified time. Value is a [duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals)).</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Cron">
            <summary>
            [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview) that defines the schedule on which the task runs. Cron scheduling is based on system time. Value is a [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview).
            </summary>
            <value>[Cron expression](https://en.wikipedia.org/wiki/Cron#Overview) that defines the schedule on which the task runs. Cron scheduling is based on system time. Value is a [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview).</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Offset">
            <summary>
            [Duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals) to delay execution of the task after the scheduled time has elapsed. &#x60;0&#x60; removes the offset. The value is a [duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals).
            </summary>
            <value>[Duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals) to delay execution of the task after the scheduled time has elapsed. &#x60;0&#x60; removes the offset. The value is a [duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals).</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.LatestCompleted">
            <summary>
            Timestamp of the latest scheduled and completed run. Value is a timestamp in [RFC3339 date/time format](https://docs.influxdata.com/flux/v0.x/data-types/basic/time/#time-syntax).
            </summary>
            <value>Timestamp of the latest scheduled and completed run. Value is a timestamp in [RFC3339 date/time format](https://docs.influxdata.com/flux/v0.x/data-types/basic/time/#time-syntax).</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.LastRunError">
            <summary>
            Gets or Sets LastRunError
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskType.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskType.Equals(InfluxDB.Client.Api.Domain.TaskType)">
            <summary>
            Returns true if TaskType instances are equal
            </summary>
            <param name="input">Instance of TaskType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TaskUpdateRequest">
            <summary>
            TaskUpdateRequest
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskUpdateRequest.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TaskUpdateRequest" /> class.
            </summary>
            <param name="status">status.</param>
            <param name="flux">The Flux script to run for this task..</param>
            <param name="name">Override the &#39;name&#39; option in the flux script..</param>
            <param name="every">Override the &#39;every&#39; option in the flux script..</param>
            <param name="cron">Override the &#39;cron&#39; option in the flux script..</param>
            <param name="offset">Override the &#39;offset&#39; option in the flux script..</param>
            <param name="description">An optional description of the task..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Flux">
            <summary>
            The Flux script to run for this task.
            </summary>
            <value>The Flux script to run for this task.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Name">
            <summary>
            Override the &#39;name&#39; option in the flux script.
            </summary>
            <value>Override the &#39;name&#39; option in the flux script.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Every">
            <summary>
            Override the &#39;every&#39; option in the flux script.
            </summary>
            <value>Override the &#39;every&#39; option in the flux script.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Cron">
            <summary>
            Override the &#39;cron&#39; option in the flux script.
            </summary>
            <value>Override the &#39;cron&#39; option in the flux script.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Offset">
            <summary>
            Override the &#39;offset&#39; option in the flux script.
            </summary>
            <value>Override the &#39;offset&#39; option in the flux script.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Description">
            <summary>
            An optional description of the task.
            </summary>
            <value>An optional description of the task.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskUpdateRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskUpdateRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskUpdateRequest.Equals(InfluxDB.Client.Api.Domain.TaskUpdateRequest)">
            <summary>
            Returns true if TaskUpdateRequest instances are equal
            </summary>
            <param name="input">Instance of TaskUpdateRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TaskUpdateRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Telegraf">
            <summary>
            Telegraf
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegraf.#ctor(InfluxDB.Client.Api.Domain.TelegrafLinks,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},System.String,System.String,InfluxDB.Client.Api.Domain.TelegrafRequestMetadata,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Telegraf" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="labels">labels.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Telegraf.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Telegraf.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Telegraf.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegraf.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegraf.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegraf.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegraf.Equals(InfluxDB.Client.Api.Domain.Telegraf)">
            <summary>
            Returns true if Telegraf instances are equal
            </summary>
            <param name="input">Instance of Telegraf to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegraf.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafLinks">
            <summary>
            TelegrafLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegrafLinks" /> class.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafLinks.Self">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafLinks.Labels">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafLinks.Members">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafLinks.Owners">
            <summary>
            URI of resource.
            </summary>
            <value>URI of resource.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafLinks.Equals(InfluxDB.Client.Api.Domain.TelegrafLinks)">
            <summary>
            Returns true if TelegrafLinks instances are equal
            </summary>
            <param name="input">Instance of TelegrafLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafPlugin">
            <summary>
            TelegrafPlugin
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafPlugin.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TelegrafPlugin.TypeEnum.Input">
            <summary>
            Enum Input for value: input
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TelegrafPlugin.TypeEnum.Output">
            <summary>
            Enum Output for value: output
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPlugin.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugin.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TelegrafPlugin.TypeEnum},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegrafPlugin" /> class.
            </summary>
            <param name="type">type.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="config">config.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPlugin.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPlugin.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPlugin.Config">
            <summary>
            Gets or Sets Config
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugin.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugin.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugin.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugin.Equals(InfluxDB.Client.Api.Domain.TelegrafPlugin)">
            <summary>
            Returns true if TelegrafPlugin instances are equal
            </summary>
            <param name="input">Instance of TelegrafPlugin to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugin.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafPluginRequest">
            <summary>
            TelegrafPluginRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins},InfluxDB.Client.Api.Domain.TelegrafRequestMetadata,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegrafPluginRequest" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="plugins">plugins.</param>
            <param name="metadata">metadata.</param>
            <param name="config">config.</param>
            <param name="orgID">orgID.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.Plugins">
            <summary>
            Gets or Sets Plugins
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.Metadata">
            <summary>
            Gets or Sets Metadata
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.Config">
            <summary>
            Gets or Sets Config
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.Equals(InfluxDB.Client.Api.Domain.TelegrafPluginRequest)">
            <summary>
            Returns true if TelegrafPluginRequest instances are equal
            </summary>
            <param name="input">Instance of TelegrafPluginRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins">
            <summary>
            TelegrafPluginRequestPlugins
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins" /> class.
            </summary>
            <param name="type">type.</param>
            <param name="name">name.</param>
            <param name="alias">alias.</param>
            <param name="description">description.</param>
            <param name="config">config.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.Alias">
            <summary>
            Gets or Sets Alias
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.Config">
            <summary>
            Gets or Sets Config
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.Equals(InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins)">
            <summary>
            Returns true if TelegrafPluginRequestPlugins instances are equal
            </summary>
            <param name="input">Instance of TelegrafPluginRequestPlugins to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafPlugins">
            <summary>
            TelegrafPlugins
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugins.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegrafPlugins" /> class.
            </summary>
            <param name="version">version.</param>
            <param name="os">os.</param>
            <param name="plugins">plugins.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPlugins.Version">
            <summary>
            Gets or Sets Version
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPlugins.Os">
            <summary>
            Gets or Sets Os
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafPlugins.Plugins">
            <summary>
            Gets or Sets Plugins
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugins.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugins.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugins.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugins.Equals(InfluxDB.Client.Api.Domain.TelegrafPlugins)">
            <summary>
            Returns true if TelegrafPlugins instances are equal
            </summary>
            <param name="input">Instance of TelegrafPlugins to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafPlugins.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafRequest">
            <summary>
            TelegrafRequest
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequest.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.TelegrafRequestMetadata,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegrafRequest" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="metadata">metadata.</param>
            <param name="config">config.</param>
            <param name="orgID">orgID.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafRequest.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafRequest.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafRequest.Metadata">
            <summary>
            Gets or Sets Metadata
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafRequest.Config">
            <summary>
            Gets or Sets Config
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafRequest.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequest.Equals(InfluxDB.Client.Api.Domain.TelegrafRequest)">
            <summary>
            Returns true if TelegrafRequest instances are equal
            </summary>
            <param name="input">Instance of TelegrafRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata">
            <summary>
            TelegrafRequestMetadata
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata" /> class.
            </summary>
            <param name="buckets">buckets.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata.Buckets">
            <summary>
            Gets or Sets Buckets
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata.Equals(InfluxDB.Client.Api.Domain.TelegrafRequestMetadata)">
            <summary>
            Returns true if TelegrafRequestMetadata instances are equal
            </summary>
            <param name="input">Instance of TelegrafRequestMetadata to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegrafRequestMetadata.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Telegrafs">
            <summary>
            Telegrafs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegrafs.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Telegraf})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Telegrafs" /> class.
            </summary>
            <param name="configurations">configurations.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Telegrafs.Configurations">
            <summary>
            Gets or Sets Configurations
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegrafs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegrafs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegrafs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegrafs.Equals(InfluxDB.Client.Api.Domain.Telegrafs)">
            <summary>
            Returns true if Telegrafs instances are equal
            </summary>
            <param name="input">Instance of Telegrafs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Telegrafs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint">
            <summary>
            TelegramNotificationEndpoint
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.NotificationEndpointBase.StatusEnum},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationEndpointBaseLinks,InfluxDB.Client.Api.Domain.NotificationEndpointType)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint" /> class.
            </summary>
            <param name="token">Specifies the Telegram bot token. See https://core.telegram.org/bots#creating-a-new-bot . (required).</param>
            <param name="channel">ID of the telegram channel, a chat_id in https://core.telegram.org/bots/api#sendmessage . (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.Token">
            <summary>
            Specifies the Telegram bot token. See https://core.telegram.org/bots#creating-a-new-bot .
            </summary>
            <value>Specifies the Telegram bot token. See https://core.telegram.org/bots#creating-a-new-bot .</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.Channel">
            <summary>
            ID of the telegram channel, a chat_id in https://core.telegram.org/bots/api#sendmessage .
            </summary>
            <value>ID of the telegram channel, a chat_id in https://core.telegram.org/bots/api#sendmessage .</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.Equals(InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint)">
            <summary>
            Returns true if TelegramNotificationEndpoint instances are equal
            </summary>
            <param name="input">Instance of TelegramNotificationEndpoint to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationEndpoint.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegramNotificationRule">
            <summary>
            TelegramNotificationRule
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegramNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRule.#ctor(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks,InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.TypeEnum,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ParseModeEnum},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegramNotificationRule" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRule.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRule.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRule.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRule.Equals(InfluxDB.Client.Api.Domain.TelegramNotificationRule)">
            <summary>
            Returns true if TelegramNotificationRule instances are equal
            </summary>
            <param name="input">Instance of TelegramNotificationRule to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRule.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase">
            <summary>
            TelegramNotificationRuleBase
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.TypeEnum">
            <summary>
            The discriminator between other types of notification rules is \&quot;telegram\&quot;.
            </summary>
            <value>The discriminator between other types of notification rules is \&quot;telegram\&quot;.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.TypeEnum.Telegram">
            <summary>
            Enum Telegram for value: telegram
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.Type">
            <summary>
            The discriminator between other types of notification rules is \&quot;telegram\&quot;.
            </summary>
            <value>The discriminator between other types of notification rules is \&quot;telegram\&quot;.</value>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ParseModeEnum">
            <summary>
            Parse mode of the message text per https://core.telegram.org/bots/api#formatting-options . Defaults to \&quot;MarkdownV2\&quot; .
            </summary>
            <value>Parse mode of the message text per https://core.telegram.org/bots/api#formatting-options . Defaults to \&quot;MarkdownV2\&quot; .</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ParseModeEnum.MarkdownV2">
            <summary>
            Enum MarkdownV2 for value: MarkdownV2
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ParseModeEnum.HTML">
            <summary>
            Enum HTML for value: HTML
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ParseModeEnum.Markdown">
            <summary>
            Enum Markdown for value: Markdown
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ParseMode">
            <summary>
            Parse mode of the message text per https://core.telegram.org/bots/api#formatting-options . Defaults to \&quot;MarkdownV2\&quot; .
            </summary>
            <value>Parse mode of the message text per https://core.telegram.org/bots/api#formatting-options . Defaults to \&quot;MarkdownV2\&quot; .</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.#ctor(InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.TypeEnum,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ParseModeEnum},System.Nullable{System.Boolean},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TaskStatusType,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.StatusRule},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.NotificationRuleBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase" /> class.
            </summary>
            <param name="type">The discriminator between other types of notification rules is \&quot;telegram\&quot;. (required) (default to TypeEnum.Telegram).</param>
            <param name="messageTemplate">The message template as a flux interpolated string. (required).</param>
            <param name="parseMode">Parse mode of the message text per https://core.telegram.org/bots/api#formatting-options . Defaults to \&quot;MarkdownV2\&quot; ..</param>
            <param name="disableWebPagePreview">Disables preview of web links in the sent messages when \&quot;true\&quot;. Defaults to \&quot;false\&quot; ..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.MessageTemplate">
            <summary>
            The message template as a flux interpolated string.
            </summary>
            <value>The message template as a flux interpolated string.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.DisableWebPagePreview">
            <summary>
            Disables preview of web links in the sent messages when \&quot;true\&quot;. Defaults to \&quot;false\&quot; .
            </summary>
            <value>Disables preview of web links in the sent messages when \&quot;true\&quot;. Defaults to \&quot;false\&quot; .</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.Equals(InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase)">
            <summary>
            Returns true if TelegramNotificationRuleBase instances are equal
            </summary>
            <param name="input">Instance of TelegramNotificationRuleBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TelegramNotificationRuleBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateApply">
            <summary>
            TemplateApply
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApply.#ctor(System.Nullable{System.Boolean},System.String,System.String,InfluxDB.Client.Api.Domain.TemplateApplyTemplate,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateApplyTemplate},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateApplyRemotes},System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateApply" /> class.
            </summary>
            <param name="dryRun">dryRun.</param>
            <param name="orgID">orgID.</param>
            <param name="stackID">stackID.</param>
            <param name="template">template.</param>
            <param name="templates">templates.</param>
            <param name="envRefs">envRefs.</param>
            <param name="secrets">secrets.</param>
            <param name="remotes">remotes.</param>
            <param name="actions">actions.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.DryRun">
            <summary>
            Gets or Sets DryRun
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.StackID">
            <summary>
            Gets or Sets StackID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.Template">
            <summary>
            Gets or Sets Template
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.Templates">
            <summary>
            Gets or Sets Templates
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.EnvRefs">
            <summary>
            Gets or Sets EnvRefs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.Secrets">
            <summary>
            Gets or Sets Secrets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.Remotes">
            <summary>
            Gets or Sets Remotes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApply.Actions">
            <summary>
            Gets or Sets Actions
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApply.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApply.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApply.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApply.Equals(InfluxDB.Client.Api.Domain.TemplateApply)">
            <summary>
            Returns true if TemplateApply instances are equal
            </summary>
            <param name="input">Instance of TemplateApply to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApply.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateApplyRemotes">
            <summary>
            TemplateApplyRemotes
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateApplyRemotes" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateApplyRemotes" /> class.
            </summary>
            <param name="url">url (required).</param>
            <param name="contentType">contentType.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.ContentType">
            <summary>
            Gets or Sets ContentType
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.Equals(InfluxDB.Client.Api.Domain.TemplateApplyRemotes)">
            <summary>
            Returns true if TemplateApplyRemotes instances are equal
            </summary>
            <param name="input">Instance of TemplateApplyRemotes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyRemotes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateApplyTemplate">
            <summary>
            TemplateApplyTemplate
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateApplyTemplate" /> class.
            </summary>
            <param name="contentType">contentType.</param>
            <param name="sources">sources.</param>
            <param name="contents">contents.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.ContentType">
            <summary>
            Gets or Sets ContentType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.Sources">
            <summary>
            Gets or Sets Sources
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.Contents">
            <summary>
            Gets or Sets Contents
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.Equals(InfluxDB.Client.Api.Domain.TemplateApplyTemplate)">
            <summary>
            Returns true if TemplateApplyTemplate instances are equal
            </summary>
            <param name="input">Instance of TemplateApplyTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateApplyTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateChart">
            <summary>
            TemplateChart
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateChart.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},InfluxDB.Client.Api.Domain.ViewProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateChart" /> class.
            </summary>
            <param name="xPos">xPos.</param>
            <param name="yPos">yPos.</param>
            <param name="height">height.</param>
            <param name="width">width.</param>
            <param name="properties">properties.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateChart.XPos">
            <summary>
            Gets or Sets XPos
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateChart.YPos">
            <summary>
            Gets or Sets YPos
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateChart.Height">
            <summary>
            Gets or Sets Height
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateChart.Width">
            <summary>
            Gets or Sets Width
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateChart.Properties">
            <summary>
            Gets or Sets Properties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateChart.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateChart.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateChart.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateChart.Equals(InfluxDB.Client.Api.Domain.TemplateChart)">
            <summary>
            Returns true if TemplateChart instances are equal
            </summary>
            <param name="input">Instance of TemplateChart to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateChart.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateExportByID">
            <summary>
            TemplateExportByID
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByID.#ctor(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateExportByIDResources})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateExportByID" /> class.
            </summary>
            <param name="stackID">stackID.</param>
            <param name="orgIDs">orgIDs.</param>
            <param name="resources">resources.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByID.StackID">
            <summary>
            Gets or Sets StackID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByID.OrgIDs">
            <summary>
            Gets or Sets OrgIDs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByID.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByID.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByID.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByID.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByID.Equals(InfluxDB.Client.Api.Domain.TemplateExportByID)">
            <summary>
            Returns true if TemplateExportByID instances are equal
            </summary>
            <param name="input">Instance of TemplateExportByID to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByID.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs">
            <summary>
            TemplateExportByIDOrgIDs
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.#ctor(System.String,InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs" /> class.
            </summary>
            <param name="orgID">orgID.</param>
            <param name="resourceFilters">resourceFilters.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.ResourceFilters">
            <summary>
            Gets or Sets ResourceFilters
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.Equals(InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs)">
            <summary>
            Returns true if TemplateExportByIDOrgIDs instances are equal
            </summary>
            <param name="input">Instance of TemplateExportByIDOrgIDs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDOrgIDs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters">
            <summary>
            TemplateExportByIDResourceFilters
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateKind})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters" /> class.
            </summary>
            <param name="byLabel">byLabel.</param>
            <param name="byResourceKind">byResourceKind.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.ByLabel">
            <summary>
            Gets or Sets ByLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.ByResourceKind">
            <summary>
            Gets or Sets ByResourceKind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.Equals(InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters)">
            <summary>
            Returns true if TemplateExportByIDResourceFilters instances are equal
            </summary>
            <param name="input">Instance of TemplateExportByIDResourceFilters to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResourceFilters.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateExportByIDResources">
            <summary>
            TemplateExportByIDResources
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateExportByIDResources" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.#ctor(System.String,InfluxDB.Client.Api.Domain.TemplateKind,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateExportByIDResources" /> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="kind">kind (required).</param>
            <param name="name">if defined with id, name is used for resource exported by id. if defined independently, resources strictly matching name are exported.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.Name">
            <summary>
            if defined with id, name is used for resource exported by id. if defined independently, resources strictly matching name are exported
            </summary>
            <value>if defined with id, name is used for resource exported by id. if defined independently, resources strictly matching name are exported</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.Equals(InfluxDB.Client.Api.Domain.TemplateExportByIDResources)">
            <summary>
            Returns true if TemplateExportByIDResources instances are equal
            </summary>
            <param name="input">Instance of TemplateExportByIDResources to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateExportByIDResources.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateKind">
            <summary>
            Defines TemplateKind
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.Bucket">
            <summary>
            Enum Bucket for value: Bucket
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.Check">
            <summary>
            Enum Check for value: Check
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.CheckDeadman">
            <summary>
            Enum CheckDeadman for value: CheckDeadman
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.CheckThreshold">
            <summary>
            Enum CheckThreshold for value: CheckThreshold
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.Dashboard">
            <summary>
            Enum Dashboard for value: Dashboard
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.Label">
            <summary>
            Enum Label for value: Label
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.NotificationEndpoint">
            <summary>
            Enum NotificationEndpoint for value: NotificationEndpoint
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.NotificationEndpointHTTP">
            <summary>
            Enum NotificationEndpointHTTP for value: NotificationEndpointHTTP
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.NotificationEndpointPagerDuty">
            <summary>
            Enum NotificationEndpointPagerDuty for value: NotificationEndpointPagerDuty
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.NotificationEndpointSlack">
            <summary>
            Enum NotificationEndpointSlack for value: NotificationEndpointSlack
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.NotificationRule">
            <summary>
            Enum NotificationRule for value: NotificationRule
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.Task">
            <summary>
            Enum Task for value: Task
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.Telegraf">
            <summary>
            Enum Telegraf for value: Telegraf
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.TemplateKind.Variable">
            <summary>
            Enum Variable for value: Variable
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummary">
            <summary>
            TemplateSummary
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummary.#ctor(System.Collections.Generic.List{System.String},System.String,InfluxDB.Client.Api.Domain.TemplateSummarySummary,InfluxDB.Client.Api.Domain.TemplateSummaryDiff,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryErrors})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummary" /> class.
            </summary>
            <param name="sources">sources.</param>
            <param name="stackID">stackID.</param>
            <param name="summary">summary.</param>
            <param name="diff">diff.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummary.Sources">
            <summary>
            Gets or Sets Sources
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummary.StackID">
            <summary>
            Gets or Sets StackID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummary.Summary">
            <summary>
            Gets or Sets Summary
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummary.Diff">
            <summary>
            Gets or Sets Diff
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummary.Errors">
            <summary>
            Gets or Sets Errors
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummary.Equals(InfluxDB.Client.Api.Domain.TemplateSummary)">
            <summary>
            Returns true if TemplateSummary instances are equal
            </summary>
            <param name="input">Instance of TemplateSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiff">
            <summary>
            TemplateSummaryDiff
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiff" /> class.
            </summary>
            <param name="buckets">buckets.</param>
            <param name="checks">checks.</param>
            <param name="dashboards">dashboards.</param>
            <param name="labels">labels.</param>
            <param name="labelMappings">labelMappings.</param>
            <param name="notificationEndpoints">notificationEndpoints.</param>
            <param name="notificationRules">notificationRules.</param>
            <param name="tasks">tasks.</param>
            <param name="telegrafConfigs">telegrafConfigs.</param>
            <param name="variables">variables.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Buckets">
            <summary>
            Gets or Sets Buckets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Checks">
            <summary>
            Gets or Sets Checks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Dashboards">
            <summary>
            Gets or Sets Dashboards
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.LabelMappings">
            <summary>
            Gets or Sets LabelMappings
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.NotificationEndpoints">
            <summary>
            Gets or Sets NotificationEndpoints
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.NotificationRules">
            <summary>
            Gets or Sets NotificationRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Tasks">
            <summary>
            Gets or Sets Tasks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.TelegrafConfigs">
            <summary>
            Gets or Sets TelegrafConfigs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Variables">
            <summary>
            Gets or Sets Variables
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiff)">
            <summary>
            Returns true if TemplateSummaryDiff instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiff to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiff.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets">
            <summary>
            TemplateSummaryDiffBuckets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld,InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets)">
            <summary>
            Returns true if TemplateSummaryDiffBuckets instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffBuckets to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBuckets.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld">
            <summary>
            TemplateSummaryDiffBucketsNewOld
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.BucketRetentionRules})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="retentionRules">Rules to expire or retain data.  No rules means data never expires..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.RetentionRules">
            <summary>
            Rules to expire or retain data.  No rules means data never expires.
            </summary>
            <value>Rules to expire or retain data.  No rules means data never expires.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld)">
            <summary>
            Returns true if TemplateSummaryDiffBucketsNewOld instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffBucketsNewOld to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffBucketsNewOld.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks">
            <summary>
            TemplateSummaryDiffChecks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.CheckDiscriminator,InfluxDB.Client.Api.Domain.CheckDiscriminator)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks)">
            <summary>
            Returns true if TemplateSummaryDiffChecks instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffChecks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffChecks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards">
            <summary>
            TemplateSummaryDiffDashboards
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld,InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards" /> class.
            </summary>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards)">
            <summary>
            Returns true if TemplateSummaryDiffDashboards instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffDashboards to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboards.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld">
            <summary>
            TemplateSummaryDiffDashboardsNewOld
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.#ctor(System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateChart})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="charts">charts.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.Charts">
            <summary>
            Gets or Sets Charts
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld)">
            <summary>
            Returns true if TemplateSummaryDiffDashboardsNewOld instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffDashboardsNewOld to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffDashboardsNewOld.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings">
            <summary>
            TemplateSummaryDiffLabelMappings
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings" /> class.
            </summary>
            <param name="status">status.</param>
            <param name="resourceType">resourceType.</param>
            <param name="resourceID">resourceID.</param>
            <param name="resourceTemplateMetaName">resourceTemplateMetaName.</param>
            <param name="resourceName">resourceName.</param>
            <param name="labelID">labelID.</param>
            <param name="labelTemplateMetaName">labelTemplateMetaName.</param>
            <param name="labelName">labelName.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.ResourceType">
            <summary>
            Gets or Sets ResourceType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.ResourceID">
            <summary>
            Gets or Sets ResourceID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.ResourceTemplateMetaName">
            <summary>
            Gets or Sets ResourceTemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.ResourceName">
            <summary>
            Gets or Sets ResourceName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.LabelID">
            <summary>
            Gets or Sets LabelID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.LabelTemplateMetaName">
            <summary>
            Gets or Sets LabelTemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.LabelName">
            <summary>
            Gets or Sets LabelName
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings)">
            <summary>
            Returns true if TemplateSummaryDiffLabelMappings instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffLabelMappings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelMappings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels">
            <summary>
            TemplateSummaryDiffLabels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.#ctor(System.String,System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld,InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels" /> class.
            </summary>
            <param name="stateStatus">stateStatus.</param>
            <param name="kind">kind.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels)">
            <summary>
            Returns true if TemplateSummaryDiffLabels instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffLabels to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabels.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld">
            <summary>
            TemplateSummaryDiffLabelsNewOld
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="color">color.</param>
            <param name="description">description.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.Color">
            <summary>
            Gets or Sets Color
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld)">
            <summary>
            Returns true if TemplateSummaryDiffLabelsNewOld instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffLabelsNewOld to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffLabelsNewOld.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints">
            <summary>
            TemplateSummaryDiffNotificationEndpoints
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator,InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints)">
            <summary>
            Returns true if TemplateSummaryDiffNotificationEndpoints instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffNotificationEndpoints to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationEndpoints.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules">
            <summary>
            TemplateSummaryDiffNotificationRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld,InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules)">
            <summary>
            Returns true if TemplateSummaryDiffNotificationRules instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffNotificationRules to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRules.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld">
            <summary>
            TemplateSummaryDiffNotificationRulesNewOld
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="endpointName">endpointName.</param>
            <param name="endpointID">endpointID.</param>
            <param name="endpointType">endpointType.</param>
            <param name="every">every.</param>
            <param name="offset">offset.</param>
            <param name="messageTemplate">messageTemplate.</param>
            <param name="status">status.</param>
            <param name="statusRules">statusRules.</param>
            <param name="tagRules">tagRules.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.EndpointName">
            <summary>
            Gets or Sets EndpointName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.EndpointID">
            <summary>
            Gets or Sets EndpointID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.EndpointType">
            <summary>
            Gets or Sets EndpointType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.Every">
            <summary>
            Gets or Sets Every
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.Offset">
            <summary>
            Gets or Sets Offset
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.MessageTemplate">
            <summary>
            Gets or Sets MessageTemplate
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.StatusRules">
            <summary>
            Gets or Sets StatusRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.TagRules">
            <summary>
            Gets or Sets TagRules
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld)">
            <summary>
            Returns true if TemplateSummaryDiffNotificationRulesNewOld instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffNotificationRulesNewOld to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffNotificationRulesNewOld.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks">
            <summary>
            TemplateSummaryDiffTasks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld,InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks)">
            <summary>
            Returns true if TemplateSummaryDiffTasks instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffTasks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld">
            <summary>
            TemplateSummaryDiffTasksNewOld
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="cron">cron.</param>
            <param name="description">description.</param>
            <param name="every">every.</param>
            <param name="offset">offset.</param>
            <param name="query">query.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Cron">
            <summary>
            Gets or Sets Cron
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Every">
            <summary>
            Gets or Sets Every
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Offset">
            <summary>
            Gets or Sets Offset
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Query">
            <summary>
            Gets or Sets Query
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld)">
            <summary>
            Returns true if TemplateSummaryDiffTasksNewOld instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffTasksNewOld to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTasksNewOld.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs">
            <summary>
            TemplateSummaryDiffTelegrafConfigs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TelegrafRequest,InfluxDB.Client.Api.Domain.TelegrafRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs)">
            <summary>
            Returns true if TemplateSummaryDiffTelegrafConfigs instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffTelegrafConfigs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffTelegrafConfigs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables">
            <summary>
            TemplateSummaryDiffVariables
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld,InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="stateStatus">stateStatus.</param>
            <param name="id">id.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="_new">_new.</param>
            <param name="old">old.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.StateStatus">
            <summary>
            Gets or Sets StateStatus
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.New">
            <summary>
            Gets or Sets New
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.Old">
            <summary>
            Gets or Sets Old
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables)">
            <summary>
            Returns true if TemplateSummaryDiffVariables instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffVariables to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariables.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld">
            <summary>
            TemplateSummaryDiffVariablesNewOld
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.VariableProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld" /> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="args">args.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.Args">
            <summary>
            Gets or Sets Args
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld)">
            <summary>
            Returns true if TemplateSummaryDiffVariablesNewOld instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryDiffVariablesNewOld to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryDiffVariablesNewOld.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryErrors">
            <summary>
            TemplateSummaryErrors
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Nullable{System.Int32}})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryErrors" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="reason">reason.</param>
            <param name="fields">fields.</param>
            <param name="indexes">indexes.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.Reason">
            <summary>
            Gets or Sets Reason
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.Fields">
            <summary>
            Gets or Sets Fields
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.Indexes">
            <summary>
            Gets or Sets Indexes
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryErrors)">
            <summary>
            Returns true if TemplateSummaryErrors instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryErrors to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryErrors.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryLabel">
            <summary>
            TemplateSummaryLabel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties,System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryLabel" /> class.
            </summary>
            <param name="id">id.</param>
            <param name="orgID">orgID.</param>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="name">name.</param>
            <param name="properties">properties.</param>
            <param name="envReferences">envReferences.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.Properties">
            <summary>
            Gets or Sets Properties
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.EnvReferences">
            <summary>
            Gets or Sets EnvReferences
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryLabel)">
            <summary>
            Returns true if TemplateSummaryLabel instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryLabel to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabel.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties">
            <summary>
            TemplateSummaryLabelProperties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties" /> class.
            </summary>
            <param name="color">color.</param>
            <param name="description">description.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.Color">
            <summary>
            Gets or Sets Color
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.Equals(InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties)">
            <summary>
            Returns true if TemplateSummaryLabelProperties instances are equal
            </summary>
            <param name="input">Instance of TemplateSummaryLabelProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummaryLabelProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummary">
            <summary>
            TemplateSummarySummary
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummary.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.CheckDiscriminator},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryLabel},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.NotificationEndpointDiscriminator},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafRequest},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummary" /> class.
            </summary>
            <param name="buckets">buckets.</param>
            <param name="checks">checks.</param>
            <param name="dashboards">dashboards.</param>
            <param name="labels">labels.</param>
            <param name="labelMappings">labelMappings.</param>
            <param name="missingEnvRefs">missingEnvRefs.</param>
            <param name="missingSecrets">missingSecrets.</param>
            <param name="notificationEndpoints">notificationEndpoints.</param>
            <param name="notificationRules">notificationRules.</param>
            <param name="tasks">tasks.</param>
            <param name="telegrafConfigs">telegrafConfigs.</param>
            <param name="variables">variables.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Buckets">
            <summary>
            Gets or Sets Buckets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Checks">
            <summary>
            Gets or Sets Checks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Dashboards">
            <summary>
            Gets or Sets Dashboards
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.LabelMappings">
            <summary>
            Gets or Sets LabelMappings
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.MissingEnvRefs">
            <summary>
            Gets or Sets MissingEnvRefs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.MissingSecrets">
            <summary>
            Gets or Sets MissingSecrets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.NotificationEndpoints">
            <summary>
            Gets or Sets NotificationEndpoints
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.NotificationRules">
            <summary>
            Gets or Sets NotificationRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Tasks">
            <summary>
            Gets or Sets Tasks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.TelegrafConfigs">
            <summary>
            Gets or Sets TelegrafConfigs
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Variables">
            <summary>
            Gets or Sets Variables
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummary.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummary)">
            <summary>
            Returns true if TemplateSummarySummary instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets">
            <summary>
            TemplateSummarySummaryBuckets
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryLabel},System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets" /> class.
            </summary>
            <param name="id">id.</param>
            <param name="orgID">orgID.</param>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="retentionPeriod">retentionPeriod.</param>
            <param name="labelAssociations">labelAssociations.</param>
            <param name="envReferences">envReferences.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.RetentionPeriod">
            <summary>
            Gets or Sets RetentionPeriod
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.LabelAssociations">
            <summary>
            Gets or Sets LabelAssociations
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.EnvReferences">
            <summary>
            Gets or Sets EnvReferences
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets)">
            <summary>
            Returns true if TemplateSummarySummaryBuckets instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryBuckets to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryBuckets.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards">
            <summary>
            TemplateSummarySummaryDashboards
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryLabel},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateChart},System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards" /> class.
            </summary>
            <param name="id">id.</param>
            <param name="orgID">orgID.</param>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="labelAssociations">labelAssociations.</param>
            <param name="charts">charts.</param>
            <param name="envReferences">envReferences.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.LabelAssociations">
            <summary>
            Gets or Sets LabelAssociations
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.Charts">
            <summary>
            Gets or Sets Charts
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.EnvReferences">
            <summary>
            Gets or Sets EnvReferences
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards)">
            <summary>
            Returns true if TemplateSummarySummaryDashboards instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryDashboards to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryDashboards.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings">
            <summary>
            TemplateSummarySummaryLabelMappings
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings" /> class.
            </summary>
            <param name="status">status.</param>
            <param name="resourceTemplateMetaName">resourceTemplateMetaName.</param>
            <param name="resourceName">resourceName.</param>
            <param name="resourceID">resourceID.</param>
            <param name="resourceType">resourceType.</param>
            <param name="labelTemplateMetaName">labelTemplateMetaName.</param>
            <param name="labelName">labelName.</param>
            <param name="labelID">labelID.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.ResourceTemplateMetaName">
            <summary>
            Gets or Sets ResourceTemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.ResourceName">
            <summary>
            Gets or Sets ResourceName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.ResourceID">
            <summary>
            Gets or Sets ResourceID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.ResourceType">
            <summary>
            Gets or Sets ResourceType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.LabelTemplateMetaName">
            <summary>
            Gets or Sets LabelTemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.LabelName">
            <summary>
            Gets or Sets LabelName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.LabelID">
            <summary>
            Gets or Sets LabelID
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings)">
            <summary>
            Returns true if TemplateSummarySummaryLabelMappings instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryLabelMappings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryLabelMappings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules">
            <summary>
            TemplateSummarySummaryNotificationRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryLabel},System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="endpointTemplateMetaName">endpointTemplateMetaName.</param>
            <param name="endpointID">endpointID.</param>
            <param name="endpointType">endpointType.</param>
            <param name="every">every.</param>
            <param name="offset">offset.</param>
            <param name="messageTemplate">messageTemplate.</param>
            <param name="status">status.</param>
            <param name="statusRules">statusRules.</param>
            <param name="tagRules">tagRules.</param>
            <param name="labelAssociations">labelAssociations.</param>
            <param name="envReferences">envReferences.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.EndpointTemplateMetaName">
            <summary>
            Gets or Sets EndpointTemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.EndpointID">
            <summary>
            Gets or Sets EndpointID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.EndpointType">
            <summary>
            Gets or Sets EndpointType
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Every">
            <summary>
            Gets or Sets Every
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Offset">
            <summary>
            Gets or Sets Offset
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.MessageTemplate">
            <summary>
            Gets or Sets MessageTemplate
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.StatusRules">
            <summary>
            Gets or Sets StatusRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.TagRules">
            <summary>
            Gets or Sets TagRules
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.LabelAssociations">
            <summary>
            Gets or Sets LabelAssociations
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.EnvReferences">
            <summary>
            Gets or Sets EnvReferences
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules)">
            <summary>
            Returns true if TemplateSummarySummaryNotificationRules instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryNotificationRules to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryNotificationRules.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules">
            <summary>
            TemplateSummarySummaryStatusRules
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules" /> class.
            </summary>
            <param name="currentLevel">currentLevel.</param>
            <param name="previousLevel">previousLevel.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.CurrentLevel">
            <summary>
            Gets or Sets CurrentLevel
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.PreviousLevel">
            <summary>
            Gets or Sets PreviousLevel
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules)">
            <summary>
            Returns true if TemplateSummarySummaryStatusRules instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryStatusRules to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryStatusRules.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules">
            <summary>
            TemplateSummarySummaryTagRules
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules" /> class.
            </summary>
            <param name="key">key.</param>
            <param name="value">value.</param>
            <param name="_operator">_operator.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.Operator">
            <summary>
            Gets or Sets Operator
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules)">
            <summary>
            Returns true if TemplateSummarySummaryTagRules instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryTagRules to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTagRules.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks">
            <summary>
            TemplateSummarySummaryTasks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="id">id.</param>
            <param name="name">name.</param>
            <param name="cron">cron.</param>
            <param name="description">description.</param>
            <param name="every">every.</param>
            <param name="offset">offset.</param>
            <param name="query">query.</param>
            <param name="status">status.</param>
            <param name="envReferences">envReferences.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Cron">
            <summary>
            Gets or Sets Cron
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Every">
            <summary>
            Gets or Sets Every
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Offset">
            <summary>
            Gets or Sets Offset
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Query">
            <summary>
            Gets or Sets Query
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.EnvReferences">
            <summary>
            Gets or Sets EnvReferences
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks)">
            <summary>
            Returns true if TemplateSummarySummaryTasks instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryTasks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryTasks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables">
            <summary>
            TemplateSummarySummaryVariables
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.Kind">
            <summary>
            Gets or Sets Kind
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.TemplateKind},System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.VariableProperties,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TemplateSummaryLabel},System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables" /> class.
            </summary>
            <param name="kind">kind.</param>
            <param name="templateMetaName">templateMetaName.</param>
            <param name="id">id.</param>
            <param name="orgID">orgID.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="arguments">arguments.</param>
            <param name="labelAssociations">labelAssociations.</param>
            <param name="envReferences">envReferences.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.TemplateMetaName">
            <summary>
            Gets or Sets TemplateMetaName
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.Arguments">
            <summary>
            Gets or Sets Arguments
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.LabelAssociations">
            <summary>
            Gets or Sets LabelAssociations
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.EnvReferences">
            <summary>
            Gets or Sets EnvReferences
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.Equals(InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables)">
            <summary>
            Returns true if TemplateSummarySummaryVariables instances are equal
            </summary>
            <param name="input">Instance of TemplateSummarySummaryVariables to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TemplateSummarySummaryVariables.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.TestStatement">
            <summary>
            Declares a Flux test case
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TestStatement.#ctor(System.String,InfluxDB.Client.Api.Domain.VariableAssignment)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.TestStatement" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="assignment">assignment.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TestStatement.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.TestStatement.Assignment">
            <summary>
            Gets or Sets Assignment
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TestStatement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TestStatement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TestStatement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TestStatement.Equals(InfluxDB.Client.Api.Domain.TestStatement)">
            <summary>
            Returns true if TestStatement instances are equal
            </summary>
            <param name="input">Instance of TestStatement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.TestStatement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Threshold">
            <summary>
            Threshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Threshold.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Threshold" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Threshold.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.CheckStatusLevel},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Threshold" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Threshold.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Threshold.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Threshold.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Threshold.Equals(InfluxDB.Client.Api.Domain.Threshold)">
            <summary>
            Returns true if Threshold instances are equal
            </summary>
            <param name="input">Instance of Threshold to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Threshold.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ThresholdBase">
            <summary>
            ThresholdBase
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdBase.Level">
            <summary>
            Gets or Sets Level
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdBase.#ctor(System.Nullable{InfluxDB.Client.Api.Domain.CheckStatusLevel},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ThresholdBase" /> class.
            </summary>
            <param name="level">level.</param>
            <param name="allValues">If true, only alert if all values meet threshold..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdBase.AllValues">
            <summary>
            If true, only alert if all values meet threshold.
            </summary>
            <value>If true, only alert if all values meet threshold.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdBase.Equals(InfluxDB.Client.Api.Domain.ThresholdBase)">
            <summary>
            Returns true if ThresholdBase instances are equal
            </summary>
            <param name="input">Instance of ThresholdBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ThresholdCheck">
            <summary>
            ThresholdCheck
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ThresholdCheck.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.ThresholdCheck.TypeEnum.Threshold">
            <summary>
            Enum Threshold for value: threshold
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheck.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheck.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ThresholdCheck" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheck.#ctor(InfluxDB.Client.Api.Domain.ThresholdCheck.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Threshold},System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.ThresholdCheckTags},System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.DashboardQuery,System.Nullable{InfluxDB.Client.Api.Domain.TaskStatusType},System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.CheckBaseLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ThresholdCheck" /> class.
            </summary>
            <param name="type">type (required) (default to TypeEnum.Threshold).</param>
            <param name="thresholds">thresholds.</param>
            <param name="every">Check repetition interval..</param>
            <param name="offset">Duration to delay after the schedule, before executing check..</param>
            <param name="tags">List of tags to write to each status..</param>
            <param name="statusMessageTemplate">The template used to generate and write a status message..</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheck.Thresholds">
            <summary>
            Gets or Sets Thresholds
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheck.Every">
            <summary>
            Check repetition interval.
            </summary>
            <value>Check repetition interval.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheck.Offset">
            <summary>
            Duration to delay after the schedule, before executing check.
            </summary>
            <value>Duration to delay after the schedule, before executing check.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheck.Tags">
            <summary>
            List of tags to write to each status.
            </summary>
            <value>List of tags to write to each status.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheck.StatusMessageTemplate">
            <summary>
            The template used to generate and write a status message.
            </summary>
            <value>The template used to generate and write a status message.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheck.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheck.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheck.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheck.Equals(InfluxDB.Client.Api.Domain.ThresholdCheck)">
            <summary>
            Returns true if ThresholdCheck instances are equal
            </summary>
            <param name="input">Instance of ThresholdCheck to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheck.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ThresholdCheckTags">
            <summary>
            ThresholdCheckTags
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheckTags.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ThresholdCheckTags" /> class.
            </summary>
            <param name="key">key.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheckTags.Key">
            <summary>
            Gets or Sets Key
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ThresholdCheckTags.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheckTags.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheckTags.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheckTags.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheckTags.Equals(InfluxDB.Client.Api.Domain.ThresholdCheckTags)">
            <summary>
            Returns true if ThresholdCheckTags instances are equal
            </summary>
            <param name="input">Instance of ThresholdCheckTags to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ThresholdCheckTags.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.UnaryExpression">
            <summary>
            Uses operators to act on a single operand in an expression
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnaryExpression.#ctor(System.String,System.String,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.UnaryExpression" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="_operator">_operator.</param>
            <param name="argument">argument.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.UnaryExpression.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.UnaryExpression.Operator">
            <summary>
            Gets or Sets Operator
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.UnaryExpression.Argument">
            <summary>
            Gets or Sets Argument
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnaryExpression.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnaryExpression.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnaryExpression.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnaryExpression.Equals(InfluxDB.Client.Api.Domain.UnaryExpression)">
            <summary>
            Returns true if UnaryExpression instances are equal
            </summary>
            <param name="input">Instance of UnaryExpression to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnaryExpression.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral">
            <summary>
            Represents integer numbers
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="value">value.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.Equals(InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral)">
            <summary>
            Returns true if UnsignedIntegerLiteral instances are equal
            </summary>
            <param name="input">Instance of UnsignedIntegerLiteral to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UnsignedIntegerLiteral.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.User">
            <summary>
            User
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.User.StatusEnum">
            <summary>
            If inactive the user is inactive.
            </summary>
            <value>If inactive the user is inactive.</value>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.User.StatusEnum.Active">
            <summary>
            Enum Active for value: active
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.User.StatusEnum.Inactive">
            <summary>
            Enum Inactive for value: inactive
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.User.Status">
            <summary>
            If inactive the user is inactive.
            </summary>
            <value>If inactive the user is inactive.</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.User.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.User" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.User.#ctor(System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.User.StatusEnum},InfluxDB.Client.Api.Domain.UserLinks)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.User" /> class.
            </summary>
            <param name="oauthID">oauthID.</param>
            <param name="name">name (required).</param>
            <param name="status">If inactive the user is inactive. (default to StatusEnum.Active).</param>
            <param name="links">links.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.User.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.User.OauthID">
            <summary>
            Gets or Sets OauthID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.User.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.User.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.User.Equals(InfluxDB.Client.Api.Domain.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="input">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.UserLinks">
            <summary>
            UserLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UserLinks.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.UserLinks" /> class.
            </summary>
            <param name="self">self.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.UserLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UserLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UserLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UserLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UserLinks.Equals(InfluxDB.Client.Api.Domain.UserLinks)">
            <summary>
            Returns true if UserLinks instances are equal
            </summary>
            <param name="input">Instance of UserLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UserLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Users">
            <summary>
            Users
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Users.#ctor(InfluxDB.Client.Api.Domain.UsersLinks,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.User})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Users" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="users">users.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Users.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Users._Users">
            <summary>
            Gets or Sets _Users
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Users.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Users.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Users.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Users.Equals(InfluxDB.Client.Api.Domain.Users)">
            <summary>
            Returns true if Users instances are equal
            </summary>
            <param name="input">Instance of Users to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Users.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.UsersLinks">
            <summary>
            UsersLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UsersLinks.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.UsersLinks" /> class.
            </summary>
            <param name="self">self.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.UsersLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UsersLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UsersLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UsersLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UsersLinks.Equals(InfluxDB.Client.Api.Domain.UsersLinks)">
            <summary>
            Returns true if UsersLinks instances are equal
            </summary>
            <param name="input">Instance of UsersLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.UsersLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Variable">
            <summary>
            Variable
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Variable" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variable.#ctor(InfluxDB.Client.Api.Domain.VariableLinks,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Label},InfluxDB.Client.Api.Domain.VariableProperties,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Variable" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="orgID">orgID (required).</param>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="selected">selected.</param>
            <param name="labels">labels.</param>
            <param name="arguments">arguments (required).</param>
            <param name="createdAt">createdAt.</param>
            <param name="updatedAt">updatedAt.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.OrgID">
            <summary>
            Gets or Sets OrgID
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.Selected">
            <summary>
            Gets or Sets Selected
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.Arguments">
            <summary>
            Gets or Sets Arguments
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variable.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variable.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variable.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variable.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variable.Equals(InfluxDB.Client.Api.Domain.Variable)">
            <summary>
            Returns true if Variable instances are equal
            </summary>
            <param name="input">Instance of Variable to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variable.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.VariableAssignment">
            <summary>
            Represents the declaration of a variable
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableAssignment.#ctor(System.String,InfluxDB.Client.Api.Domain.Identifier,InfluxDB.Client.Api.Domain.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.VariableAssignment" /> class.
            </summary>
            <param name="type">Type of AST node.</param>
            <param name="id">id.</param>
            <param name="init">init.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.VariableAssignment.Type">
            <summary>
            Type of AST node
            </summary>
            <value>Type of AST node</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.VariableAssignment.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.VariableAssignment.Init">
            <summary>
            Gets or Sets Init
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableAssignment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableAssignment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableAssignment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableAssignment.Equals(InfluxDB.Client.Api.Domain.VariableAssignment)">
            <summary>
            Returns true if VariableAssignment instances are equal
            </summary>
            <param name="input">Instance of VariableAssignment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableAssignment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.VariableLinks">
            <summary>
            VariableLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableLinks.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.VariableLinks" /> class.
            </summary>
            <param name="self">self.</param>
            <param name="org">org.</param>
            <param name="labels">labels.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.VariableLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.VariableLinks.Org">
            <summary>
            Gets or Sets Org
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.VariableLinks.Labels">
            <summary>
            Gets or Sets Labels
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableLinks.Equals(InfluxDB.Client.Api.Domain.VariableLinks)">
            <summary>
            Returns true if VariableLinks instances are equal
            </summary>
            <param name="input">Instance of VariableLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.VariableProperties">
            <summary>
            VariableProperties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.VariableProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableProperties.Equals(InfluxDB.Client.Api.Domain.VariableProperties)">
            <summary>
            Returns true if VariableProperties instances are equal
            </summary>
            <param name="input">Instance of VariableProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.VariableProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Variables">
            <summary>
            Variables
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variables.#ctor(System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Variable})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Variables" /> class.
            </summary>
            <param name="variables">variables.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Variables._Variables">
            <summary>
            Gets or Sets _Variables
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variables.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variables.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variables.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variables.Equals(InfluxDB.Client.Api.Domain.Variables)">
            <summary>
            Returns true if Variables instances are equal
            </summary>
            <param name="input">Instance of Variables to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Variables.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.View">
            <summary>
            View
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.View.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.View" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.View.#ctor(InfluxDB.Client.Api.Domain.ViewLinks,System.String,InfluxDB.Client.Api.Domain.ViewProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.View" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="name">name (required).</param>
            <param name="properties">properties (required).</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.View.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.View.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.View.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.View.Properties">
            <summary>
            Gets or Sets Properties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.View.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.View.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.View.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.View.Equals(InfluxDB.Client.Api.Domain.View)">
            <summary>
            Returns true if View instances are equal
            </summary>
            <param name="input">Instance of View to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.View.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ViewLinks">
            <summary>
            ViewLinks
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewLinks.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ViewLinks" /> class.
            </summary>
            <param name="self">self.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.ViewLinks.Self">
            <summary>
            Gets or Sets Self
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewLinks.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewLinks.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewLinks.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewLinks.Equals(InfluxDB.Client.Api.Domain.ViewLinks)">
            <summary>
            Returns true if ViewLinks instances are equal
            </summary>
            <param name="input">Instance of ViewLinks to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewLinks.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.ViewProperties">
            <summary>
            ViewProperties
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.ViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewProperties.Equals(InfluxDB.Client.Api.Domain.ViewProperties)">
            <summary>
            Returns true if ViewProperties instances are equal
            </summary>
            <param name="input">Instance of ViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.ViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.Views">
            <summary>
            Views
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Views.#ctor(InfluxDB.Client.Api.Domain.ViewLinks,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.View})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.Views" /> class.
            </summary>
            <param name="links">links.</param>
            <param name="views">views.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Views.Links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.Views._Views">
            <summary>
            Gets or Sets _Views
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Views.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Views.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Views.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Views.Equals(InfluxDB.Client.Api.Domain.Views)">
            <summary>
            Returns true if Views instances are equal
            </summary>
            <param name="input">Instance of Views to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.Views.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.WritePrecision">
            <summary>
            Defines WritePrecision
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.WritePrecision.Ms">
            <summary>
            Enum Ms for value: ms
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.WritePrecision.S">
            <summary>
            Enum S for value: s
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.WritePrecision.Us">
            <summary>
            Enum Us for value: us
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.WritePrecision.Ns">
            <summary>
            Enum Ns for value: ns
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.XYGeom">
            <summary>
            Defines XYGeom
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYGeom.Line">
            <summary>
            Enum Line for value: line
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYGeom.Step">
            <summary>
            Enum Step for value: step
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYGeom.Stacked">
            <summary>
            Enum Stacked for value: stacked
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYGeom.Bar">
            <summary>
            Enum Bar for value: bar
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYGeom.MonotoneX">
            <summary>
            Enum MonotoneX for value: monotoneX
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.XYViewProperties">
            <summary>
            XYViewProperties
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.XYViewProperties.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.TypeEnum.Xy">
            <summary>
            Enum Xy for value: xy
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.XYViewProperties.ShapeEnum">
            <summary>
            Defines Shape
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.ShapeEnum.ChronografV2">
            <summary>
            Enum ChronografV2 for value: chronograf-v2
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Shape">
            <summary>
            Gets or Sets Shape
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.XYViewProperties.HoverDimensionEnum">
            <summary>
            Defines HoverDimension
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.HoverDimensionEnum.Auto">
            <summary>
            Enum Auto for value: auto
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.HoverDimensionEnum.X">
            <summary>
            Enum X for value: x
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.HoverDimensionEnum.Y">
            <summary>
            Enum Y for value: y
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.HoverDimensionEnum.Xy">
            <summary>
            Enum Xy for value: xy
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.HoverDimension">
            <summary>
            Gets or Sets HoverDimension
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Api.Domain.XYViewProperties.PositionEnum">
            <summary>
            Defines Position
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.PositionEnum.Overlaid">
            <summary>
            Enum Overlaid for value: overlaid
            </summary>
        </member>
        <member name="F:InfluxDB.Client.Api.Domain.XYViewProperties.PositionEnum.Stacked">
            <summary>
            Enum Stacked for value: stacked
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Position">
            <summary>
            Gets or Sets Position
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Geom">
            <summary>
            Gets or Sets Geom
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.XYViewProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.XYViewProperties" /> class.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.XYViewProperties.#ctor(System.String,InfluxDB.Client.Api.Domain.XYViewProperties.TypeEnum,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardQuery},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.DashboardColor},System.Collections.Generic.Dictionary{System.String,System.String},InfluxDB.Client.Api.Domain.XYViewProperties.ShapeEnum,System.String,System.Nullable{System.Boolean},InfluxDB.Client.Api.Domain.Axes,InfluxDB.Client.Api.Domain.StaticLegend,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{InfluxDB.Client.Api.Domain.XYViewProperties.HoverDimensionEnum},InfluxDB.Client.Api.Domain.XYViewProperties.PositionEnum,InfluxDB.Client.Api.Domain.XYGeom,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Domain.XYViewProperties" /> class.
            </summary>
            <param name="timeFormat">timeFormat.</param>
            <param name="type">type (required) (default to TypeEnum.Xy).</param>
            <param name="queries">queries (required).</param>
            <param name="colors">Colors define color encoding of data into a visualization (required).</param>
            <param name="colorMapping">A color mapping is an object that maps time series data to a UI color scheme to allow the UI to render graphs consistent colors across reloads..</param>
            <param name="shape">shape (required) (default to ShapeEnum.ChronografV2).</param>
            <param name="note">note (required).</param>
            <param name="showNoteWhenEmpty">If true, will display note when empty (required).</param>
            <param name="axes">axes (required).</param>
            <param name="staticLegend">staticLegend.</param>
            <param name="xColumn">xColumn.</param>
            <param name="generateXAxisTicks">generateXAxisTicks.</param>
            <param name="xTotalTicks">xTotalTicks.</param>
            <param name="xTickStart">xTickStart.</param>
            <param name="xTickStep">xTickStep.</param>
            <param name="yColumn">yColumn.</param>
            <param name="generateYAxisTicks">generateYAxisTicks.</param>
            <param name="yTotalTicks">yTotalTicks.</param>
            <param name="yTickStart">yTickStart.</param>
            <param name="yTickStep">yTickStep.</param>
            <param name="shadeBelow">shadeBelow.</param>
            <param name="hoverDimension">hoverDimension.</param>
            <param name="position">position (required).</param>
            <param name="geom">geom (required).</param>
            <param name="legendColorizeRows">legendColorizeRows.</param>
            <param name="legendHide">legendHide.</param>
            <param name="legendOpacity">legendOpacity.</param>
            <param name="legendOrientationThreshold">legendOrientationThreshold.</param>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.TimeFormat">
            <summary>
            Gets or Sets TimeFormat
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Queries">
            <summary>
            Gets or Sets Queries
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Colors">
            <summary>
            Colors define color encoding of data into a visualization
            </summary>
            <value>Colors define color encoding of data into a visualization</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.ColorMapping">
            <summary>
            A color mapping is an object that maps time series data to a UI color scheme to allow the UI to render graphs consistent colors across reloads.
            </summary>
            <value>A color mapping is an object that maps time series data to a UI color scheme to allow the UI to render graphs consistent colors across reloads.</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.ShowNoteWhenEmpty">
            <summary>
            If true, will display note when empty
            </summary>
            <value>If true, will display note when empty</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.Axes">
            <summary>
            Gets or Sets Axes
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.StaticLegend">
            <summary>
            Gets or Sets StaticLegend
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.XColumn">
            <summary>
            Gets or Sets XColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.GenerateXAxisTicks">
            <summary>
            Gets or Sets GenerateXAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.XTotalTicks">
            <summary>
            Gets or Sets XTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.XTickStart">
            <summary>
            Gets or Sets XTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.XTickStep">
            <summary>
            Gets or Sets XTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.YColumn">
            <summary>
            Gets or Sets YColumn
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.GenerateYAxisTicks">
            <summary>
            Gets or Sets GenerateYAxisTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.YTotalTicks">
            <summary>
            Gets or Sets YTotalTicks
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.YTickStart">
            <summary>
            Gets or Sets YTickStart
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.YTickStep">
            <summary>
            Gets or Sets YTickStep
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.ShadeBelow">
            <summary>
            Gets or Sets ShadeBelow
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.LegendColorizeRows">
            <summary>
            Gets or Sets LegendColorizeRows
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.LegendHide">
            <summary>
            Gets or Sets LegendHide
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.LegendOpacity">
            <summary>
            Gets or Sets LegendOpacity
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Api.Domain.XYViewProperties.LegendOrientationThreshold">
            <summary>
            Gets or Sets LegendOrientationThreshold
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.XYViewProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.XYViewProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.XYViewProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.XYViewProperties.Equals(InfluxDB.Client.Api.Domain.XYViewProperties)">
            <summary>
            Returns true if XYViewProperties instances are equal
            </summary>
            <param name="input">Instance of XYViewProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Domain.XYViewProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IAuthorizationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.DeleteAuthorizationsID(System.String,System.String)">
            <summary>
            Delete an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.DeleteAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizations(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <returns>Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizationsWithHttpInfo(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizationsID(System.String,System.String)">
            <summary>
            Retrieve an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PatchAuthorizationsID(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update an authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PatchAuthorizationsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update an authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PostAuthorizations(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String)">
            <summary>
            Create an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PostAuthorizationsWithHttpInfo(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String)">
            <summary>
            Create an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.DeleteAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.DeleteAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizationsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizationsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.GetAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PatchAuthorizationsIDAsync(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PatchAuthorizationsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PostAuthorizationsAsync(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IAuthorizationsService.PostAuthorizationsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.AuthorizationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.AuthorizationsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.AuthorizationsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.AuthorizationsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.AuthorizationsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsID(System.String,System.String)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.DeleteAuthorizationsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizations(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <returns>Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsWithHttpInfo(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsWithIRestResponse(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsWithRestRequest(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show authorizations that belong to a organization name. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsID(System.String,System.String)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.GetAuthorizationsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsID(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsIDAsync(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PatchAuthorizationsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the authorization to update.</param>
            <param name="authorizationUpdateRequest">Authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizations(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizationsWithHttpInfo(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizationsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizationsWithIRestResponse(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizationsWithRestRequest(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizationsAsync(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizationsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.AuthorizationsService.PostAuthorizationsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.AuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authorizationPostRequest">Authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorization)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IBackupService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupKV(System.String)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupKVWithHttpInfo(System.String)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupMetadata(System.String,System.String)">
            <summary>
            Download snapshot of all metadata in the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <returns>MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupMetadataWithHttpInfo(System.String,System.String)">
            <summary>
            Download snapshot of all metadata in the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <returns>ApiResponse of MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupShardId(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Download snapshot of all TSM data in a shard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <returns>System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupShardIdWithHttpInfo(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Download snapshot of all TSM data in a shard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupKVAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupKVAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (System.IO.Stream)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupMetadataAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all metadata in the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupMetadataAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all metadata in the server
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (MetadataBackup)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupShardIdAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all TSM data in a shard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBackupService.GetBackupShardIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all TSM data in a shard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (System.IO.Stream)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.BackupService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.BackupService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.BackupService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.BackupService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.BackupService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKV(System.String)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKVWithHttpInfo(System.String)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKVWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKVWithIRestResponse(System.String)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKVWithRestRequest(System.String)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKVAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKVAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (System.IO.Stream)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupKVAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of metadata stored in the server&#39;s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn&#39;t include metadata stored in embedded SQL. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (System.IO.Stream)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadata(System.String,System.String)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <returns>MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadataWithHttpInfo(System.String,System.String)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <returns>ApiResponse of MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadataWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadataWithIRestResponse(System.String,System.String)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <returns>ApiResponse of MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadataWithRestRequest(System.String,System.String)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <returns>ApiResponse of MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadataAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of MetadataBackup</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadataAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (MetadataBackup)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupMetadataAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all metadata in the server 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (MetadataBackup)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardId(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <returns>System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardIdWithHttpInfo(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardIdWithIRestResponseAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardIdWithIRestResponse(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardIdWithRestRequest(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <returns>ApiResponse of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardIdAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of System.IO.Stream</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardIdAsyncWithHttpInfo(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (System.IO.Stream)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BackupService.GetBackupShardIdAsyncWithIRestResponse(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Download snapshot of all TSM data in a shard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="since">Earliest time to include in the snapshot. RFC3339 format. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (System.IO.Stream)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IBucketsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsID(System.String,System.String)">
            <summary>
            Delete a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBuckets(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all buckets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <returns>Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all buckets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsID(System.String,System.String)">
            <summary>
            Retrieve a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDMembers(System.String,System.String)">
            <summary>
            List all users with member privileges for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all users with member privileges for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDOwners(System.String,System.String)">
            <summary>
            List all owners of a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetSourcesIDBuckets(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetSourcesIDBucketsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PatchBucketsID(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String)">
            <summary>
            Update a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PatchBucketsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String)">
            <summary>
            Update a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBuckets(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String)">
            <summary>
            Create a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsWithHttpInfo(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String)">
            <summary>
            Create a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.DeleteBucketsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetBucketsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetSourcesIDBucketsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.GetSourcesIDBucketsAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PatchBucketsIDAsync(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PatchBucketsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsAsync(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IBucketsService.PostBucketsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a bucket
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.BucketsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.BucketsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.BucketsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.BucketsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.BucketsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsID(System.String,System.String)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The ID of the bucket to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDMembersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.DeleteBucketsIDOwnersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBuckets(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <returns>Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsWithIRestResponseAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsWithRestRequest(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsAsyncWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all buckets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="name">Only returns buckets with a specific name. (optional)</param>
            <param name="id">Only returns buckets with a specific ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsID(System.String,System.String)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembers(System.String,System.String)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembersWithIRestResponse(System.String,System.String)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembersWithRestRequest(System.String,System.String)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDMembersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwners(System.String,System.String)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwnersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwnersWithIRestResponse(System.String,System.String)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwnersWithRestRequest(System.String,System.String)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetBucketsIDOwnersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBuckets(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBucketsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBucketsWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBucketsWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBucketsWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBucketsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBucketsAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.GetSourcesIDBucketsAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsID(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsIDAsync(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PatchBucketsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PatchBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="patchBucketRequest">Bucket update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBuckets(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsWithHttpInfo(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsWithIRestResponse(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsWithRestRequest(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsAsync(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Bucket</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.PostBucketRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postBucketRequest">Bucket to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Bucket)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDMembersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwnersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwnersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwnersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.BucketsService.PostBucketsIDOwnersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a bucket 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwner)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ICellsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.DeleteDashboardsIDCellsID(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.DeleteDashboardsIDCellsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.GetDashboardsIDCellsIDView(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.GetDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsID(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsIDWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsIDView(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PostDashboardsIDCells(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PostDashboardsIDCellsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PutDashboardsIDCells(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PutDashboardsIDCellsWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.DeleteDashboardsIDCellsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.DeleteDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.GetDashboardsIDCellsIDViewAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.GetDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsIDAsync(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsIDViewAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PatchDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PostDashboardsIDCellsAsync(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PostDashboardsIDCellsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PutDashboardsIDCellsAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ICellsService.PutDashboardsIDCellsAsyncWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.CellsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.CellsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.CellsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.CellsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.CellsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsID(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.DeleteDashboardsIDCellsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDView(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDViewWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDViewWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDViewWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDViewAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.GetDashboardsIDCellsIDViewAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsID(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDAsync(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDView(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDViewWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDViewWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDViewWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDViewAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PatchDashboardsIDCellsIDViewAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCells(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCellsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCellsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCellsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCellsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCellsAsync(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCellsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PostDashboardsIDCellsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCells(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCellsWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCellsWithIRestResponseAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCellsWithIRestResponse(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCellsWithRestRequest(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCellsAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCellsAsyncWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.CellsService.PutDashboardsIDCellsAsyncWithIRestResponse(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Dashboard)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IChecksService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.CreateCheck(InfluxDB.Client.Api.Domain.Check)">
            <summary>
            Add new check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.CreateCheckWithHttpInfo(InfluxDB.Client.Api.Domain.Check)">
            <summary>
            Add new check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksID(System.String,System.String)">
            <summary>
            Delete a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete label from a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete label from a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecks(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all checks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all checks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksID(System.String,System.String)">
            <summary>
            Retrieve a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDLabels(System.String,System.String)">
            <summary>
            List all labels for a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDQuery(System.String,System.String)">
            <summary>
            Retrieve a check query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDQueryWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a check query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PatchChecksID(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PatchChecksIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PostChecksIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PostChecksIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PutChecksID(System.String,InfluxDB.Client.Api.Domain.Check,System.String)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PutChecksIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Check,System.String)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.CreateCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.CreateCheckAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.DeleteChecksIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all checks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all checks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Checks)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDQueryAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.GetChecksIDQueryAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PatchChecksIDAsync(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PatchChecksIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PostChecksIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PostChecksIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PutChecksIDAsync(System.String,InfluxDB.Client.Api.Domain.Check,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IChecksService.PutChecksIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Check,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ChecksService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ChecksService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ChecksService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ChecksService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ChecksService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheck(InfluxDB.Client.Api.Domain.Check)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheckWithHttpInfo(InfluxDB.Client.Api.Domain.Check)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheckWithIRestResponseAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheckWithIRestResponse(InfluxDB.Client.Api.Domain.Check)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheckWithRestRequest(InfluxDB.Client.Api.Domain.Check)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheckAsync(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheckAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.CreateCheckAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.Check,System.Threading.CancellationToken)">
            <summary>
            Add new check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="check">Check to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksID(System.String,System.String)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.DeleteChecksIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecks(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksWithIRestResponseAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksWithIRestResponse(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksWithRestRequest(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Checks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Checks)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksAsyncWithIRestResponse(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all checks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show checks that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Checks)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksID(System.String,System.String)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabels(System.String,System.String)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQuery(System.String,System.String)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQueryWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQueryWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQueryWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQueryWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQueryAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQueryAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.GetChecksIDQueryAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a check query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (FluxResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksID(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksIDAsync(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PatchChecksIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.CheckPatch,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="checkPatch">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PostChecksIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksID(System.String,InfluxDB.Client.Api.Domain.Check,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Check,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.Check,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Check,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.Check,System.String)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksIDAsync(System.String,InfluxDB.Client.Api.Domain.Check,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Check</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Check,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Check)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ChecksService.PutChecksIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Check,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a check 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkID">The check ID.</param>
            <param name="check">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Check)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IConfigService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IConfigService.GetConfig(System.String)">
            <summary>
            Get the run-time configuration of the instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IConfigService.GetConfigWithHttpInfo(System.String)">
            <summary>
            Get the run-time configuration of the instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IConfigService.GetConfigAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the run-time configuration of the instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IConfigService.GetConfigAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the run-time configuration of the instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Config)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ConfigService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ConfigService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ConfigService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ConfigService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ConfigService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfig(System.String)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfigWithHttpInfo(System.String)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfigWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfigWithIRestResponse(System.String)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfigWithRestRequest(System.String)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfigAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Config</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfigAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Config)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ConfigService.GetConfigAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the run-time configuration of the instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Config)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IDashboardsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsID(System.String,System.String)">
            <summary>
            Delete a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDCellsID(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDCellsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboards(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all dashboards
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all dashboards
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsID(System.String,System.String,System.String)">
            <summary>
            Retrieve a Dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve a Dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDCellsIDView(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDMembers(System.String,System.String)">
            <summary>
            List all dashboard members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all dashboard members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDOwners(System.String,System.String)">
            <summary>
            List all dashboard owners
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all dashboard owners
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsID(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest)">
            <summary>
            Update a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest)">
            <summary>
            Update a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsID(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsIDWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsIDView(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboards(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String)">
            <summary>
            Create a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsWithHttpInfo(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String)">
            <summary>
            Create a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDCells(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDCellsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PutDashboardsIDCells(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PutDashboardsIDCellsWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDCellsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.DeleteDashboardsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboards
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboards
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboards)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDCellsIDViewAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard owners
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.GetDashboardsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard owners
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDAsync(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Update a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Update a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsIDAsync(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell
            </summary>
            <remarks>
            Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsIDViewAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PatchDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsAsync(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDCellsAsync(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDCellsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PostDashboardsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a dashboard
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PutDashboardsIDCellsAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDashboardsService.PutDashboardsIDCellsAsyncWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard
            </summary>
            <remarks>
            Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.DashboardsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.DashboardsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.DashboardsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.DashboardsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.DashboardsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsID(System.String,System.String)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsID(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDCellsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to delete.</param>
            <param name="cellID">The ID of the cell to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDMembersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.DeleteDashboardsIDOwnersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboards(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsWithIRestResponseAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsWithRestRequest(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboards</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboards)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsAsyncWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboards 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="owner">A user identifier. Returns only dashboards where this user has the &#x60;owner&#x60; role. (optional)</param>
            <param name="sortBy">The column to sort by. (optional)</param>
            <param name="id">A list of dashboard identifiers. Returns only the listed dashboards. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">The identifier of the organization. (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Dashboards)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsID(System.String,System.String,System.String)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="include">Includes the cell view properties in the response if set to &#x60;properties&#x60; (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDView(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDViewWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDViewWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDViewWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDViewAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDCellsIDViewAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembers(System.String,System.String)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembersWithIRestResponse(System.String,System.String)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembersWithRestRequest(System.String,System.String)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDMembersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwners(System.String,System.String)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwnersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwnersWithIRestResponse(System.String,System.String)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwnersWithRestRequest(System.String,System.String)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.GetDashboardsIDOwnersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all dashboard owners 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsID(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDAsync(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.PatchDashboardRequest,System.Threading.CancellationToken)">
            <summary>
            Update a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="patchDashboardRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsID(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDAsync(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.CellUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the non-positional information related to a cell Updates the non positional information related to a cell. Updates to a single cell&#39;s positional data could cause grid conflicts.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="cellUpdate"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDView(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDViewWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDViewWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDViewWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDViewAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PatchDashboardsIDCellsIDViewAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboards(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsWithHttpInfo(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsWithIRestResponse(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsWithRestRequest(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsAsync(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.CreateDashboardRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createDashboardRequest">Dashboard to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCells(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCellsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCellsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCellsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCellsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCellsAsync(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Cell</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCellsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDCellsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.CreateCell,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a dashboard cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="createCell">Cell that will be added</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Cell)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDMembersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwnersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwnersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwnersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PostDashboardsIDOwnersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a dashboard 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCells(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCellsWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCellsWithIRestResponseAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCellsWithIRestResponse(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCellsWithRestRequest(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCellsAsync(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dashboard</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCellsAsyncWithHttpInfo(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dashboard)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DashboardsService.PutDashboardsIDCellsAsyncWithIRestResponse(System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.Cell},System.String,System.Threading.CancellationToken)">
            <summary>
            Replace cells in a dashboard Replaces all cells in a dashboard. This is used primarily to update the positional information of all cells.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cell"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Dashboard)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IDBRPsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.DeleteDBRPID(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a database retention policy
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.DeleteDBRPIDWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a database retention policy
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPs(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            List database retention policy mappings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <returns>DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPsWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            List database retention policy mappings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <returns>ApiResponse of DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPsID(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPsIDWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PatchDBRPID(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String)">
            <summary>
            Update a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PatchDBRPIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String)">
            <summary>
            Update a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PostDBRP(InfluxDB.Client.Api.Domain.DBRPCreate,System.String)">
            <summary>
            Add a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PostDBRPWithHttpInfo(InfluxDB.Client.Api.Domain.DBRPCreate,System.String)">
            <summary>
            Add a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.DeleteDBRPIDAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a database retention policy
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.DeleteDBRPIDAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a database retention policy
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPsAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List database retention policy mappings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List database retention policy mappings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRPs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPsIDAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.GetDBRPsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRPGet)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PatchDBRPIDAsync(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PatchDBRPIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRPGet)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PostDBRPAsync(InfluxDB.Client.Api.Domain.DBRPCreate,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDBRPsService.PostDBRPAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.DBRPCreate,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a database retention policy mapping
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRP)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.DBRPsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.DBRPsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.DBRPsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.DBRPsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.DBRPsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPID(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPIDWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPIDWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPIDWithIRestResponse(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPIDWithRestRequest(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPIDAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPIDAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.DeleteDBRPIDAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a database retention policy 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPs(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <returns>DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <returns>ApiResponse of DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <returns>ApiResponse of DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsWithRestRequest(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <returns>ApiResponse of DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRPs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRPs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List database retention policy mappings 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID to filter on (optional)</param>
            <param name="org">Specifies the organization name to filter on (optional)</param>
            <param name="id">Specifies the mapping ID to filter on (optional)</param>
            <param name="bucketID">Specifies the bucket ID to filter on (optional)</param>
            <param name="_default">Specifies filtering on default (optional)</param>
            <param name="db">Specifies the database to filter on (optional)</param>
            <param name="rp">Specifies the retention policy to filter on (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (DBRPs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsID(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsIDWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsIDWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsIDWithIRestResponse(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsIDWithRestRequest(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsIDAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRPGet)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.GetDBRPsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping ID</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (DBRPGet)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPID(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <returns>ApiResponse of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPIDAsync(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRPGet</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRPGet)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PatchDBRPIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.DBRPUpdate,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dbrpID">The database retention policy mapping.</param>
            <param name="dBRPUpdate">Database retention policy update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">Specifies the organization ID of the mapping (optional)</param>
            <param name="org">Specifies the organization name of the mapping (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (DBRPGet)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRP(InfluxDB.Client.Api.Domain.DBRPCreate,System.String)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRPWithHttpInfo(InfluxDB.Client.Api.Domain.DBRPCreate,System.String)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRPWithIRestResponseAsync(InfluxDB.Client.Api.Domain.DBRPCreate,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRPWithIRestResponse(InfluxDB.Client.Api.Domain.DBRPCreate,System.String)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRPWithRestRequest(InfluxDB.Client.Api.Domain.DBRPCreate,System.String)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRPAsync(InfluxDB.Client.Api.Domain.DBRPCreate,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of DBRP</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRPAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.DBRPCreate,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (DBRP)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DBRPsService.PostDBRPAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.DBRPCreate,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a database retention policy mapping 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dBRPCreate">The database retention policy mapping to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (DBRP)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IDeleteService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDeleteService.PostDelete(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete data
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDeleteService.PostDeleteWithHttpInfo(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete data
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDeleteService.PostDeleteAsync(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IDeleteService.PostDeleteAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.DeleteService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.DeleteService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.DeleteService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.DeleteService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.DeleteService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDelete(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDeleteWithHttpInfo(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDeleteWithIRestResponseAsync(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDeleteWithIRestResponse(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDeleteWithRestRequest(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDeleteAsync(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDeleteAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.DeleteService.PostDeleteAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.DeletePredicateRequest,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete data 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deletePredicateRequest">Deletes data from an InfluxDB bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">Specifies the organization to delete data from. (optional)</param>
            <param name="bucket">Specifies the bucket to delete data from. (optional)</param>
            <param name="orgID">Specifies the organization ID of the resource. (optional)</param>
            <param name="bucketID">Specifies the bucket ID to delete data from. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IHealthService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IHealthService.GetHealth(System.String)">
            <summary>
            Get the health of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IHealthService.GetHealthWithHttpInfo(System.String)">
            <summary>
            Get the health of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IHealthService.GetHealthAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IHealthService.GetHealthAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (HealthCheck)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.HealthService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.HealthService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.HealthService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.HealthService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.HealthService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealth(System.String)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealthWithHttpInfo(System.String)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealthWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealthWithIRestResponse(System.String)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealthWithRestRequest(System.String)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealthAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealthAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (HealthCheck)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.HealthService.GetHealthAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (HealthCheck)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IInvokableScriptsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.DeleteScriptsID(System.String)">
            <summary>
            Delete a script
            </summary>
            <remarks>
            Deletes a script and all associated records.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.DeleteScriptsIDWithHttpInfo(System.String)">
            <summary>
            Delete a script
            </summary>
            <remarks>
            Deletes a script and all associated records.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScripts(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List scripts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <returns>Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScriptsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List scripts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <returns>ApiResponse of Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScriptsID(System.String)">
            <summary>
            Retrieve a script
            </summary>
            <remarks>
            Uses script ID to retrieve details of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <returns>Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScriptsIDWithHttpInfo(System.String)">
            <summary>
            Retrieve a script
            </summary>
            <remarks>
            Uses script ID to retrieve details of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PatchScriptsID(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest)">
            <summary>
            Update a script
            </summary>
            <remarks>
            Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <returns>Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PatchScriptsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest)">
            <summary>
            Update a script
            </summary>
            <remarks>
            Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScripts(InfluxDB.Client.Api.Domain.ScriptCreateRequest)">
            <summary>
            Create a script
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <returns>Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScriptsWithHttpInfo(InfluxDB.Client.Api.Domain.ScriptCreateRequest)">
            <summary>
            Create a script
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScriptsIDInvoke(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams)">
            <summary>
            Invoke a script
            </summary>
            <remarks>
            Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScriptsIDInvokeWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams)">
            <summary>
            Invoke a script
            </summary>
            <remarks>
            Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.DeleteScriptsIDAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script
            </summary>
            <remarks>
            Deletes a script and all associated records.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.DeleteScriptsIDAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script
            </summary>
            <remarks>
            Deletes a script and all associated records.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScriptsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScriptsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Scripts)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScriptsIDAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a script
            </summary>
            <remarks>
            Uses script ID to retrieve details of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.GetScriptsIDAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a script
            </summary>
            <remarks>
            Uses script ID to retrieve details of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PatchScriptsIDAsync(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script
            </summary>
            <remarks>
            Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PatchScriptsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script
            </summary>
            <remarks>
            Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScriptsAsync(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScriptsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScriptsIDInvokeAsync(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams,System.Threading.CancellationToken)">
            <summary>
            Invoke a script
            </summary>
            <remarks>
            Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IInvokableScriptsService.PostScriptsIDInvokeAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams,System.Threading.CancellationToken)">
            <summary>
            Invoke a script
            </summary>
            <remarks>
            Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.InvokableScriptsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.InvokableScriptsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.InvokableScriptsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.InvokableScriptsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.InvokableScriptsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsID(System.String)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsIDWithHttpInfo(System.String)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsIDWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsIDWithIRestResponse(System.String)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsIDWithRestRequest(System.String)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsIDAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsIDAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.DeleteScriptsIDAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script Deletes a script and all associated records.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The ID of the script to delete.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScripts(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <returns>Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <returns>ApiResponse of Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsWithIRestResponseAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsWithIRestResponse(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <returns>ApiResponse of Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsWithRestRequest(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <returns>ApiResponse of Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Scripts</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Scripts)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsAsyncWithIRestResponse(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of scripts to return. (optional)</param>
            <param name="offset">The offset for pagination. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Scripts)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsID(System.String)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <returns>Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsIDWithHttpInfo(System.String)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsIDWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsIDWithIRestResponse(System.String)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsIDWithRestRequest(System.String)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsIDAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsIDAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.GetScriptsIDAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a script Uses script ID to retrieve details of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsID(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <returns>Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsIDAsync(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PatchScriptsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script Updates properties (&#x60;name&#x60;, &#x60;description&#x60;, and &#x60;script&#x60;) of an invokable script.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID">The script ID.</param>
            <param name="scriptUpdateRequest">Script update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScripts(InfluxDB.Client.Api.Domain.ScriptCreateRequest)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <returns>Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsWithHttpInfo(InfluxDB.Client.Api.Domain.ScriptCreateRequest)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsWithIRestResponse(InfluxDB.Client.Api.Domain.ScriptCreateRequest)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsWithRestRequest(InfluxDB.Client.Api.Domain.ScriptCreateRequest)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <returns>ApiResponse of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsAsync(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Script</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptCreateRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Script)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvoke(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvokeWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvokeWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams,System.Threading.CancellationToken)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvokeWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvokeWithRestRequest(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvokeAsync(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams,System.Threading.CancellationToken)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvokeAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams,System.Threading.CancellationToken)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.InvokableScriptsService.PostScriptsIDInvokeAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ScriptInvocationParams,System.Threading.CancellationToken)">
            <summary>
            Invoke a script Invokes a script and substitutes &#x60;params&#x60; keys referenced in the script with &#x60;params&#x60; key-values sent in the request body.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scriptID"></param>
            <param name="scriptInvocationParams"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (string)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ILabelsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.DeleteLabelsID(System.String,System.String)">
            <summary>
            Delete a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.DeleteLabelsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabels(System.String,System.String)">
            <summary>
            List all labels
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabelsID(System.String,System.String)">
            <summary>
            Retrieve a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabelsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PatchLabelsID(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String)">
            <summary>
            Update a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PatchLabelsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String)">
            <summary>
            Update a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PostLabels(InfluxDB.Client.Api.Domain.LabelCreateRequest)">
            <summary>
            Create a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PostLabelsWithHttpInfo(InfluxDB.Client.Api.Domain.LabelCreateRequest)">
            <summary>
            Create a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.DeleteLabelsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.DeleteLabelsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabelsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.GetLabelsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PatchLabelsIDAsync(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PatchLabelsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PostLabelsAsync(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILabelsService.PostLabelsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.LabelsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.LabelsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.LabelsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.LabelsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.LabelsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsID(System.String,System.String)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.DeleteLabelsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabels(System.String,System.String)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsID(System.String,System.String)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.GetLabelsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsID(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsIDAsync(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PatchLabelsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelID">The ID of the label to update.</param>
            <param name="labelUpdate">Label update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabels(InfluxDB.Client.Api.Domain.LabelCreateRequest)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabelsWithHttpInfo(InfluxDB.Client.Api.Domain.LabelCreateRequest)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabelsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabelsWithIRestResponse(InfluxDB.Client.Api.Domain.LabelCreateRequest)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabelsWithRestRequest(InfluxDB.Client.Api.Domain.LabelCreateRequest)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabelsAsync(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabelsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LabelsService.PostLabelsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="labelCreateRequest">Label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.DeleteLegacyAuthorizationsID(System.String,System.String)">
            <summary>
            Delete a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.DeleteLegacyAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizations(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all legacy authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <returns>Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizationsWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all legacy authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizationsID(System.String,System.String)">
            <summary>
            Retrieve a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PatchLegacyAuthorizationsID(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update a legacy authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PatchLegacyAuthorizationsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update a legacy authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizations(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String)">
            <summary>
            Create a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizationsWithHttpInfo(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String)">
            <summary>
            Create a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizationsIDPassword(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String)">
            <summary>
            Set a legacy authorization password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String)">
            <summary>
            Set a legacy authorization password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.DeleteLegacyAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.DeleteLegacyAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizationsAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all legacy authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizationsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all legacy authorizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.GetLegacyAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PatchLegacyAuthorizationsIDAsync(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a legacy authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PatchLegacyAuthorizationsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a legacy authorization to be active or inactive
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizationsAsync(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizationsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a legacy authorization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordAsync(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a legacy authorization password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ILegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a legacy authorization password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.LegacyAuthorizationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.LegacyAuthorizationsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.LegacyAuthorizationsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsID(System.String,System.String)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.DeleteLegacyAuthorizationsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizations(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <returns>Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsWithRestRequest(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <returns>ApiResponse of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all legacy authorizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="userID">Only show legacy authorizations that belong to a user ID. (optional)</param>
            <param name="user">Only show legacy authorizations that belong to a user name. (optional)</param>
            <param name="orgID">Only show legacy authorizations that belong to an organization ID. (optional)</param>
            <param name="org">Only show legacy authorizations that belong to a organization name. (optional)</param>
            <param name="token">Only show legacy authorizations with a specified token (auth name). (optional)</param>
            <param name="authID">Only show legacy authorizations with a specified auth ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsID(System.String,System.String)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.GetLegacyAuthorizationsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsID(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsIDAsync(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PatchLegacyAuthorizationsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AuthorizationUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a legacy authorization to be active or inactive 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="authorizationUpdateRequest">Legacy authorization to update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizations(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsWithHttpInfo(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsWithIRestResponse(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsWithRestRequest(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsAsync(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Authorization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.LegacyAuthorizationPostRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a legacy authorization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="legacyAuthorizationPostRequest">Legacy authorization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Authorization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPassword(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordWithRestRequest(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordAsync(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.LegacyAuthorizationsService.PostLegacyAuthorizationsIDPasswordAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Set a legacy authorization password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authID">The ID of the legacy authorization to update.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IMetricsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IMetricsService.GetMetrics(System.String)">
            <summary>
            Get metrics of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IMetricsService.GetMetricsWithHttpInfo(System.String)">
            <summary>
            Get metrics of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IMetricsService.GetMetricsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get metrics of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IMetricsService.GetMetricsAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get metrics of an instance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.MetricsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.MetricsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.MetricsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.MetricsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.MetricsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetrics(System.String)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetricsWithHttpInfo(System.String)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetricsWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetricsWithIRestResponse(System.String)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetricsWithRestRequest(System.String)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetricsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetricsAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.MetricsService.GetMetricsAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Get metrics of an instance 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (string)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.INotificationEndpointsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.CreateNotificationEndpoint(InfluxDB.Client.Api.Domain.NotificationEndpoint)">
            <summary>
            Add a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.CreateNotificationEndpointWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationEndpoint)">
            <summary>
            Add a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsID(System.String,System.String)">
            <summary>
            Delete a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpoints(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all notification endpoints
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all notification endpoints
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsID(System.String,System.String)">
            <summary>
            Retrieve a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PatchNotificationEndpointsID(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PatchNotificationEndpointsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PostNotificationEndpointIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PostNotificationEndpointIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PutNotificationEndpointsID(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PutNotificationEndpointsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.CreateNotificationEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.CreateNotificationEndpointAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all notification endpoints
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all notification endpoints
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoints)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.GetNotificationEndpointsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PatchNotificationEndpointsIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PatchNotificationEndpointsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PostNotificationEndpointIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PostNotificationEndpointIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PutNotificationEndpointsIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationEndpointsService.PutNotificationEndpointsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.NotificationEndpointsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.NotificationEndpointsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.NotificationEndpointsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.NotificationEndpointsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.NotificationEndpointsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpoint(InfluxDB.Client.Api.Domain.NotificationEndpoint)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpointWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationEndpoint)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpointWithIRestResponseAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpointWithIRestResponse(InfluxDB.Client.Api.Domain.NotificationEndpoint)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpointWithRestRequest(InfluxDB.Client.Api.Domain.NotificationEndpoint)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpointAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.CreateNotificationEndpointAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationEndpoint">Notification endpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsID(System.String,System.String)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.DeleteNotificationEndpointsIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpoints(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsWithIRestResponseAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsWithIRestResponse(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsWithRestRequest(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <returns>ApiResponse of NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoints</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoints)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsAsyncWithIRestResponse(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all notification endpoints 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification endpoints that belong to specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationEndpoints)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsID(System.String,System.String)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.GetNotificationEndpointsIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsID(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PatchNotificationEndpointsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpointUpdate">Check update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PostNotificationEndpointIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsID(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationEndpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationEndpoint)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationEndpointsService.PutNotificationEndpointsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="endpointID">The notification endpoint ID.</param>
            <param name="notificationEndpoint">A new notification endpoint to replace the existing endpoint with</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationEndpoint)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.INotificationRulesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.CreateNotificationRule(InfluxDB.Client.Api.Domain.NotificationRule)">
            <summary>
            Add a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.CreateNotificationRuleWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationRule)">
            <summary>
            Add a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesID(System.String,System.String)">
            <summary>
            Delete a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete label from a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete label from a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRules(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List all notification rules
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <returns>NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List all notification rules
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <returns>ApiResponse of NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesID(System.String,System.String)">
            <summary>
            Retrieve a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesIDLabels(System.String,System.String)">
            <summary>
            List all labels for a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PatchNotificationRulesID(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PatchNotificationRulesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PostNotificationRuleIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PostNotificationRuleIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PutNotificationRulesID(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PutNotificationRulesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.CreateNotificationRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.CreateNotificationRuleAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.DeleteNotificationRulesIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all notification rules
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all notification rules
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRules)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.GetNotificationRulesIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PatchNotificationRulesIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PatchNotificationRulesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PostNotificationRuleIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PostNotificationRuleIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PutNotificationRulesIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.INotificationRulesService.PutNotificationRulesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.NotificationRulesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.NotificationRulesService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.NotificationRulesService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.NotificationRulesService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.NotificationRulesService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRule(InfluxDB.Client.Api.Domain.NotificationRule)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRuleWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationRule)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRuleWithIRestResponseAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRuleWithIRestResponse(InfluxDB.Client.Api.Domain.NotificationRule)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRuleWithRestRequest(InfluxDB.Client.Api.Domain.NotificationRule)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRuleAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.CreateNotificationRuleAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="notificationRule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesID(System.String,System.String)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.DeleteNotificationRulesIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelID">The ID of the label to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRules(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <returns>NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <returns>ApiResponse of NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesWithIRestResponseAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesWithIRestResponse(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <returns>ApiResponse of NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesWithRestRequest(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <returns>ApiResponse of NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRules</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRules)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesAsyncWithIRestResponse(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all notification rules 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">Only show notification rules that belong to a specific organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="checkID">Only show notifications that belong to the specific check ID. (optional)</param>
            <param name="tag">Only return notification rules that \&quot;would match\&quot; statuses which contain the tag key value pairs provided. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationRules)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesID(System.String,System.String)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabels(System.String,System.String)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.GetNotificationRulesIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesID(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PatchNotificationRulesIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRuleUpdate">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PostNotificationRuleIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesID(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesIDAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of NotificationRule</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (NotificationRule)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.NotificationRulesService.PutNotificationRulesIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.NotificationRule,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="notificationRule">Notification rule update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (NotificationRule)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IOrganizationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsID(System.String,System.String)">
            <summary>
            Delete an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgs(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            List all organizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <returns>Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            List all organizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <returns>ApiResponse of Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsID(System.String,System.String)">
            <summary>
            Retrieve an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDMembers(System.String,System.String)">
            <summary>
            List all members of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all members of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDOwners(System.String,System.String)">
            <summary>
            List all owners of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PatchOrgsID(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String)">
            <summary>
            Update an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PatchOrgsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String)">
            <summary>
            Update an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgs(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String)">
            <summary>
            Create an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsWithHttpInfo(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String)">
            <summary>
            Create an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.DeleteOrgsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.GetOrgsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PatchOrgsIDAsync(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PatchOrgsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsAsync(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IOrganizationsService.PostOrgsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.OrganizationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.OrganizationsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.OrganizationsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.OrganizationsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.OrganizationsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsID(System.String,System.String)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDMembersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.DeleteOrgsIDOwnersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgs(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <returns>Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <returns>ApiResponse of Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsWithIRestResponseAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <returns>ApiResponse of Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsWithRestRequest(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <returns>ApiResponse of Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsAsyncWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Organizations)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsID(System.String,System.String)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembers(System.String,System.String)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembersWithIRestResponse(System.String,System.String)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembersWithRestRequest(System.String,System.String)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDMembersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwners(System.String,System.String)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwnersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwnersWithIRestResponse(System.String,System.String)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwnersWithRestRequest(System.String,System.String)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.GetOrgsIDOwnersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsID(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsIDAsync(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PatchOrgsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PatchOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The ID of the organization to get.</param>
            <param name="patchOrganizationRequest">Organization update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgs(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsWithHttpInfo(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsWithIRestResponse(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsWithRestRequest(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsAsync(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Organization</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.PostOrganizationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postOrganizationRequest">Organization to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Organization)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDMembersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwnersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwnersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwnersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.OrganizationsService.PostOrgsIDOwnersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwner)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IPingService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.GetPing">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.GetPingWithHttpInfo">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.HeadPing">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.HeadPingWithHttpInfo">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.GetPingAsync(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.GetPingAsyncWithHttpInfo(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.HeadPingAsync(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IPingService.HeadPingAsyncWithHttpInfo(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.PingService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.PingService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.PingService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.PingService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.PingService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPing">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPingWithHttpInfo">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPingWithIRestResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPingWithIRestResponse">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPingWithRestRequest">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPingAsync(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPingAsyncWithHttpInfo(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.GetPingAsyncWithIRestResponse(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPing">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPingWithHttpInfo">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPingWithIRestResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPingWithIRestResponse">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPingWithRestRequest">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPingAsync(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPingAsyncWithHttpInfo(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.PingService.HeadPingAsyncWithIRestResponse(System.Threading.CancellationToken)">
            <summary>
            Checks the status of InfluxDB instance and version of InfluxDB. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IQueryService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestions(System.String)">
            <summary>
            Retrieve query suggestions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestionsWithHttpInfo(System.String)">
            <summary>
            Retrieve query suggestions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestionsName(System.String,System.String)">
            <summary>
            Retrieve query suggestions for a branching suggestion
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestionsNameWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve query suggestions for a branching suggestion
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQuery(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Query data
            </summary>
            <remarks>
            Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryWithHttpInfo(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Query data
            </summary>
            <remarks>
            Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAnalyze(System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Analyze a Flux query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <returns>AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAnalyzeWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Analyze a Flux query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <returns>ApiResponse of AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAst(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query
            </summary>
            <remarks>
            Analyzes flux query and generates a query specification.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <returns>ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAstWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query
            </summary>
            <remarks>
            Analyzes flux query and generates a query specification.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <returns>ApiResponse of ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestionsAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxSuggestions)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestionsNameAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions for a branching suggestion
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.GetQuerySuggestionsNameAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions for a branching suggestion
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxSuggestion)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAsync(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Query data
            </summary>
            <remarks>
            Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Query data
            </summary>
            <remarks>
            Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAnalyzeAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Analyze a Flux query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAnalyzeAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Analyze a Flux query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (AnalyzeQueryResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAstAsync(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query
            </summary>
            <remarks>
            Analyzes flux query and generates a query specification.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IQueryService.PostQueryAstAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query
            </summary>
            <remarks>
            Analyzes flux query and generates a query specification.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ASTResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.QueryService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.QueryService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.QueryService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.QueryService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.QueryService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestions(System.String)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsWithHttpInfo(System.String)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsWithIRestResponse(System.String)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsWithRestRequest(System.String)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxSuggestions</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxSuggestions)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (FluxSuggestions)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsName(System.String,System.String)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsNameWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsNameWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsNameWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsNameWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsNameAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxSuggestion</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsNameAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxSuggestion)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.GetQuerySuggestionsNameAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve query suggestions for a branching suggestion 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="name">The name of the branching suggestion.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (FluxSuggestion)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQuery(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryWithHttpInfo(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryWithIRestResponse(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryWithRestRequest(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Net.Http.HttpCompletionOption)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <param name="httpCompletionOption">Specify http completion to enable fully stream queries for async.</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAsync(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Query data Retrieves data from InfluxDB buckets.  To query data, you need the following: - **organization** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - **Flux query** – _See [Flux](https://docs.influxdata.com/flux/v0.x/)._  For more information and examples, see [Query with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/query-data/execute-queries/influx-api/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="acceptEncoding">Indicates the content encoding (usually a compression algorithm) that the client can understand. (optional, default to identity)</param>
            <param name="contentType"> (optional)</param>
            <param name="org">Specifies the name of the organization executing the query. Takes either the ID or Name. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="orgID">Specifies the ID of the organization executing the query. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="query">Flux query or specification to execute (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyze(System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <returns>AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyzeWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <returns>ApiResponse of AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyzeWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyzeWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <returns>ApiResponse of AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyzeWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.Query)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <returns>ApiResponse of AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyzeAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of AnalyzeQueryResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyzeAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (AnalyzeQueryResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAnalyzeAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.Query,System.Threading.CancellationToken)">
            <summary>
            Analyze a Flux query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="query">Flux query to analyze (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (AnalyzeQueryResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAst(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <returns>ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAstWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <returns>ApiResponse of ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAstWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAstWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <returns>ApiResponse of ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAstWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <returns>ApiResponse of ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAstAsync(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ASTResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAstAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ASTResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.QueryService.PostQueryAstAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.LanguageRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an Abstract Syntax Tree (AST) from a query Analyzes flux query and generates a query specification.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional)</param>
            <param name="languageRequest">Analyzed Flux query to generate abstract syntax tree. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ASTResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IReadyService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReadyService.GetReady(System.String)">
            <summary>
            Get the readiness of an instance at startup
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReadyService.GetReadyWithHttpInfo(System.String)">
            <summary>
            Get the readiness of an instance at startup
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReadyService.GetReadyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the readiness of an instance at startup
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReadyService.GetReadyAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the readiness of an instance at startup
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Ready)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ReadyService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ReadyService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ReadyService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ReadyService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ReadyService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReady(System.String)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReadyWithHttpInfo(System.String)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReadyWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReadyWithIRestResponse(System.String)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReadyWithRestRequest(System.String)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReadyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Ready</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReadyAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Ready)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReadyService.GetReadyAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the readiness of an instance at startup 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Ready)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IRemoteConnectionsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.DeleteRemoteConnectionByID(System.String,System.String)">
            <summary>
            Delete a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.DeleteRemoteConnectionByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnectionByID(System.String,System.String)">
            <summary>
            Retrieve a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnectionByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnections(System.String,System.String,System.String,System.String)">
            <summary>
            List all remote connections
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <returns>RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnectionsWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            List all remote connections
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <returns>ApiResponse of RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PatchRemoteConnectionByID(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String)">
            <summary>
            Update a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PatchRemoteConnectionByIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String)">
            <summary>
            Update a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PostRemoteConnection(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest)">
            <summary>
            Register a new remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <returns>RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PostRemoteConnectionWithHttpInfo(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest)">
            <summary>
            Register a new remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.DeleteRemoteConnectionByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.DeleteRemoteConnectionByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnectionByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnectionByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnection)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnectionsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all remote connections
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.GetRemoteConnectionsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all remote connections
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnections)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PatchRemoteConnectionByIDAsync(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PatchRemoteConnectionByIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnection)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PostRemoteConnectionAsync(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest,System.Threading.CancellationToken)">
            <summary>
            Register a new remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRemoteConnectionsService.PostRemoteConnectionAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest,System.Threading.CancellationToken)">
            <summary>
            Register a new remote connection
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnection)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.RemoteConnectionsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RemoteConnectionsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RemoteConnectionsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RemoteConnectionsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RemoteConnectionsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByID(System.String,System.String)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.DeleteRemoteConnectionByIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByID(System.String,System.String)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnection)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionByIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (RemoteConnection)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnections(System.String,System.String,System.String,System.String)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <returns>RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionsWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <returns>ApiResponse of RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionsWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionsWithIRestResponse(System.String,System.String,System.String,System.String)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <returns>ApiResponse of RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionsWithRestRequest(System.String,System.String,System.String,System.String)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <returns>ApiResponse of RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnections</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnections)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.GetRemoteConnectionsAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all remote connections 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteURL"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (RemoteConnections)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByID(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByIDAsync(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnection)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PatchRemoteConnectionByIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.RemoteConnectionUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteID"></param>
            <param name="remoteConnectionUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (RemoteConnection)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnection(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <returns>RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnectionWithHttpInfo(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnectionWithIRestResponseAsync(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest,System.Threading.CancellationToken)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnectionWithIRestResponse(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnectionWithRestRequest(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <returns>ApiResponse of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnectionAsync(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest,System.Threading.CancellationToken)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RemoteConnection</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnectionAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest,System.Threading.CancellationToken)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RemoteConnection)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RemoteConnectionsService.PostRemoteConnectionAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.RemoteConnectionCreationRequest,System.Threading.CancellationToken)">
            <summary>
            Register a new remote connection 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="remoteConnectionCreationRequest"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (RemoteConnection)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IReplicationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.DeleteReplicationByID(System.String,System.String)">
            <summary>
            Delete a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.DeleteReplicationByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplicationByID(System.String,System.String)">
            <summary>
            Retrieve a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplicationByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplications(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all replications
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <returns>Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplicationsWithHttpInfo(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all replications
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <returns>ApiResponse of Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PatchReplicationByID(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <returns>Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PatchReplicationByIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostReplication(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Register a new replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <returns>Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostReplicationWithHttpInfo(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Register a new replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostValidateReplicationByID(System.String,System.String)">
            <summary>
            Validate a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostValidateReplicationByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Validate a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.DeleteReplicationByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.DeleteReplicationByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplicationByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplicationByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplicationsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all replications
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.GetReplicationsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all replications
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replications)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PatchReplicationByIDAsync(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Update a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PatchReplicationByIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Update a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostReplicationAsync(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Register a new replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostReplicationAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Register a new replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostValidateReplicationByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Validate a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IReplicationsService.PostValidateReplicationByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Validate a replication
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ReplicationsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ReplicationsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ReplicationsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ReplicationsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ReplicationsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByID(System.String,System.String)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.DeleteReplicationByIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByID(System.String,System.String)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationByIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplications(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <returns>Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationsWithHttpInfo(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <returns>ApiResponse of Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationsWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationsWithIRestResponse(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <returns>ApiResponse of Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationsWithRestRequest(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <returns>ApiResponse of Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replications</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationsAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replications)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.GetReplicationsAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all replications 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name"> (optional)</param>
            <param name="remoteID"> (optional)</param>
            <param name="localBucketID"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Replications)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByID(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <returns>Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByIDAsync(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PatchReplicationByIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ReplicationUpdateRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Update a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="replicationUpdateRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the updated information, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplication(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <returns>Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplicationWithHttpInfo(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplicationWithIRestResponseAsync(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplicationWithIRestResponse(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplicationWithRestRequest(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <returns>ApiResponse of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplicationAsync(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Replication</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplicationAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostReplicationAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.ReplicationCreationRequest,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Register a new replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationCreationRequest"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="validate">If true, validate the replication, but don&#39;t save it. (optional, default to false)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Replication)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByID(System.String,System.String)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByIDWithHttpInfo(System.String,System.String)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByIDWithIRestResponse(System.String,System.String)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByIDWithRestRequest(System.String,System.String)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ReplicationsService.PostValidateReplicationByIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Validate a replication 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="replicationID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IResourcesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IResourcesService.GetResources(System.String)">
            <summary>
            List all known resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IResourcesService.GetResourcesWithHttpInfo(System.String)">
            <summary>
            List all known resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IResourcesService.GetResourcesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all known resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IResourcesService.GetResourcesAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            List all known resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (List&lt;string&gt;)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ResourcesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ResourcesService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ResourcesService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ResourcesService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ResourcesService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResources(System.String)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResourcesWithHttpInfo(System.String)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResourcesWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResourcesWithIRestResponse(System.String)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResourcesWithRestRequest(System.String)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResourcesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of List&lt;string&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResourcesAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (List&lt;string&gt;)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ResourcesService.GetResourcesAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            List all known resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (List&lt;string&gt;)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IRestoreService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketID(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketIDWithHttpInfo(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketMetadata(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketMetadataWithHttpInfo(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreKV(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreKVWithHttpInfo(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreSQL(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreSQLWithHttpInfo(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreShardId(System.String,System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Restore a TSM snapshot into a shard.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreShardIdWithHttpInfo(System.String,System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Restore a TSM snapshot into a shard.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketIDAsync(System.String,System.Byte[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketIDAsyncWithHttpInfo(System.String,System.Byte[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (byte[])</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketMetadataAsync(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreBucketMetadataAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RestoredBucketMappings)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreKVAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreKVAsyncWithHttpInfo(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (PostRestoreKVResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreSQLAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreSQLAsyncWithHttpInfo(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreShardIdAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restore a TSM snapshot into a shard.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRestoreService.PostRestoreShardIdAsyncWithHttpInfo(System.String,System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restore a TSM snapshot into a shard.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.RestoreService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RestoreService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RestoreService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RestoreService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RestoreService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketID(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketIDWithHttpInfo(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketIDWithIRestResponseAsync(System.String,System.Byte[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketIDWithIRestResponse(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketIDWithRestRequest(System.String,System.Byte[],System.String,System.String)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketIDAsync(System.String,System.Byte[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of byte[]</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketIDAsyncWithHttpInfo(System.String,System.Byte[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (byte[])</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketIDAsyncWithIRestResponse(System.String,System.Byte[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite storage metadata for a bucket with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketID">The bucket ID.</param>
            <param name="body">Database info serialized as protobuf.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (byte[])</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadata(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadataWithHttpInfo(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadataWithIRestResponseAsync(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadataWithIRestResponse(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadataWithRestRequest(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadataAsync(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestoredBucketMappings</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadataAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (RestoredBucketMappings)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreBucketMetadataAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.BucketMetadataManifest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new bucket pre-seeded with shard info from a backup. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="bucketMetadataManifest">Metadata manifest for a bucket.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (RestoredBucketMappings)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKV(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKVWithHttpInfo(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKVWithIRestResponseAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKVWithIRestResponse(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKVWithRestRequest(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKVAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of PostRestoreKVResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKVAsyncWithHttpInfo(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (PostRestoreKVResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreKVAsyncWithIRestResponse(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded KV store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full KV snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (PostRestoreKVResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQL(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQLWithHttpInfo(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQLWithIRestResponseAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQLWithIRestResponse(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQLWithRestRequest(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQLAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQLAsyncWithHttpInfo(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreSQLAsyncWithIRestResponse(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Overwrite the embedded SQL store on the server with a backed-up snapshot. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body">Full SQL snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardId(System.String,System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardIdWithHttpInfo(System.String,System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardIdWithIRestResponseAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardIdWithIRestResponse(System.String,System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardIdWithRestRequest(System.String,System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardIdAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardIdAsyncWithHttpInfo(System.String,System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RestoreService.PostRestoreShardIdAsyncWithIRestResponse(System.String,System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restore a TSM snapshot into a shard. 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="shardID">The shard ID.</param>
            <param name="body">TSM snapshot.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType"> (optional, default to application/octet-stream)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IRoutesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRoutesService.GetRoutes(System.String)">
            <summary>
            List all top level routes
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRoutesService.GetRoutesWithHttpInfo(System.String)">
            <summary>
            List all top level routes
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRoutesService.GetRoutesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all top level routes
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRoutesService.GetRoutesAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            List all top level routes
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Routes)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.RoutesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RoutesService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RoutesService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RoutesService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RoutesService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutes(System.String)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutesWithHttpInfo(System.String)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutesWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutesWithIRestResponse(System.String)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutesWithRestRequest(System.String)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Routes</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutesAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Routes)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RoutesService.GetRoutesAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            List all top level routes 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Routes)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IRulesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRulesService.GetNotificationRulesIDQuery(System.String,System.String)">
            <summary>
            Retrieve a notification rule query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRulesService.GetNotificationRulesIDQueryWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a notification rule query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRulesService.GetNotificationRulesIDQueryAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IRulesService.GetNotificationRulesIDQueryAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule query
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.RulesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RulesService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.RulesService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RulesService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.RulesService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQuery(System.String,System.String)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQueryWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQueryWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQueryWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQueryWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQueryAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of FluxResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQueryAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (FluxResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.RulesService.GetNotificationRulesIDQueryAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a notification rule query 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="ruleID">The notification rule ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (FluxResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IScraperTargetsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersID(System.String,System.String)">
            <summary>
            Delete a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapers(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all scraper targets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <returns>ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all scraper targets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <returns>ApiResponse of ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersID(System.String,System.String)">
            <summary>
            Retrieve a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDLabels(System.String,System.String)">
            <summary>
            List all labels for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDMembers(System.String,System.String)">
            <summary>
            List all users with member privileges for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all users with member privileges for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDOwners(System.String,System.String)">
            <summary>
            List all owners of a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PatchScrapersID(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Update a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PatchScrapersIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Update a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapers(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Create a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersWithHttpInfo(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Create a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.DeleteScrapersIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all scraper targets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersAsyncWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all scraper targets
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponses)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.GetScrapersIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PatchScrapersIDAsync(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PatchScrapersIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersAsync(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IScraperTargetsService.PostScrapersIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a scraper target
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ScraperTargetsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ScraperTargetsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ScraperTargetsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ScraperTargetsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ScraperTargetsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersID(System.String,System.String)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDMembersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of member to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.DeleteScrapersIDOwnersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of owner to remove.</param>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapers(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <returns>ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <returns>ApiResponse of ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersWithIRestResponseAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersWithIRestResponse(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <returns>ApiResponse of ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersWithRestRequest(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <returns>ApiResponse of ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponses</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersAsyncWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponses)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersAsyncWithIRestResponse(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all scraper targets 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Specifies the name of the scraper target. (optional)</param>
            <param name="id">List of scraper target IDs to return. If both &#x60;id&#x60; and &#x60;owner&#x60; are specified, only &#x60;id&#x60; is used. (optional)</param>
            <param name="orgID">Specifies the organization ID of the scraper target. (optional)</param>
            <param name="org">Specifies the organization name of the scraper target. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ScraperTargetResponses)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersID(System.String,System.String)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabels(System.String,System.String)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembers(System.String,System.String)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembersWithIRestResponse(System.String,System.String)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembersWithRestRequest(System.String,System.String)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDMembersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwners(System.String,System.String)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwnersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwnersWithIRestResponse(System.String,System.String)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwnersWithRestRequest(System.String,System.String)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.GetScrapersIDOwnersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersID(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersIDAsync(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PatchScrapersIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The identifier of the scraper target.</param>
            <param name="scraperTargetRequest">Scraper target update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapers(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersWithHttpInfo(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersWithIRestResponseAsync(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersWithIRestResponse(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersWithRestRequest(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersAsync(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ScraperTargetResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetRequest">Scraper target to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ScraperTargetResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDMembersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwnersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwnersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwnersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ScraperTargetsService.PostScrapersIDOwnersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a scraper target 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="scraperTargetID">The scraper target ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwner)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ISecretsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.DeleteOrgsIDSecretsID(System.String,System.String,System.String)">
            <summary>
            Delete a secret from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.DeleteOrgsIDSecretsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a secret from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.GetOrgsIDSecrets(System.String,System.String)">
            <summary>
            List all secret keys for an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.GetOrgsIDSecretsWithHttpInfo(System.String,System.String)">
            <summary>
            List all secret keys for an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PatchOrgsIDSecrets(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Update secrets in an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PatchOrgsIDSecretsWithHttpInfo(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Update secrets in an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PostOrgsIDSecrets(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String)">
            <summary>
            Delete secrets from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PostOrgsIDSecretsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String)">
            <summary>
            Delete secrets from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.DeleteOrgsIDSecretsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a secret from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.DeleteOrgsIDSecretsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a secret from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.GetOrgsIDSecretsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all secret keys for an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.GetOrgsIDSecretsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all secret keys for an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (SecretKeysResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PatchOrgsIDSecretsAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Update secrets in an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PatchOrgsIDSecretsAsyncWithHttpInfo(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Update secrets in an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PostOrgsIDSecretsAsync(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete secrets from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISecretsService.PostOrgsIDSecretsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete secrets from an organization
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.SecretsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SecretsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SecretsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SecretsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SecretsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsID(System.String,System.String,System.String)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.DeleteOrgsIDSecretsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a secret from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretID">The secret ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecrets(System.String,System.String)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecretsWithHttpInfo(System.String,System.String)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecretsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecretsWithIRestResponse(System.String,System.String)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecretsWithRestRequest(System.String,System.String)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecretsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of SecretKeysResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecretsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (SecretKeysResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.GetOrgsIDSecretsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all secret keys for an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (SecretKeysResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecrets(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecretsWithHttpInfo(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecretsWithIRestResponseAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecretsWithIRestResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecretsWithRestRequest(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecretsAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecretsAsyncWithHttpInfo(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PatchOrgsIDSecretsAsyncWithIRestResponse(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Update secrets in an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="requestBody">Secret key value pairs to update/add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecrets(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecretsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecretsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecretsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecretsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecretsAsync(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecretsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SecretsService.PostOrgsIDSecretsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete secrets from an organization 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID.</param>
            <param name="secretKeys">Secret key to delete</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ISetupService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.GetSetup(System.String)">
            <summary>
            Check if database has default user, org, bucket
            </summary>
            <remarks>
            Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.GetSetupWithHttpInfo(System.String)">
            <summary>
            Check if database has default user, org, bucket
            </summary>
            <remarks>
            Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.PostSetup(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String)">
            <summary>
            Set up initial user, org and bucket
            </summary>
            <remarks>
            Post an onboarding request to set up initial user, org and bucket.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.PostSetupWithHttpInfo(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String)">
            <summary>
            Set up initial user, org and bucket
            </summary>
            <remarks>
            Post an onboarding request to set up initial user, org and bucket.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.GetSetupAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if database has default user, org, bucket
            </summary>
            <remarks>
            Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.GetSetupAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if database has default user, org, bucket
            </summary>
            <remarks>
            Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (IsOnboarding)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.PostSetupAsync(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Set up initial user, org and bucket
            </summary>
            <remarks>
            Post an onboarding request to set up initial user, org and bucket.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISetupService.PostSetupAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Set up initial user, org and bucket
            </summary>
            <remarks>
            Post an onboarding request to set up initial user, org and bucket.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (OnboardingResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.SetupService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SetupService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SetupService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SetupService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SetupService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetup(System.String)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetupWithHttpInfo(System.String)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetupWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetupWithIRestResponse(System.String)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetupWithRestRequest(System.String)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetupAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of IsOnboarding</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetupAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (IsOnboarding)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.GetSetupAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if database has default user, org, bucket Returns &#x60;true&#x60; if no default user, organization, or bucket has been created.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (IsOnboarding)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetup(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetupWithHttpInfo(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetupWithIRestResponseAsync(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetupWithIRestResponse(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetupWithRestRequest(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetupAsync(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of OnboardingResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetupAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (OnboardingResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SetupService.PostSetupAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.OnboardingRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Set up initial user, org and bucket Post an onboarding request to set up initial user, org and bucket.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="onboardingRequest">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (OnboardingResponse)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ISigninService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISigninService.PostSignin(System.String,System.String)">
            <summary>
            Create a user session.
            </summary>
            <remarks>
            Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISigninService.PostSigninWithHttpInfo(System.String,System.String)">
            <summary>
            Create a user session.
            </summary>
            <remarks>
            Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISigninService.PostSigninAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user session.
            </summary>
            <remarks>
            Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISigninService.PostSigninAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user session.
            </summary>
            <remarks>
            Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.SigninService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SigninService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SigninService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SigninService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SigninService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSignin(System.String,System.String)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSigninWithHttpInfo(System.String,System.String)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSigninWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSigninWithIRestResponse(System.String,System.String)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSigninWithRestRequest(System.String,System.String)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSigninAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSigninAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SigninService.PostSigninAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user session. Authenticates ***Basic Auth*** credentials for a user. If successful, creates a new UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ISignoutService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISignoutService.PostSignout(System.String)">
            <summary>
            Expire the current UI session
            </summary>
            <remarks>
            Expires the current UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISignoutService.PostSignoutWithHttpInfo(System.String)">
            <summary>
            Expire the current UI session
            </summary>
            <remarks>
            Expires the current UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISignoutService.PostSignoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Expire the current UI session
            </summary>
            <remarks>
            Expires the current UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISignoutService.PostSignoutAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Expire the current UI session
            </summary>
            <remarks>
            Expires the current UI session for the user.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.SignoutService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SignoutService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SignoutService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SignoutService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SignoutService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignout(System.String)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignoutWithHttpInfo(System.String)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignoutWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignoutWithIRestResponse(System.String)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignoutWithRestRequest(System.String)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignoutAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SignoutService.PostSignoutAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Expire the current UI session Expires the current UI session for the user.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ISourcesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.DeleteSourcesID(System.String,System.String)">
            <summary>
            Delete a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.DeleteSourcesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSources(System.String,System.String)">
            <summary>
            List all sources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesWithHttpInfo(System.String,System.String)">
            <summary>
            List all sources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesID(System.String,System.String)">
            <summary>
            Retrieve a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDBuckets(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDBucketsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDHealth(System.String,System.String)">
            <summary>
            Get the health of a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDHealthWithHttpInfo(System.String,System.String)">
            <summary>
            Get the health of a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PatchSourcesID(System.String,InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Update a Source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PatchSourcesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Update a Source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PostSources(InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Create a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PostSourcesWithHttpInfo(InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Create a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.DeleteSourcesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.DeleteSourcesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all sources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all sources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Sources)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Source)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDBucketsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDBucketsAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDHealthAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.GetSourcesIDHealthAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (HealthCheck)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PatchSourcesIDAsync(System.String,InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PatchSourcesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Source)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PostSourcesAsync(InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ISourcesService.PostSourcesAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a source
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Source)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.SourcesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SourcesService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.SourcesService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SourcesService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.SourcesService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesID(System.String,System.String)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.DeleteSourcesIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSources(System.String,System.String)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesWithHttpInfo(System.String,System.String)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesWithIRestResponse(System.String,System.String)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesWithRestRequest(System.String,System.String)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Sources</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Sources)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all sources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Sources)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesID(System.String,System.String)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Source)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Source)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBuckets(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBucketsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBucketsWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBucketsWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBucketsWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <returns>ApiResponse of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBucketsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Buckets</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBucketsAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDBucketsAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get buckets in a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Buckets)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealth(System.String,System.String)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealthWithHttpInfo(System.String,System.String)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealthWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealthWithIRestResponse(System.String,System.String)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealthWithRestRequest(System.String,System.String)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealthAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of HealthCheck</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealthAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (HealthCheck)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.GetSourcesIDHealthAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the health of a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (HealthCheck)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesID(System.String,InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesIDAsync(System.String,InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Source)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PatchSourcesIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sourceID">The source ID.</param>
            <param name="source">Source update</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Source)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSources(InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSourcesWithHttpInfo(InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSourcesWithIRestResponseAsync(InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSourcesWithIRestResponse(InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSourcesWithRestRequest(InfluxDB.Client.Api.Domain.Source,System.String)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSourcesAsync(InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Source</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSourcesAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Source)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.SourcesService.PostSourcesAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.Source,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a source 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="source">Source to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Source)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ITasksService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksID(System.String,System.String)">
            <summary>
            Delete a task
            </summary>
            <remarks>
            Deletes a task and all associated records
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a task
            </summary>
            <remarks>
            Deletes a task and all associated records
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDRunsID(System.String,System.String,System.String)">
            <summary>
            Cancel a running task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDRunsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Cancel a running task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasks(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            List all tasks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <returns>Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            List all tasks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <returns>ApiResponse of Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksID(System.String,System.String)">
            <summary>
            Retrieve a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLabels(System.String,System.String)">
            <summary>
            List all labels for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLogs(System.String,System.String)">
            <summary>
            Retrieve all logs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLogsWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve all logs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDMembers(System.String,System.String)">
            <summary>
            List all task members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all task members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDOwners(System.String,System.String)">
            <summary>
            List all owners of a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRuns(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            List runs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <returns>Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            List runs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <returns>ApiResponse of Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsID(System.String,System.String,System.String)">
            <summary>
            Retrieve a single run for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve a single run for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsIDLogs(System.String,System.String,System.String)">
            <summary>
            Retrieve all logs for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsIDLogsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve all logs for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PatchTasksID(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String)">
            <summary>
            Update a task
            </summary>
            <remarks>
            Update a task. This will cancel all queued runs.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PatchTasksIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String)">
            <summary>
            Update a task
            </summary>
            <remarks>
            Update a task. This will cancel all queued runs.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasks(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String)">
            <summary>
            Create a new task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksWithHttpInfo(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String)">
            <summary>
            Create a new task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRuns(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually)">
            <summary>
            Manually start a task run, overriding the current schedule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <returns>Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRunsWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually)">
            <summary>
            Manually start a task run, overriding the current schedule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRunsIDRetry(System.String,System.String,System.String,System.String)">
            <summary>
            Retry a task run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <returns>Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRunsIDRetryWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Retry a task run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task
            </summary>
            <remarks>
            Deletes a task and all associated records
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task
            </summary>
            <remarks>
            Deletes a task and all associated records
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDRunsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a running task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.DeleteTasksIDRunsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a running task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            List all tasks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            List all tasks
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Tasks)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLogsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDLogsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Logs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all task members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all task members
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List runs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List runs for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Runs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run for a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Run)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsIDLogsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.GetTasksIDRunsIDLogsAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Logs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PatchTasksIDAsync(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a task
            </summary>
            <remarks>
            Update a task. This will cancel all queued runs.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PatchTasksIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a task
            </summary>
            <remarks>
            Update a task. This will cancel all queued runs.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksAsync(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a task
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRunsAsync(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually,System.Threading.CancellationToken)">
            <summary>
            Manually start a task run, overriding the current schedule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRunsAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually,System.Threading.CancellationToken)">
            <summary>
            Manually start a task run, overriding the current schedule
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Run)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRunsIDRetryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITasksService.PostTasksIDRunsIDRetryAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Run)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.TasksService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TasksService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TasksService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TasksService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TasksService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksID(System.String,System.String)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task Deletes a task and all associated records
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDMembersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDOwnersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsID(System.String,System.String,System.String)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.DeleteTasksIDRunsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a running task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasks(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <returns>Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <returns>ApiResponse of Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <returns>ApiResponse of Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksWithRestRequest(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <returns>ApiResponse of Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Tasks)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            List all tasks 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="after">Return tasks after a specified ID. (optional)</param>
            <param name="user">Filter tasks to a specific user ID. (optional)</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="orgID">Filter tasks to a specific organization ID. (optional)</param>
            <param name="status">Filter tasks by a status- -\&quot;inactive\&quot; or \&quot;active\&quot;. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="type">Type of task, unset by default. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Tasks)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksID(System.String,System.String)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabels(System.String,System.String)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogs(System.String,System.String)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogsWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogsWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogsWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Logs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDLogsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Logs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembers(System.String,System.String)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembersWithIRestResponse(System.String,System.String)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembersWithRestRequest(System.String,System.String)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDMembersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all task members 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwners(System.String,System.String)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwnersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwnersWithIRestResponse(System.String,System.String)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwnersWithRestRequest(System.String,System.String)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDOwnersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRuns(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <returns>Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <returns>ApiResponse of Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsWithIRestResponseAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsWithIRestResponse(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <returns>ApiResponse of Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsWithRestRequest(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <returns>ApiResponse of Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Runs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Runs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsAsyncWithIRestResponse(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List runs for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The ID of the task to get runs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="after">Returns runs after a specific ID. (optional)</param>
            <param name="limit">The number of runs to return (optional, default to 100)</param>
            <param name="afterTime">Filter runs to those scheduled after this time, RFC3339 (optional)</param>
            <param name="beforeTime">Filter runs to those scheduled before this time, RFC3339 (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Runs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsID(System.String,System.String,System.String)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Run)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run for a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Run)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogs(System.String,System.String,System.String)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogsWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogsWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogsWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Logs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogsAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Logs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.GetTasksIDRunsIDLogsAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">ID of task to get logs for.</param>
            <param name="runID">ID of run to get logs for.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Logs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksID(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksIDAsync(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PatchTasksIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a task Update a task. This will cancel all queued runs.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="taskUpdateRequest">Task update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasks(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksWithHttpInfo(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksWithIRestResponseAsync(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksWithIRestResponse(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksWithRestRequest(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksAsync(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TaskType</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskCreateRequest">Task to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (TaskType)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDMembersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwnersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwnersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwnersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDOwnersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a task 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRuns(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <returns>Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually,System.Threading.CancellationToken)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsAsync(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually,System.Threading.CancellationToken)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually,System.Threading.CancellationToken)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Run)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.RunManually,System.Threading.CancellationToken)">
            <summary>
            Manually start a task run, overriding the current schedule 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="runManually"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Run)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetry(System.String,System.String,System.String,System.String)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <returns>Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetryWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetryWithIRestResponseAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetryWithIRestResponse(System.String,System.String,System.String,System.String)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetryWithRestRequest(System.String,System.String,System.String,System.String)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Run</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetryAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Run)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TasksService.PostTasksIDRunsIDRetryAsyncWithIRestResponse(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="taskID">The task ID.</param>
            <param name="runID">The run ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="body"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Run)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ITelegrafPluginsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafPluginsService.GetTelegrafPlugins(System.String,System.String)">
            <summary>
            List all Telegraf plugins
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <returns>TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafPluginsService.GetTelegrafPluginsWithHttpInfo(System.String,System.String)">
            <summary>
            List all Telegraf plugins
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <returns>ApiResponse of TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafPluginsService.GetTelegrafPluginsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf plugins
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafPluginsService.GetTelegrafPluginsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf plugins
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TelegrafPlugins)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.TelegrafPluginsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TelegrafPluginsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TelegrafPluginsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TelegrafPluginsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TelegrafPluginsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPlugins(System.String,System.String)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <returns>TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPluginsWithHttpInfo(System.String,System.String)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <returns>ApiResponse of TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPluginsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPluginsWithIRestResponse(System.String,System.String)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <returns>ApiResponse of TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPluginsWithRestRequest(System.String,System.String)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <returns>ApiResponse of TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPluginsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TelegrafPlugins</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPluginsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TelegrafPlugins)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafPluginsService.GetTelegrafPluginsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf plugins 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="type">The type of plugin desired. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (TelegrafPlugins)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ITelegrafsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsID(System.String,System.String)">
            <summary>
            Delete a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafs(System.String,System.String)">
            <summary>
            List all Telegraf configurations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <returns>Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsWithHttpInfo(System.String,System.String)">
            <summary>
            List all Telegraf configurations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <returns>ApiResponse of Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsID(System.String,System.String,System.String)">
            <summary>
            Retrieve a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDMembers(System.String,System.String)">
            <summary>
            List all users with member privileges for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all users with member privileges for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDOwners(System.String,System.String)">
            <summary>
            List all owners of a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafs(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Create a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsWithHttpInfo(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Create a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PutTelegrafsID(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Update a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PutTelegrafsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Update a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.DeleteTelegrafsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf configurations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf configurations
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Telegrafs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.GetTelegrafsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsAsync(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Telegraf)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a Telegraf config
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PostTelegrafsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PutTelegrafsIDAsync(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITelegrafsService.PutTelegrafsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Telegraf configuration
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Telegraf)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.TelegrafsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TelegrafsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TelegrafsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TelegrafsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TelegrafsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsID(System.String,System.String)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelID">The label ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersID(System.String,System.String,System.String)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDMembersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a member from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the member to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersID(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.DeleteTelegrafsIDOwnersIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an owner from a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the owner to remove.</param>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafs(System.String,System.String)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <returns>Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsWithHttpInfo(System.String,System.String)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <returns>ApiResponse of Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsWithIRestResponse(System.String,System.String)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <returns>ApiResponse of Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsWithRestRequest(System.String,System.String)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <returns>ApiResponse of Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Telegrafs</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Telegrafs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all Telegraf configurations 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="orgID">The organization ID the Telegraf config belongs to. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Telegrafs)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsID(System.String,System.String,System.String)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <returns>string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <returns>ApiResponse of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of string</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="accept"> (optional, default to application/toml)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (string)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabels(System.String,System.String)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembers(System.String,System.String)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembersWithHttpInfo(System.String,System.String)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembersWithIRestResponse(System.String,System.String)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembersWithRestRequest(System.String,System.String)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMembers</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDMembersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMembers)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwners(System.String,System.String)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwnersWithHttpInfo(System.String,System.String)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwnersWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwnersWithIRestResponse(System.String,System.String)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwnersWithRestRequest(System.String,System.String)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwnersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwners</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwnersAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.GetTelegrafsIDOwnersAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwners)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafs(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsWithHttpInfo(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsWithIRestResponseAsync(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsWithIRestResponse(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsWithRestRequest(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsAsync(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Telegraf)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafPluginRequest">Telegraf configuration to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Telegraf)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembers(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceMember</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDMembersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a member to a Telegraf config 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="addResourceMemberRequestBody">User to add as member</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceMember)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwners(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwnersWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwnersWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwnersWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwnersWithRestRequest(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwnersAsync(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ResourceOwner</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwnersAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PostTelegrafsIDOwnersAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.AddResourceMemberRequestBody,System.String,System.Threading.CancellationToken)">
            <summary>
            Add an owner to a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf configuration ID.</param>
            <param name="addResourceMemberRequestBody">User to add as owner</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ResourceOwner)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsID(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsIDAsync(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Telegraf)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TelegrafsService.PutTelegrafsIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a Telegraf configuration 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="telegrafID">The Telegraf config ID.</param>
            <param name="telegrafPluginRequest">Telegraf configuration update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Telegraf)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ITemplatesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ApplyTemplate(InfluxDB.Client.Api.Domain.TemplateApply)">
            <summary>
            Apply or dry-run a template
            </summary>
            <remarks>
            Applies or performs a dry-run of template in an organization.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <returns>TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ApplyTemplateWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateApply)">
            <summary>
            Apply or dry-run a template
            </summary>
            <remarks>
            Applies or performs a dry-run of template in an organization.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <returns>ApiResponse of TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.CreateStack(InfluxDB.Client.Api.Domain.PostStackRequest)">
            <summary>
            Create a new stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.CreateStackWithHttpInfo(InfluxDB.Client.Api.Domain.PostStackRequest)">
            <summary>
            Create a new stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.DeleteStack(System.String,System.String)">
            <summary>
            Delete a stack and associated resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.DeleteStackWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a stack and associated resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ExportTemplate(InfluxDB.Client.Api.Domain.TemplateExportByID)">
            <summary>
            Export a new template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <returns>List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ExportTemplateWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateExportByID)">
            <summary>
            Export a new template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <returns>ApiResponse of List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ListStacks(System.String,System.String,System.String)">
            <summary>
            List installed templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <returns>ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ListStacksWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            List installed templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <returns>ApiResponse of ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ReadStack(System.String)">
            <summary>
            Retrieve a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ReadStackWithHttpInfo(System.String)">
            <summary>
            Retrieve a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UninstallStack(System.String)">
            <summary>
            Uninstall a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UninstallStackWithHttpInfo(System.String)">
            <summary>
            Uninstall a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UpdateStack(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest)">
            <summary>
            Update a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UpdateStackWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest)">
            <summary>
            Update a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ApplyTemplateAsync(InfluxDB.Client.Api.Domain.TemplateApply,System.Threading.CancellationToken)">
            <summary>
            Apply or dry-run a template
            </summary>
            <remarks>
            Applies or performs a dry-run of template in an organization.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ApplyTemplateAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateApply,System.Threading.CancellationToken)">
            <summary>
            Apply or dry-run a template
            </summary>
            <remarks>
            Applies or performs a dry-run of template in an organization.
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TemplateSummary)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.CreateStackAsync(InfluxDB.Client.Api.Domain.PostStackRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.CreateStackAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostStackRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.DeleteStackAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a stack and associated resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.DeleteStackAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a stack and associated resources
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ExportTemplateAsync(InfluxDB.Client.Api.Domain.TemplateExportByID,System.Threading.CancellationToken)">
            <summary>
            Export a new template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ExportTemplateAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateExportByID,System.Threading.CancellationToken)">
            <summary>
            Export a new template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (List&lt;Object&gt;)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ListStacksAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List installed templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ListStacksAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List installed templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ListStacksResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ReadStackAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.ReadStackAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UninstallStackAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Uninstall a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UninstallStackAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Uninstall a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UpdateStackAsync(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest,System.Threading.CancellationToken)">
            <summary>
            Update a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ITemplatesService.UpdateStackAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest,System.Threading.CancellationToken)">
            <summary>
            Update a stack
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.TemplatesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TemplatesService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.TemplatesService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TemplatesService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.TemplatesService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplate(InfluxDB.Client.Api.Domain.TemplateApply)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <returns>TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplateWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateApply)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <returns>ApiResponse of TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplateWithIRestResponseAsync(InfluxDB.Client.Api.Domain.TemplateApply,System.Threading.CancellationToken)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplateWithIRestResponse(InfluxDB.Client.Api.Domain.TemplateApply)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <returns>ApiResponse of TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplateWithRestRequest(InfluxDB.Client.Api.Domain.TemplateApply)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <returns>ApiResponse of TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplateAsync(InfluxDB.Client.Api.Domain.TemplateApply,System.Threading.CancellationToken)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of TemplateSummary</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplateAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateApply,System.Threading.CancellationToken)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (TemplateSummary)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ApplyTemplateAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.TemplateApply,System.Threading.CancellationToken)">
            <summary>
            Apply or dry-run a template Applies or performs a dry-run of template in an organization.
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateApply"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (TemplateSummary)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStack(InfluxDB.Client.Api.Domain.PostStackRequest)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStackWithHttpInfo(InfluxDB.Client.Api.Domain.PostStackRequest)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStackWithIRestResponseAsync(InfluxDB.Client.Api.Domain.PostStackRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStackWithIRestResponse(InfluxDB.Client.Api.Domain.PostStackRequest)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStackWithRestRequest(InfluxDB.Client.Api.Domain.PostStackRequest)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStackAsync(InfluxDB.Client.Api.Domain.PostStackRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStackAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostStackRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.CreateStackAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.PostStackRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStack(System.String,System.String)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStackWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStackWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStackWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStackWithRestRequest(System.String,System.String)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStackAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStackAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.DeleteStackAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a stack and associated resources 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="orgID">The identifier of the organization.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplate(InfluxDB.Client.Api.Domain.TemplateExportByID)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <returns>List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplateWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateExportByID)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <returns>ApiResponse of List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplateWithIRestResponseAsync(InfluxDB.Client.Api.Domain.TemplateExportByID,System.Threading.CancellationToken)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplateWithIRestResponse(InfluxDB.Client.Api.Domain.TemplateExportByID)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <returns>ApiResponse of List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplateWithRestRequest(InfluxDB.Client.Api.Domain.TemplateExportByID)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <returns>ApiResponse of List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplateAsync(InfluxDB.Client.Api.Domain.TemplateExportByID,System.Threading.CancellationToken)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of List&lt;Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplateAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.TemplateExportByID,System.Threading.CancellationToken)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (List&lt;Object&gt;)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ExportTemplateAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.TemplateExportByID,System.Threading.CancellationToken)">
            <summary>
            Export a new template 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="templateExportByID">Export resources as an InfluxDB template. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (List&lt;Object&gt;)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacks(System.String,System.String,System.String)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <returns>ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacksWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <returns>ApiResponse of ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacksWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacksWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <returns>ApiResponse of ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacksWithRestRequest(System.String,System.String,System.String)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <returns>ApiResponse of ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacksAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ListStacksResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacksAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (ListStacksResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ListStacksAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List installed templates 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="orgID">The organization ID of the stacks</param>
            <param name="name">A collection of names to filter the list by. (optional)</param>
            <param name="stackID">A collection of stackIDs to filter the list by. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (ListStacksResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStack(System.String)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStackWithHttpInfo(System.String)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStackWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStackWithIRestResponse(System.String)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStackWithRestRequest(System.String)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStackAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStackAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.ReadStackAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStack(System.String)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStackWithHttpInfo(System.String)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStackWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStackWithIRestResponse(System.String)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStackWithRestRequest(System.String)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStackAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStackAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UninstallStackAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Uninstall a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStack(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <returns>Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStackWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStackWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest,System.Threading.CancellationToken)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStackWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStackWithRestRequest(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <returns>ApiResponse of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStackAsync(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest,System.Threading.CancellationToken)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Stack</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStackAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest,System.Threading.CancellationToken)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Stack)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.TemplatesService.UpdateStackAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PatchStackRequest,System.Threading.CancellationToken)">
            <summary>
            Update a stack 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="stackId">The identifier of the stack.</param>
            <param name="patchStackRequest"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Stack)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IUsersService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.DeleteUsersID(System.String,System.String)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.DeleteUsersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetFlags(System.String)">
            <summary>
            Return the feature flags for the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetFlagsWithHttpInfo(System.String)">
            <summary>
            Return the feature flags for the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetMe(System.String)">
            <summary>
            Retrieve the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetMeWithHttpInfo(System.String)">
            <summary>
            Retrieve the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            List all users
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <returns>Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsersWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            List all users
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <returns>ApiResponse of Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsersID(System.String,System.String)">
            <summary>
            Retrieve a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PatchUsersID(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Update a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PatchUsersIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Update a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsers(InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Create a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsersWithHttpInfo(InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Create a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsersIDPassword(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsersIDPasswordWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PutMePassword(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PutMePasswordWithHttpInfo(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.DeleteUsersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.DeleteUsersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetFlagsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Return the feature flags for the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetFlagsAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Return the feature flags for the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dictionary&lt;string, Object&gt;)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetMeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetMeAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the currently authenticated user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Users)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.GetUsersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PatchUsersIDAsync(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PatchUsersIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsersAsync(InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsersAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsersIDPasswordAsync(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PostUsersIDPasswordAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PutMePasswordAsync(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IUsersService.PutMePasswordAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.UsersService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.UsersService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.UsersService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.UsersService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.UsersService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersID(System.String,System.String)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.DeleteUsersIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlags(System.String)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlagsWithHttpInfo(System.String)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlagsWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlagsWithIRestResponse(System.String)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlagsWithRestRequest(System.String)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlagsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Dictionary&lt;string, Object&gt;</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlagsAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Dictionary&lt;string, Object&gt;)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetFlagsAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Return the feature flags for the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Dictionary&lt;string, Object&gt;)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMe(System.String)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMeWithHttpInfo(System.String)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMeWithIRestResponseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMeWithIRestResponse(System.String)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMeWithRestRequest(System.String)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMeAsyncWithHttpInfo(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetMeAsyncWithIRestResponse(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the currently authenticated user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <returns>Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <returns>ApiResponse of Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersWithIRestResponseAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <returns>ApiResponse of Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersWithRestRequest(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <returns>ApiResponse of Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Users</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Users)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersAsyncWithIRestResponse(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">Resource ID to seek from. Results are not inclusive of this ID. Use &#x60;after&#x60; instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Users)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersID(System.String,System.String)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.GetUsersIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersID(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersIDAsync(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PatchUsersIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The ID of the user to update.</param>
            <param name="postUser">User update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsers(InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersWithHttpInfo(InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersWithIRestResponseAsync(InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersWithIRestResponse(InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersWithRestRequest(InfluxDB.Client.Api.Domain.PostUser,System.String)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersAsync(InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.PostUser,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a user 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="postUser">User to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (User)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPassword(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPasswordWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPasswordWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPasswordWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPasswordWithRestRequest(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPasswordAsync(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPasswordAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PostUsersIDPasswordAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userID">The user ID.</param>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePassword(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePasswordWithHttpInfo(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePasswordWithIRestResponseAsync(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePasswordWithIRestResponse(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePasswordWithRestRequest(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePasswordAsync(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePasswordAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.UsersService.PutMePasswordAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.PasswordResetBody,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a password 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="passwordResetBody">New password</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="authorization">An auth credential for the Basic scheme (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IVariablesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesID(System.String,System.String)">
            <summary>
            Delete a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariables(System.String,System.String,System.String)">
            <summary>
            List all variables
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            List all variables
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesID(System.String,System.String)">
            <summary>
            Retrieve a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesIDLabels(System.String,System.String)">
            <summary>
            List all labels for a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PatchVariablesID(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Update a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PatchVariablesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Update a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariables(InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Create a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariablesWithHttpInfo(InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Create a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariablesIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariablesIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PutVariablesID(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Replace a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PutVariablesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Replace a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.DeleteVariablesIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all variables
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all variables
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variables)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.GetVariablesIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PatchVariablesIDAsync(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PatchVariablesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariablesAsync(InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariablesAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariablesIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PostVariablesIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PutVariablesIDAsync(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Replace a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IVariablesService.PutVariablesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Replace a variable
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.VariablesService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.VariablesService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.VariablesService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.VariablesService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.VariablesService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesID(System.String,System.String)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDWithIRestResponse(System.String,System.String)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDWithRestRequest(System.String,System.String)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsID(System.String,System.String,System.String)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsIDWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsIDWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsIDWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsIDWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsIDAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsIDAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.DeleteVariablesIDLabelsIDAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelID">The label ID to delete.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariables(System.String,System.String,System.String)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesWithRestRequest(System.String,System.String,System.String)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <returns>ApiResponse of Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variables</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variables)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all variables 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="org">The name of the organization. (optional)</param>
            <param name="orgID">The organization ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Variables)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesID(System.String,System.String)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDWithHttpInfo(System.String,System.String)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDWithIRestResponse(System.String,System.String)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDWithRestRequest(System.String,System.String)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabels(System.String,System.String)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabelsWithHttpInfo(System.String,System.String)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabelsWithIRestResponseAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabelsWithIRestResponse(System.String,System.String)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabelsWithRestRequest(System.String,System.String)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabelsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelsResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabelsAsyncWithHttpInfo(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.GetVariablesIDLabelsAsyncWithIRestResponse(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelsResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesID(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesIDAsync(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PatchVariablesIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable update to apply</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariables(InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesWithHttpInfo(InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesWithIRestResponseAsync(InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesWithIRestResponse(InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesWithRestRequest(InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesAsync(InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesAsyncWithHttpInfo(InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesAsyncWithIRestResponse(InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variable">Variable to create</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabels(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabelsWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabelsWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabelsWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabelsWithRestRequest(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabelsAsync(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of LabelResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabelsAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PostVariablesIDLabelsAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.LabelMapping,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="labelMapping">Label to add</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (LabelResponse)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesID(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesIDWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesIDWithIRestResponseAsync(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesIDWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesIDWithRestRequest(System.String,InfluxDB.Client.Api.Domain.Variable,System.String)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesIDAsync(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of Variable</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesIDAsyncWithHttpInfo(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (Variable)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.VariablesService.PutVariablesIDAsyncWithIRestResponse(System.String,InfluxDB.Client.Api.Domain.Variable,System.String,System.Threading.CancellationToken)">
            <summary>
            Replace a variable 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="variableID">The variable ID.</param>
            <param name="variable">Variable to replace</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (Variable)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IViewsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.GetDashboardsIDCellsIDView(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.GetDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.PatchDashboardsIDCellsIDView(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.PatchDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.GetDashboardsIDCellsIDViewAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.GetDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.PatchDashboardsIDCellsIDViewAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IViewsService.PatchDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.ViewsService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ViewsService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.ViewsService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ViewsService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.ViewsService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDView(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDViewWithIRestResponseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDViewWithIRestResponse(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDViewWithRestRequest(System.String,System.String,System.String)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDViewAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.GetDashboardsIDCellsIDViewAsyncWithIRestResponse(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The dashboard ID.</param>
            <param name="cellID">The cell ID.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDView(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDViewWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDViewWithIRestResponseAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDViewWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDViewWithRestRequest(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <returns>ApiResponse of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDViewAsync(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of View</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDViewAsyncWithHttpInfo(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse (View)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.ViewsService.PatchDashboardsIDCellsIDViewAsyncWithIRestResponse(System.String,System.String,InfluxDB.Client.Api.Domain.View,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the view for a cell 
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="dashboardID">The ID of the dashboard to update.</param>
            <param name="cellID">The ID of the cell to update.</param>
            <param name="view"></param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse (View)</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.IWriteService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IWriteService.PostWrite(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision})">
            <summary>
            Write data
            </summary>
            <remarks>
            Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IWriteService.PostWriteWithHttpInfo(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision})">
            <summary>
            Write data
            </summary>
            <remarks>
            Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IWriteService.PostWriteAsync(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision},System.Threading.CancellationToken)">
            <summary>
            Write data
            </summary>
            <remarks>
            Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.IWriteService.PostWriteAsyncWithHttpInfo(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision},System.Threading.CancellationToken)">
            <summary>
            Write data
            </summary>
            <remarks>
            Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </remarks>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.Api.Service.WriteService">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.WriteService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.#ctor(InfluxDB.Client.Api.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:InfluxDB.Client.Api.Service.WriteService"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.WriteService.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:InfluxDB.Client.Api.Service.WriteService.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWrite(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision})">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWriteWithHttpInfo(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision})">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWriteWithIRestResponseAsync(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision},System.Threading.CancellationToken)">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWriteWithIRestResponse(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision})">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWriteWithRestRequest(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision})">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWriteAsync(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision},System.Threading.CancellationToken)">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWriteAsyncWithHttpInfo(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision},System.Threading.CancellationToken)">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.Api.Service.WriteService.PostWriteAsyncWithIRestResponse(System.String,System.String,System.Byte[],System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{InfluxDB.Client.Api.Domain.WritePrecision},System.Threading.CancellationToken)">
            <summary>
            Write data Writes data to a bucket.  To write data into InfluxDB, you need the following:  - **organization name or ID** – _See [View organizations](https://docs.influxdata.com/influxdb/v2.1/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._ - **bucket** – _See [View buckets](https://docs.influxdata.com/influxdb/v2.1/organizations/buckets/view-buckets/) for  instructions on viewing your bucket ID._ - **API token** – _See [View tokens](https://docs.influxdata.com/influxdb/v2.1/security/tokens/view-tokens/)  for instructions on viewing your API token._ - **InfluxDB URL** – _See [InfluxDB URLs](https://docs.influxdata.com/influxdb/v2.1/reference/urls/)_. - data in [line protocol](https://docs.influxdata.com/influxdb/v2.1/reference/syntax/line-protocol) format.  InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.  For more information and examples, see the following: - [Write data with the InfluxDB API](https://docs.influxdata.com/influxdb/v2.1/write-data/developer-tools/api). - [Optimize writes to InfluxDB](https://docs.influxdata.com/influxdb/v2.1/write-data/best-practices/optimize-writes/).
            </summary>
            <exception cref="T:InfluxDB.Client.Api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="org">The parameter value specifies the destination organization for writes. The database writes all points in the batch to this organization. If you provide both &#x60;orgID&#x60; and &#x60;org&#x60; parameters, &#x60;org&#x60; takes precedence.</param>
            <param name="bucket">The destination bucket for writes.</param>
            <param name="body">Data in line protocol format.</param>
            <param name="zapTraceSpan">OpenTracing span context (optional)</param>
            <param name="contentEncoding">The value tells InfluxDB what compression is applied to the line protocol in the request payload. To make an API request with a GZIP payload, send &#x60;Content-Encoding: gzip&#x60; as a request header. (optional, default to identity)</param>
            <param name="contentType">The header value indicates the format of the data in the request body. (optional, default to text/plain; charset&#x3D;utf-8)</param>
            <param name="contentLength">The header value indicates the size of the entity-body, in bytes, sent to the database. If the length is greater than the database&#39;s &#x60;max body&#x60; configuration option, the server responds with status code &#x60;413&#x60;. (optional)</param>
            <param name="accept">The header value specifies the response format. (optional, default to application/json)</param>
            <param name="orgID">The parameter value specifies the ID of the destination organization for writes. If both &#x60;orgID&#x60; and &#x60;org&#x60; are specified, &#x60;org&#x60; takes precedence. (optional)</param>
            <param name="precision">The precision for the unix timestamps within the body line-protocol. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Task of RestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetQueryApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Query client.
            </summary>
            <param name="mapper">the mapper used for mapping FluxResults to POCO</param>
            <returns>the new client instance for the Query API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetQueryApiSync(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the synchronous version of Query client.
            </summary>
            <param name="mapper">the mapper used for mapping FluxResults to POCO</param>
            <returns>the new synchronous client instance for the Query API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetWriteApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write client.
            </summary>
            <param name="mapper">the mapper used for mapping to PointData</param>
            <returns>the new client instance for the Write API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetWriteApi(InfluxDB.Client.WriteOptions,InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write client.
            </summary>
            <param name="writeOptions">the configuration for a write client</param>
            <param name="mapper">the converter used for mapping to PointData</param>
            <returns>the new client instance for the Write API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetWriteApiAsync(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write async client.
            </summary>
            <param name="mapper">the converter used for mapping to PointData</param>
            <returns>the new client instance for the Write API Async without batching</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetOrganizationsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Organization" /> client.
            </summary>
            <returns>the new client instance for Organization API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetUsersApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.User" /> client.
            </summary>
            <returns>the new client instance for User API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetBucketsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Bucket" /> client.
            </summary>
            <returns>the new client instance for Bucket API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetSourcesApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Source" /> client.
            </summary>
            <returns>the new client instance for Source API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetAuthorizationsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Authorization" /> client.
            </summary>
            <returns>the new client instance for Authorization API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetTasksApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.TaskType" /> client.
            </summary>
            <returns>the new client instance for Task API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetScraperTargetsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.ScraperTargetResponse" /> client.
            </summary>
            <returns>the new client instance for Scraper API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetTelegrafsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Telegraf" /> client.
            </summary>
            <returns>the new client instance for Telegrafs API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetLabelsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Label" /> client.
            </summary>
            <returns>the new client instance for Label API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetNotificationEndpointsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpoint" /> client.
            </summary>
            <returns>the new client instance for NotificationEndpoint API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetNotificationRulesApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRules" /> client.
            </summary>
            <returns>the new client instance for NotificationRules API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetChecksApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Check" /> client.
            </summary>
            <returns>the new client instance for Checks API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetDeleteApi">
            <summary>
            Get the Delete client.
            </summary>
            <returns>the new client instance for Delete API</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetInvokableScriptsApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Create an InvokableScripts API instance.
            </summary>
            <param name="mapper">the mapper used for mapping invocation results to POCO</param>
            <returns>New instance of InvokableScriptsApi.</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.CreateService``1(System.Type)">
            <summary>
            Create a service for specified type.
            </summary>
            <param name="serviceType">type of service</param>
            <typeparam name="TS">type of service</typeparam>
            <returns>new instance of service</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.SetLogLevel(InfluxDB.Client.Core.LogLevel)">
            <summary>
            Set the log level for the request and response information.
            </summary>
            <param name="logLevel">the log level to set</param>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.GetLogLevel">
            <summary>
            Set the <see cref="T:InfluxDB.Client.Core.LogLevel" /> that is used for logging requests and responses.
            </summary>
            <returns>Log Level</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.EnableGzip">
             <summary>
             Enable Gzip compress for http requests.
            
             <para>Currently only the "Write" and "Query" endpoints supports the Gzip compression.</para>
             </summary>
             <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.DisableGzip">
            <summary>
            Disable Gzip compress for http request body.
            </summary>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.IsGzipEnabled">
            <summary>
            Returns whether Gzip compress for http request body is enabled.
            </summary>
            <returns>true if gzip is enabled.</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.HealthAsync">
            <summary>
            Get the health of an instance.
            </summary>
            <returns>health of an instance</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.PingAsync">
            <summary>
            Check the status of InfluxDB Server.
            </summary>
            <returns>true if server is healthy otherwise return false</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.VersionAsync">
            <summary>
             Return the version of the connected InfluxDB Server.
            </summary>
            <returns>the version String, otherwise unknown</returns>
            <exception cref="T:InfluxDB.Client.Core.Exceptions.InfluxException">throws when request did not succesfully ends</exception>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.ReadyAsync">
            <summary>
            Check the readiness of InfluxDB Server at startup. It is not supported by InfluxDB Cloud. 
            </summary>
            <returns>return null if the InfluxDB is not ready</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.OnboardingAsync(InfluxDB.Client.Api.Domain.OnboardingRequest)">
            <summary>
            Post onboarding request, to setup initial user, org and bucket.
            </summary>
            <param name="onboarding">to setup defaults</param>
            <exception cref="T:InfluxDB.Client.Core.Exceptions.HttpException">With status code 422 when an onboarding has already been completed</exception>
            <returns>defaults for first run</returns>
        </member>
        <member name="M:InfluxDB.Client.IInfluxDBClient.IsOnboardingAllowedAsync">
            <summary>
            Check if database has default user, org, bucket created, returns true if not.
            </summary>
            <returns>True if onboarding has already been completed otherwise false</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String)">
            <summary>
            Create a instance of the InfluxDB 2.x client. The url could be a connection string with various configurations.
            <para>
            e.g.: "http://localhost:8086?timeout=5000&amp;logLevel=BASIC
            The following options are supported:
            <list type="bullet">
            <item>org - default destination organization for writes and queries</item>
            <item>bucket - default destination bucket for writes</item>
            <item>token - the token to use for the authorization</item>
            <item>logLevel (default - NONE) - rest client verbosity level</item>
            <item>timeout (default - 10000) - The timespan to wait before the HTTP request times out in milliseconds</item>
            <item>allowHttpRedirects (default - false) - Configure automatically following HTTP 3xx redirects</item>
            <item>verifySsl (default - true) - Ignore Certificate Validation Errors when false</item>
            </list>
            Options for logLevel:
            <list type="bullet">
            <item>Basic - Logs request and response lines.</item>
            <item>Body - Logs request and response lines including headers and body (if present). Note that applying the `Body` LogLevel will disable chunking while streaming and will load the whole response into memory.</item>
            <item>Headers - Logs request and response lines including headers.</item>
            <item>None - Disable logging.</item>
            </list>
            </para>
            </summary>
            <param name="url">connection string with various configurations</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a instance of the InfluxDB 2.x client.
            </summary>
            <param name="url">the url to connect to the InfluxDB 2.x</param>
            <param name="username">the username to use in the basic auth</param>
            <param name="password">the password to use in the basic auth</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String,System.String)">
            <summary>
            Create a instance of the InfluxDB 2.x client.
            </summary>
            <param name="url">the url to connect to the InfluxDB 2.x</param>
            <param name="token">the token to use for the authorization</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a instance of the InfluxDB 2.x client to connect into InfluxDB 1.8.
            </summary>
            <param name="url">the url to connect to the InfluxDB 1.8</param>
            <param name="username">authorization username</param>
            <param name="password">authorization password</param>
            <param name="database">database name</param>
            <param name="retentionPolicy">retention policy</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.#ctor(InfluxDB.Client.InfluxDBClientOptions)">
            <summary>
            Create a instance of the InfluxDB 2.x client.
            </summary>
            <param name="options">the connection configuration</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetQueryApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Query client.
            </summary>
            <param name="mapper">the mapper used for mapping FluxResults to POCO</param>
            <returns>the new client instance for the Query API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetQueryApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Query client.
            </summary>
            <param name="mapper">the mapper used for mapping FluxResults to POCO</param>
            <returns>the new client instance for the Query API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetQueryApiSync(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the synchronous version of Query client.
            </summary>
            <param name="mapper">the mapper used for mapping FluxResults to POCO</param>
            <returns>the new synchronous client instance for the Query API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetQueryApiSync(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the synchronous version of Query client.
            </summary>
            <param name="mapper">the mapper used for mapping FluxResults to POCO</param>
            <returns>the new synchronous client instance for the Query API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetWriteApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write client.
            </summary>
            <param name="mapper">the mapper used for mapping to PointData</param>
            <returns>the new client instance for the Write API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetWriteApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write client.
            </summary>
            <param name="mapper">the mapper used for mapping to PointData</param>
            <returns>the new client instance for the Write API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetWriteApiAsync(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write async client.
            </summary>
            <param name="mapper">the converter used for mapping to PointData</param>
            <returns>the new client instance for the Write API Async without batching</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetWriteApiAsync(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write async client.
            </summary>
            <param name="mapper">the converter used for mapping to PointData</param>
            <returns>the new client instance for the Write API Async without batching</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetWriteApi(InfluxDB.Client.WriteOptions,InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write client.
            </summary>
            <param name="writeOptions">the configuration for a write client</param>
            <param name="mapper">the converter used for mapping to PointData</param>
            <returns>the new client instance for the Write API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetWriteApi(InfluxDB.Client.WriteOptions,InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Get the Write client.
            </summary>
            <param name="writeOptions">the configuration for a write client</param>
            <param name="mapper">the converter used for mapping to PointData</param>
            <returns>the new client instance for the Write API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetOrganizationsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Organization" /> client.
            </summary>
            <returns>the new client instance for Organization API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetOrganizationsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Organization" /> client.
            </summary>
            <returns>the new client instance for Organization API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetUsersApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.User" /> client.
            </summary>
            <returns>the new client instance for User API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetUsersApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.User" /> client.
            </summary>
            <returns>the new client instance for User API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetBucketsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Bucket" /> client.
            </summary>
            <returns>the new client instance for Bucket API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetBucketsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Bucket" /> client.
            </summary>
            <returns>the new client instance for Bucket API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetSourcesApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Source" /> client.
            </summary>
            <returns>the new client instance for Source API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetSourcesApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Source" /> client.
            </summary>
            <returns>the new client instance for Source API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetAuthorizationsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Authorization" /> client.
            </summary>
            <returns>the new client instance for Authorization API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetAuthorizationsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Authorization" /> client.
            </summary>
            <returns>the new client instance for Authorization API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetTasksApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.TaskType" /> client.
            </summary>
            <returns>the new client instance for Task API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetTasksApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.TaskType" /> client.
            </summary>
            <returns>the new client instance for Task API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetScraperTargetsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.ScraperTargetResponse" /> client.
            </summary>
            <returns>the new client instance for Scraper API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetScraperTargetsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.ScraperTargetResponse" /> client.
            </summary>
            <returns>the new client instance for Scraper API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetTelegrafsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Telegraf" /> client.
            </summary>
            <returns>the new client instance for Telegrafs API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetTelegrafsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Telegraf" /> client.
            </summary>
            <returns>the new client instance for Telegrafs API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetLabelsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Label" /> client.
            </summary>
            <returns>the new client instance for Label API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetLabelsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Label" /> client.
            </summary>
            <returns>the new client instance for Label API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetNotificationEndpointsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpoint" /> client.
            </summary>
            <returns>the new client instance for NotificationEndpoint API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetNotificationEndpointsApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpoint" /> client.
            </summary>
            <returns>the new client instance for NotificationEndpoint API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetNotificationRulesApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRules" /> client.
            </summary>
            <returns>the new client instance for NotificationRules API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetNotificationRulesApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.NotificationRules" /> client.
            </summary>
            <returns>the new client instance for NotificationRules API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetChecksApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Check" /> client.
            </summary>
            <returns>the new client instance for Checks API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetChecksApi">
            <summary>
            Get the <see cref="T:InfluxDB.Client.Api.Domain.Check" /> client.
            </summary>
            <returns>the new client instance for Checks API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetDeleteApi">
            <summary>
            Get the Delete client.
            </summary>
            <returns>the new client instance for Delete API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetDeleteApi">
            <summary>
            Get the Delete client.
            </summary>
            <returns>the new client instance for Delete API</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#GetInvokableScriptsApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Create an InvokableScripts API instance.
            </summary>
            <param name="mapper">the mapper used for mapping invocation results to POCO</param>
            <returns>New instance of InvokableScriptsApi.</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetInvokableScriptsApi(InfluxDB.Client.IDomainObjectMapper)">
            <summary>
            Create an InvokableScripts API instance.
            </summary>
            <param name="mapper">the mapper used for mapping invocation results to POCO</param>
            <returns>New instance of InvokableScriptsApi.</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.CreateService``1(System.Type)">
            <summary>
            Create a service for specified type.
            </summary>
            <param name="serviceType">type of service</param>
            <typeparam name="TS">type of service</typeparam>
            <returns>new instance of service</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.SetLogLevel(InfluxDB.Client.Core.LogLevel)">
            <summary>
            Set the log level for the request and response information.
            </summary>
            <param name="logLevel">the log level to set</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.GetLogLevel">
            <summary>
            Set the <see cref="T:InfluxDB.Client.Core.LogLevel" /> that is used for logging requests and responses.
            </summary>
            <returns>Log Level</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#EnableGzip">
             <summary>
             Enable Gzip compress for http requests.
            
             <para>Currently only the "Write" and "Query" endpoints supports the Gzip compression.</para>
             </summary>
             <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.EnableGzip">
             <summary>
             Enable Gzip compress for http requests.
            
             <para>Currently only the "Write" and "Query" endpoints supports the Gzip compression.</para>
             </summary>
             <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.InfluxDB#Client#IInfluxDBClient#DisableGzip">
            <summary>
            Disable Gzip compress for http request body.
            </summary>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.DisableGzip">
            <summary>
            Disable Gzip compress for http request body.
            </summary>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.IsGzipEnabled">
            <summary>
            Returns whether Gzip compress for http request body is enabled.
            </summary>
            <returns>true if gzip is enabled.</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.HealthAsync">
            <summary>
            Get the health of an instance.
            </summary>
            <returns>health of an instance</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.PingAsync">
            <summary>
            Check the status of InfluxDB Server.
            </summary>
            <returns>true if server is healthy otherwise return false</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.VersionAsync">
            <summary>
             Return the version of the connected InfluxDB Server.
            </summary>
            <returns>the version String, otherwise unknown</returns>
            <exception cref="T:InfluxDB.Client.Core.Exceptions.InfluxException">throws when request did not succesfully ends</exception>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.ReadyAsync">
            <summary>
            Check the readiness of InfluxDB Server at startup. It is not supported by InfluxDB Cloud. 
            </summary>
            <returns>return null if the InfluxDB is not ready</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.OnboardingAsync(InfluxDB.Client.Api.Domain.OnboardingRequest)">
            <summary>
            Post onboarding request, to setup initial user, org and bucket.
            </summary>
            <param name="onboarding">to setup defaults</param>
            <exception cref="T:InfluxDB.Client.Core.Exceptions.HttpException">With status code 422 when an onboarding has already been completed</exception>
            <returns>defaults for first run</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClient.IsOnboardingAllowedAsync">
            <summary>
            Check if database has default user, org, bucket created, returns true if not.
            </summary>
            <returns>True if onboarding has already been completed otherwise false</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Create">
            <summary>
            Create a instance of the InfluxDB 2.x client that is configured via <code>App.config</code>.
            </summary>
            <returns>client</returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.InfluxDBClient.#ctor(InfluxDB.Client.InfluxDBClientOptions)"/>
            together with <see cref="M:InfluxDB.Client.InfluxDBClientOptions.LoadConfig(System.String)"/>
            </remarks>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Create(System.String)">
            <summary>
            Create a instance of the InfluxDB 2.x client. The url could be a connection string with various configurations.
            <para>
            e.g.: "http://localhost:8086?timeout=5000&amp;logLevel=BASIC
            </para>
            </summary>
            <param name="connectionString">connection string with various configurations</param>
            <returns>client</returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String)"/></remarks>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Create(System.String,System.String,System.Char[])">
            <summary>
            Create a instance of the InfluxDB 2.x client.
            </summary>
            <param name="url">the url to connect to the InfluxDB 2.x</param>
            <param name="username">the username to use in the basic auth</param>
            <param name="password">the password to use in the basic auth</param>
            <returns>client</returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String,System.String,System.String)"/></remarks>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Create(System.String,System.Char[])">
            <summary>
            Create a instance of the InfluxDB 2.x client.
            </summary>
            <param name="url">the url to connect to the InfluxDB 2.x</param>
            <param name="token">the token to use for the authorization</param>
            <returns>client</returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String,System.String)"/></remarks>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Create(System.String,System.String)">
            <summary>
            Create a instance of the InfluxDB 2.x client.
            </summary>
            <param name="url">the url to connect to the InfluxDB 2.x</param>
            <param name="token">the token to use for the authorization</param>
            <returns>client</returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String,System.String)"/></remarks>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.CreateV1(System.String,System.String,System.Char[],System.String,System.String)">
            <summary>
            Create a instance of the InfluxDB 2.x client to connect into InfluxDB 1.8.
            </summary>
            <param name="url">the url to connect to the InfluxDB 1.8</param>
            <param name="username">authorization username</param>
            <param name="password">authorization password</param>
            <param name="database">database name</param>
            <param name="retentionPolicy">retention policy</param>
            <returns>client</returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.InfluxDBClient.#ctor(System.String,System.String,System.String,System.String,System.String)"/></remarks>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Create(InfluxDB.Client.InfluxDBClientOptions)">
            <summary>
            Create a instance of the InfluxDB 2.x client.
            </summary>
            <param name="options">the connection configuration</param>
            <returns>client</returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.InfluxDBClient.#ctor(InfluxDB.Client.InfluxDBClientOptions)"/></remarks>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Onboarding(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Post onboarding request, to setup initial user, org and bucket.
            </summary>
            <param name="url">the url to connect to the InfluxDB</param>
            <param name="username">the name of an user</param>
            <param name="password">the password to connect as an user</param>
            <param name="org">the name of an organization</param>
            <param name="bucket">the name of a bucket</param>
            <returns>Created default user, bucket, org.</returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientFactory.Onboarding(System.String,InfluxDB.Client.Api.Domain.OnboardingRequest)">
            <summary>
            Post onboarding request, to setup initial user, org and bucket.
            </summary>
            <param name="url">the url to connect to the InfluxDB</param>
            <param name="onboarding">the defaults</param>
            <returns>Created default user, bucket, org.</returns>
        </member>
        <member name="T:InfluxDB.Client.InfluxDBClientOptions">
            <summary>
            InfluxDBClientOptions are used to configure the InfluxDB 2.x connections.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.Url">
            <summary>
            Set the url to connect the InfluxDB.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.Timeout">
            <summary>
            Set the timespan to wait before the HTTP request times out.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.LogLevel">
            <summary>
            Set the log level for the request and response information.
            <list type="bullet">
            <item>Basic - Logs request and response lines.</item>
            <item>Body - Logs request and response lines including headers and body (if present). Note that applying the `Body` LogLevel will disable chunking while streaming and will load the whole response into memory.</item>
            <item>Headers - Logs request and response lines including headers.</item>
            <item>None - Disable logging.</item>
            </list>
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.AuthScheme">
            <summary>
            The scheme uses to Authentication.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.Token">
            <summary>
            Setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Token"/>.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.Username">
            <summary>
            Setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Session"/>.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.Password">
            <summary>
            Setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Session"/>.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.Org">
            <summary>
            Specify the default destination organization for writes and queries.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.Bucket">
            <summary>
            Specify the default destination bucket for writes.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.WebProxy">
            <summary>
            Specify the WebProxy instance to use by the WebRequest to connect to external InfluxDB.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.AllowHttpRedirects">
            <summary>
            Configure automatically following HTTP 3xx redirects.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.VerifySsl">
            <summary>
            Ignore Certificate Validation Errors when `false`.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.VerifySslCallback">
            <summary>
            Callback function for handling the remote SSL Certificate Validation.
            The callback takes precedence over `VerifySsl`. 
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.ClientCertificates">
            <summary>
            Set X509CertificateCollection to be sent with HTTP requests
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.PointSettings">
            <summary>
            The setting for store data point: default values, threshold, ...
            </summary>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.DefaultTags">
            <summary>
            Default tags that will be use for writes by Point and POJO.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.AddDefaultTag(System.String,System.String)">
            <summary>
            Add default tag that will be use for writes by Point and POJO.
            <para>
            The expressions can be:
            <list type="bullet">
            <item>"California Miner" - static value</item>
            <item>"${version}" - application settings</item>
            <item>"${env.hostname}" - environment property</item>
            </list>
            </para>
            </summary>
            <param name="tagName">the tag name</param>
            <param name="expression">the tag value expression</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.AddDefaultTags(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Add default tags that will be use for writes by Point and POJO.
            <see cref="M:InfluxDB.Client.InfluxDBClientOptions.AddDefaultTag(System.String,System.String)"/>
            </summary>
            <param name="tags">tags dictionary</param>
        </member>
        <member name="P:InfluxDB.Client.InfluxDBClientOptions.HttpClient">
            <summary>
            Add a HttpClient as a part of InfluxDBClientOptions
            </summary>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.#ctor(System.String)">
             <summary>
             Create an instance of InfluxDBClientOptions. The url could be a connection string with various configurations.
            <para>
             e.g.: "http://localhost:8086?timeout=5000&amp;logLevel=BASIC
             The following options are supported:
             <list type="bullet">
             <item>Timeout - timespan to wait before the HTTP request times out</item>
             <item>LogLevel - log level for the request and response information</item>
             <item>Token - setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Token"/></item>
             <item>Username - with Password property setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Session"/></item>
             <item>Password - with Username property setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Session"/></item>
             <item>Org - specify the default destination organization for writes and queries</item>
             <item>Bucket - specify the default destination bucket for writes</item>
             <item>WebProxy - specify the WebProxy instance to use by the WebRequest to connect to external InfluxDB.</item>
             <item>AllowHttpRedirects - configure automatically following HTTP 3xx redirects</item>
             <item>VerifySsl - ignore Certificate Validation Errors when `false`</item>
             <item>VerifySslCallback - callback function for handling the remote SSL Certificate Validation. The callback takes precedence over `VerifySsl`</item>
             <item>ClientCertificates - set X509CertificateCollection to be sent with HTTP requests</item>
             <item>DefaultTags - tags that will be use for writes by Point and POJO</item>
             </list>
             </para>
             </summary>
             <param name="url">url to connect the InfluxDB</param>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.LoadConfig(System.String)">
            <summary>
            Configure InfluxDBClientOptions via App.config.
            </summary>
            <param name="sectionName">Name of configuration section. Useful for tests.</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions"/></returns>
        </member>
        <member name="T:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme">
            <summary>
            The scheme uses to Authentication.
            </summary>
        </member>
        <member name="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Anonymous">
            <summary>
            Anonymous.
            </summary>
        </member>
        <member name="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Session">
            <summary>
            Basic auth.
            </summary>
        </member>
        <member name="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Token">
            <summary>
            Authentication token.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.InfluxDBClientOptions.Builder">
            <summary>
            A builder for <see cref="T:InfluxDB.Client.InfluxDBClientOptions"/>.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.Url(System.String)">
            <summary>
            Set the url to connect the InfluxDB.
            </summary>
            <param name="url">the url to connect the InfluxDB. It must be defined.</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.LogLevel(InfluxDB.Client.Core.LogLevel)">
            <summary>
            Set the log level for the request and response information.
            </summary>
            <param name="logLevel">The log level for the request and response information.</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.TimeOut(System.TimeSpan)">
            <summary>
            Set the timespan to wait before the HTTP request times out.
            </summary>
            <param name="timeout">The timespan to wait before the HTTP request times out. It must be defined.</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.Authenticate(System.String,System.Char[])">
            <summary>
            Setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Session"/>.
            </summary>
            <param name="username">the username to use in the basic auth</param>
            <param name="password">the password to use in the basic auth</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.AuthenticateToken(System.Char[])">
            <summary>
            Setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Token"/>.
            </summary>
            <param name="token">the token to use for the authorization</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.AuthenticateToken(System.String)">
            <summary>
            Setup authorization by <see cref="F:InfluxDB.Client.InfluxDBClientOptions.AuthenticationScheme.Token"/>.
            </summary>
            <param name="token">the token to use for the authorization</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.Org(System.String)">
            <summary>
            Specify the default destination organization for writes and queries.
            </summary>
            <param name="org">the default destination organization for writes and queries</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.Bucket(System.String)">
            <summary>
            Specify the default destination bucket for writes.
            </summary>
            <param name="bucket">default destination bucket for writes</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.AddDefaultTag(System.String,System.String)">
             <summary>
             Add default tag that will be use for writes by Point and POJO.
            
             <para>
             The expressions can be:
             <list type="bullet">
             <item>"California Miner" - static value</item>
             <item>"${version}" - application settings</item>
             <item>"${env.hostname}" - environment property</item>
             </list>
             </para>
             </summary>
             <param name="tagName">the tag name</param>
             <param name="expression">the tag value expression</param>
             <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.Proxy(System.Net.IWebProxy)">
            <summary>
            Specify the WebProxy instance to use by the WebRequest to connect to external InfluxDB.
            </summary>
            <param name="webProxy">The WebProxy to use to access the InfluxDB.</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.AllowRedirects(System.Boolean)">
            <summary>
            Configure automatically following HTTP 3xx redirects.
            </summary>
            <param name="allowHttpRedirects">configure HTTP redirects</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.VerifySsl(System.Boolean)">
            <summary>
            Ignore Certificate Validation Errors when `false`.
            </summary>
            <param name="verifySsl">validates Certificates</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.RemoteCertificateValidationCallback(System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>
            Callback function for handling the remote SSL Certificate Validation.
            The callback takes precedence over `VerifySsl`. 
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.ClientCertificates(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary>
            Set X509CertificateCollection to be sent with HTTP requests
            </summary>
            <param name="clientCertificates">certificate collections</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.LoadConfig(System.String)">
            <summary>
            Configure Builder via App.config.
            </summary>
            <param name="sectionName">Name of configuration section. Useful for tests.</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.ConnectionString(System.String)">
            <summary>
            Configure Builder via connection string.
            </summary>
            <param name="connectionString">connection string with various configurations</param>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions.Builder"/></returns>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.Build">
            <summary>
            Build an instance of InfluxDBClientOptions.
            </summary>
            <returns><see cref="T:InfluxDB.Client.InfluxDBClientOptions"/></returns>
            <exception cref="T:System.InvalidOperationException">If url is not defined.</exception>
        </member>
        <member name="M:InfluxDB.Client.InfluxDBClientOptions.Builder.SetHttpClient(System.Net.Http.HttpClient)">
            <summary>
            Configure HttpClient
            </summary>
            <param name="httpClient"></param>
            <returns></returns>
        </member>
        <member name="T:InfluxDB.Client.Internal.DefaultDomainObjectMapper">
            <summary>
            Default implementation of DomainObject mapper.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Internal.RetryAttempt">
            <summary>
            RetryConfiguration.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Internal.RetryAttempt.IsRetry">
            <summary>
            Is this request retryable?
            </summary>
            <returns>true if its retryable otherwise false</returns>
        </member>
        <member name="M:InfluxDB.Client.Internal.RetryAttempt.GetRetryInterval">
            <summary>
            Get current retry interval.
            </summary>
            <returns>retry interval to sleep</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.CreateScriptAsync(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script.
            </summary>
            <param name="createRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The created script.</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.UpdateScriptAsync(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script.
            </summary>
            <param name="scriptId">The ID of the script to update. (required)</param>
            <param name="updateRequest">Script updates to apply (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The updated script.</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.DeleteScriptAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script.
            </summary>
            <param name="scriptId">The ID of the script to delete. (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.FindScriptsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts.
            </summary>
            <param name="offset">The offset for pagination.</param>
            <param name="limit">The number of scripts to return.</param>
            <param name="cancellationToken"></param>
            <returns>[Script]</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.InvokeScriptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a [FluxTable].
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>[FluxTable]</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.InvokeScriptMeasurementsAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a [T].
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>[T]</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.InvokeScriptRawAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a raw string.
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>String</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.InvokeScriptEnumerableAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a stream of FluxRecord.
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>stream of FluxRecord</returns>
        </member>
        <member name="M:InfluxDB.Client.IInvokableScriptsApi.InvokeScriptMeasurementsEnumerableAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a stream of Measurement.
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>stream of Measurement</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.CreateScriptAsync(InfluxDB.Client.Api.Domain.ScriptCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a script.
            </summary>
            <param name="createRequest">The script to create.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The created script.</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.UpdateScriptAsync(System.String,InfluxDB.Client.Api.Domain.ScriptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a script.
            </summary>
            <param name="scriptId">The ID of the script to update. (required)</param>
            <param name="updateRequest">Script updates to apply (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The updated script.</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.DeleteScriptAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a script.
            </summary>
            <param name="scriptId">The ID of the script to delete. (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.FindScriptsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List scripts.
            </summary>
            <param name="offset">The offset for pagination.</param>
            <param name="limit">The number of scripts to return.</param>
            <param name="cancellationToken"></param>
            <returns>[Script]</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.InvokeScriptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a [FluxTable].
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>[FluxTable]</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.InvokeScriptMeasurementsAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a [T].
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>[T]</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.InvokeScriptRawAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a raw string.
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>String</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.InvokeScriptEnumerableAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a stream of FluxRecord.
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>stream of FluxRecord</returns>
        </member>
        <member name="M:InfluxDB.Client.InvokableScriptsApi.InvokeScriptMeasurementsEnumerableAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Invoke a script and return result as a stream of Measurement.
            </summary>
            <param name="scriptId">The ID of the script to invoke. (required)</param>
            <param name="bindParams">Represent key/value pairs parameters to be injected into script</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>stream of Measurement</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.CreateLabelAsync(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label
            </summary>
            <param name="request">label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.CreateLabelAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Create a label
            </summary>
            <param name="name">name of a label</param>
            <param name="properties">properties of a label</param>
            <param name="orgId">owner of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.UpdateLabelAsync(InfluxDB.Client.Api.Domain.Label,System.Threading.CancellationToken)">
            <summary>
            Update a single label
            </summary>
            <param name="label">label to update</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Updated label</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.UpdateLabelAsync(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a single label
            </summary>
            <param name="labelId">ID of label to update</param>
            <param name="labelUpdate">label update</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Updated label</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,System.Threading.CancellationToken)">
            <summary>
            Delete a label.
            </summary>
            <param name="label">label to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.DeleteLabelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label.
            </summary>
            <param name="labelId">ID of label to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.CloneLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a label.
            </summary>
            <param name="clonedName">name of cloned label</param>
            <param name="labelId">ID of label to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned label</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.CloneLabelAsync(System.String,InfluxDB.Client.Api.Domain.Label,System.Threading.CancellationToken)">
            <summary>
            Clone a label.
            </summary>
            <param name="clonedName">name of cloned label</param>
            <param name="label">label to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned label</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.FindLabelByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label.
            </summary>
            <param name="labelId">ID of a label to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Label detail</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.FindLabelsAsync(System.Threading.CancellationToken)">
            <summary>
            List all labels.
            <param name="cancellationToken">Cancellation token</param>
            </summary>
            <returns>List all labels.</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.FindLabelsByOrgAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Get all labels.
            </summary>
            <param name="organization">specifies the organization of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>all labels</returns>
        </member>
        <member name="M:InfluxDB.Client.ILabelsApi.FindLabelsByOrgIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all labels.
            </summary>
            <param name="orgId">specifies the organization ID of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>all labels</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.CreateLabelAsync(InfluxDB.Client.Api.Domain.LabelCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a label
            </summary>
            <param name="request">label to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Added label</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.CreateLabelAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Create a label
            </summary>
            <param name="name">name of a label</param>
            <param name="properties">properties of a label</param>
            <param name="orgId">owner of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Added label</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.UpdateLabelAsync(InfluxDB.Client.Api.Domain.Label,System.Threading.CancellationToken)">
            <summary>
            Update a single label
            </summary>
            <param name="label">label to update</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Updated label</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.UpdateLabelAsync(System.String,InfluxDB.Client.Api.Domain.LabelUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a single label
            </summary>
            <param name="labelId">ID of label to update</param>
            <param name="labelUpdate">label update</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Updated label</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,System.Threading.CancellationToken)">
            <summary>
            Delete a label.
            </summary>
            <param name="label">label to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.DeleteLabelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label.
            </summary>
            <param name="labelId">ID of label to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.CloneLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a label.
            </summary>
            <param name="clonedName">name of cloned label</param>
            <param name="labelId">ID of label to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned label</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.CloneLabelAsync(System.String,InfluxDB.Client.Api.Domain.Label,System.Threading.CancellationToken)">
            <summary>
            Clone a label.
            </summary>
            <param name="clonedName">name of cloned label</param>
            <param name="label">label to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned label</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.FindLabelByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a label.
            </summary>
            <param name="labelId">ID of a label to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Label detail</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.FindLabelsAsync(System.Threading.CancellationToken)">
            <summary>
            List all labels.
            <param name="cancellationToken">Cancellation token</param>
            </summary>
            <returns>List all labels.</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.FindLabelsByOrgAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Get all labels.
            </summary>
            <param name="organization">specifies the organization of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>all labels</returns>
        </member>
        <member name="M:InfluxDB.Client.LabelsApi.FindLabelsByOrgIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all labels.
            </summary>
            <param name="orgId">specifies the organization ID of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>all labels</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CreateSlackEndpointAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Slack notification endpoint. The 'url' should be defined.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">Slack WebHook URL</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Slack notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CreateSlackEndpointAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
             Add new Slack notification endpoint. The 'url' should be defined.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">Slack WebHook URL</param>
            <param name="token">Slack WebHook Token</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Slack notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CreatePagerDutyEndpointAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new PagerDuty notification endpoint.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="clientUrl">Client URL</param>
            <param name="routingKey">Routing Key</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created PagerDuty notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CreateHttpEndpointAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new HTTP notification endpoint without authentication.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">URL</param>
            <param name="method">HTTP Method</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created HTTP notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CreateHttpEndpointBasicAuthAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">URL</param>
            <param name="method">HTTP Method</param>
            <param name="username">HTTP Basic Username</param>
            <param name="password">HTTP Basic Password</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created HTTP notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CreateHttpEndpointBearerAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">URL</param>
            <param name="method">HTTP Method</param>
            <param name="token">Bearer token</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created HTTP notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CreateEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add new notification endpoint.
            </summary>
            <param name="notificationEndpoint">notificationEndpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint created</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.UpdateEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint. The updates is used for fields from <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate"/>.
            </summary>
            <param name="notificationEndpoint">update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.UpdateEndpointAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint.
            </summary>
            <param name="endpointId">ID of notification endpoint</param>
            <param name="notificationEndpointUpdate">update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.DeleteNotificationEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint.
            </summary>
            <param name="notificationEndpoint">notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.DeleteNotificationEndpointAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint.
            </summary>
            <param name="endpointId">ID of notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.FindNotificationEndpointsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get notification endpoints.
            </summary>
            <param name="orgId">only show notification endpoints belonging to specified organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.FindNotificationEndpointsAsync(System.String,InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            Get all notification endpoints.
            </summary>
            <param name="orgId">only show notification endpoints belonging to specified organization</param>
            <param name="findOptions">the find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.FindNotificationEndpointByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a notification endpoint.
            </summary>
            <param name="endpointId">ID of notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the notification endpoint requested</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneSlackEndpointAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Slack Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token">Slack WebHook Token</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneSlackEndpointAsync(System.String,System.String,InfluxDB.Client.Api.Domain.SlackNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Slack Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token"></param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.ClonePagerDutyEndpointAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a PagerDuty Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="routingKey">Routing Key</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.ClonePagerDutyEndpointAsync(System.String,System.String,InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a PagerDuty Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="routingKey">Routing Key</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneHttpEndpointAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint without authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneHttpEndpoint(System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint without authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneHttpEndpointBasicAuthAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Http Basic authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="username">HTTP Basic Username</param>
            <param name="password">HTTP Basic Password</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneHttpEndpointBasicAuthAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Http Basic authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="username">HTTP Basic Username</param>
            <param name="password">HTTP Basic Password</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneHttpEndpointBearerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Bearer authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token">Bearer token</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.CloneHttpEndpointBearerAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Bearer authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token">Bearer token</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint.
            </summary>
            <param name="endpoint">the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint.
            </summary>
            <param name="endpointId">ID of the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint.
            </summary>
            <param name="label">label to add</param>
            <param name="endpoint">the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint.
            </summary>
            <param name="labelId">the ID of label to add</param>
            <param name="endpointId">the ID of the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification endpoint.
            </summary>
            <param name="label">the label to delete</param>
            <param name="endpoint">the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationEndpointsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification endpoint.
            </summary>
            <param name="labelId">the label id to delete</param>
            <param name="endpointId">ID of the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CreateSlackEndpointAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new Slack notification endpoint. The 'url' should be defined.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">Slack WebHook URL</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Slack notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CreateSlackEndpointAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
             Add new Slack notification endpoint. The 'url' should be defined.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">Slack WebHook URL</param>
            <param name="token">Slack WebHook Token</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Slack notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CreatePagerDutyEndpointAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new PagerDuty notification endpoint.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="clientUrl">Client URL</param>
            <param name="routingKey">Routing Key</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created PagerDuty notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CreateHttpEndpointAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum,System.String,System.Threading.CancellationToken)">
            <summary>
            Add new HTTP notification endpoint without authentication.
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">URL</param>
            <param name="method">HTTP Method</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created HTTP notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CreateHttpEndpointBasicAuthAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">URL</param>
            <param name="method">HTTP Method</param>
            <param name="username">HTTP Basic Username</param>
            <param name="password">HTTP Basic Password</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created HTTP notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CreateHttpEndpointBearerAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint.MethodEnum,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="name">Endpoint name</param>
            <param name="url">URL</param>
            <param name="method">HTTP Method</param>
            <param name="token">Bearer token</param>
            <param name="orgId">Owner of an endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created HTTP notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CreateEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add new notification endpoint.
            </summary>
            <param name="notificationEndpoint">notificationEndpoint to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint created</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.UpdateEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint. The updates is used for fields from <see cref="T:InfluxDB.Client.Api.Domain.NotificationEndpointUpdate"/>.
            </summary>
            <param name="notificationEndpoint">update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.UpdateEndpointAsync(System.String,InfluxDB.Client.Api.Domain.NotificationEndpointUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a notification endpoint.
            </summary>
            <param name="endpointId">ID of notification endpoint</param>
            <param name="notificationEndpointUpdate">update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.DeleteNotificationEndpointAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint.
            </summary>
            <param name="notificationEndpoint">notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.DeleteNotificationEndpointAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification endpoint.
            </summary>
            <param name="endpointId">ID of notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.FindNotificationEndpointsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get notification endpoints.
            </summary>
            <param name="orgId">only show notification endpoints belonging to specified organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.FindNotificationEndpointsAsync(System.String,InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            Get all notification endpoints.
            </summary>
            <param name="orgId">only show notification endpoints belonging to specified organization</param>
            <param name="findOptions">the find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.FindNotificationEndpointByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a notification endpoint.
            </summary>
            <param name="endpointId">ID of notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the notification endpoint requested</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneSlackEndpointAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Slack Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token">Slack WebHook Token</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneSlackEndpointAsync(System.String,System.String,InfluxDB.Client.Api.Domain.SlackNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Slack Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token"></param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.ClonePagerDutyEndpointAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a PagerDuty Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="routingKey">Routing Key</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.ClonePagerDutyEndpointAsync(System.String,System.String,InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a PagerDuty Notification endpoint.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="routingKey">Routing Key</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneHttpEndpointAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint without authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneHttpEndpoint(System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint without authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneHttpEndpointBasicAuthAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Http Basic authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="username">HTTP Basic Username</param>
            <param name="password">HTTP Basic Password</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneHttpEndpointBasicAuthAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Http Basic authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="username">HTTP Basic Username</param>
            <param name="password">HTTP Basic Password</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneHttpEndpointBearerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Bearer authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token">Bearer token</param>
            <param name="endpointId">ID of endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.CloneHttpEndpointBearerAsync(System.String,System.String,InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Clone a Http Notification endpoint with Bearer authentication.
            </summary>
            <param name="name">name of cloned endpoint</param>
            <param name="token">Bearer token</param>
            <param name="endpoint">endpoint to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification endpoint cloned</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint.
            </summary>
            <param name="endpoint">the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification endpoint.
            </summary>
            <param name="endpointId">ID of the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a notification endpoint</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint.
            </summary>
            <param name="label">label to add</param>
            <param name="endpoint">the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification endpoint.
            </summary>
            <param name="labelId">the ID of label to add</param>
            <param name="endpointId">the ID of the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationEndpoint,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification endpoint.
            </summary>
            <param name="label">the label to delete</param>
            <param name="endpoint">the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationEndpointsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification endpoint.
            </summary>
            <param name="labelId">the label id to delete</param>
            <param name="endpointId">ID of the notification endpoint</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.CreateSlackRuleAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,InfluxDB.Client.Api.Domain.SlackNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a Slack notification rule.
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="messageTemplate">The template used to generate notification.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.CreateSlackRuleAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},InfluxDB.Client.Api.Domain.SlackNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a Slack notification rule.
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="messageTemplate">The template used to generate notification.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="tagRules">List of tag rules the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.CreatePagerDutyRuleAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a PagerDuty notification rule. 
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="messageTemplate">The template used to generate notification.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="tagRules">List of tag rules the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.CreateHttpRuleAsync(System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a HTTP notification rule.
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="tagRules">List of tag rules the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.CreateRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule.
            </summary>
            <param name="rule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.UpdateNotificationRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule.
            </summary>
            <param name="rule">Notification rule update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.UpdateNotificationRuleAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule.
            </summary>
            <param name="ruleId">The notification rule ID.</param>
            <param name="update">Notification rule update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.DeleteNotificationRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule.
            </summary>
            <param name="rule">The notification rule</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.DeleteNotificationRuleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule.
            </summary>
            <param name="ruleId">The notification rule ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.FindNotificationRuleByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a notification rule.
            </summary>
            <param name="ruleId">The notification rule ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The notification rule requested</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.FindNotificationRulesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get notification rules.
            </summary>
            <param name="orgId">Only show notification rules that belong to a specific organization ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of notification rules</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.FindNotificationRulesAsync(System.String,InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            Get all notification rules.
            </summary>
            <param name="orgId">Only show notification rules that belong to a specific organization ID.</param>
            <param name="findOptions">find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule.
            </summary>
            <param name="rule">The notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of all labels for a notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule
            </summary>
            <param name="ruleId"> The notification rule ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of all labels for a notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule.
            </summary>
            <param name="label">Label to add</param>
            <param name="rule">The notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The label was added to the notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule.
            </summary>
            <param name="labelId">Label to add</param>
            <param name="ruleId">The notification rule ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The label was added to the notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule.
            </summary>
            <param name="label">The label to delete.</param>
            <param name="rule">The notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.INotificationRulesApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule.
            </summary>
            <param name="labelId">The ID of the label to delete.</param>
            <param name="ruleId">The notification rule ID.</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.CreateSlackRuleAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,InfluxDB.Client.Api.Domain.SlackNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a Slack notification rule.
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="messageTemplate">The template used to generate notification.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.CreateSlackRuleAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},InfluxDB.Client.Api.Domain.SlackNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a Slack notification rule.
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="messageTemplate">The template used to generate notification.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="tagRules">List of tag rules the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.CreatePagerDutyRuleAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},InfluxDB.Client.Api.Domain.PagerDutyNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a PagerDuty notification rule. 
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="messageTemplate">The template used to generate notification.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="tagRules">List of tag rules the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.CreateHttpRuleAsync(System.String,System.String,InfluxDB.Client.Api.Domain.RuleStatusLevel,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TagRule},InfluxDB.Client.Api.Domain.HTTPNotificationEndpoint,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a HTTP notification rule.
            </summary>
            <param name="name">Human-readable name describing the notification rule.</param>
            <param name="every">The notification repetition interval.</param>
            <param name="status">Status rule the notification rule attempts to match.</param>
            <param name="tagRules">List of tag rules the notification rule attempts to match.</param>
            <param name="endpoint">The endpoint to use for notification.</param>
            <param name="orgId">The ID of the organization that owns this notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.CreateRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a notification rule.
            </summary>
            <param name="rule">Notification rule to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Notification rule created</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.UpdateNotificationRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule.
            </summary>
            <param name="rule">Notification rule update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.UpdateNotificationRuleAsync(System.String,InfluxDB.Client.Api.Domain.NotificationRuleUpdate,System.Threading.CancellationToken)">
            <summary>
            Update a notification rule.
            </summary>
            <param name="ruleId">The notification rule ID.</param>
            <param name="update">Notification rule update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.DeleteNotificationRuleAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule.
            </summary>
            <param name="rule">The notification rule</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.DeleteNotificationRuleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a notification rule.
            </summary>
            <param name="ruleId">The notification rule ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.FindNotificationRuleByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a notification rule.
            </summary>
            <param name="ruleId">The notification rule ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The notification rule requested</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.FindNotificationRulesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get notification rules.
            </summary>
            <param name="orgId">Only show notification rules that belong to a specific organization ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of notification rules</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.FindNotificationRulesAsync(System.String,InfluxDB.Client.Domain.FindOptions,System.Threading.CancellationToken)">
            <summary>
            Get all notification rules.
            </summary>
            <param name="orgId">Only show notification rules that belong to a specific organization ID.</param>
            <param name="findOptions">find options</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule.
            </summary>
            <param name="rule">The notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of all labels for a notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a notification rule
            </summary>
            <param name="ruleId"> The notification rule ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of all labels for a notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule.
            </summary>
            <param name="label">Label to add</param>
            <param name="rule">The notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The label was added to the notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a notification rule.
            </summary>
            <param name="labelId">Label to add</param>
            <param name="ruleId">The notification rule ID.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The label was added to the notification rule</returns>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.NotificationRule,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule.
            </summary>
            <param name="label">The label to delete.</param>
            <param name="rule">The notification rule.</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.NotificationRulesApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete label from a notification rule.
            </summary>
            <param name="labelId">The ID of the label to delete.</param>
            <param name="ruleId">The notification rule ID.</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.CreateOrganizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization and sets <see cref="P:InfluxDB.Client.Api.Domain.Organization.Id" /> with the new identifier.
            </summary>
            <param name="name"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.CreateOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization and sets <see cref="P:InfluxDB.Client.Api.Domain.Organization.Id" /> with the new identifier.
            </summary>
            <param name="organization">the organization to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.UpdateOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Update an organization.
            </summary>
            <param name="organization">organization update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteOrganizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization.
            </summary>
            <param name="orgId">ID of organization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Delete an organization.
            </summary>
            <param name="organization">organization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.CloneOrganizationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone an organization.
            </summary>
            <param name="clonedName">name of cloned organization</param>
            <param name="orgId">ID of organization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.CloneOrganizationAsync(System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Clone an organization.
            </summary>
            <param name="clonedName">name of cloned organization</param>
            <param name="organization">organization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.FindOrganizationByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization.
            </summary>
            <param name="orgId">ID of organization to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>organization details</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.FindOrganizationsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations.
            </summary>
            <param name="limit"> (optional, default to 20)</param>
            <param name="offset"> (optional)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.GetSecretsAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List of secret keys the are stored for Organization. For example:
            <code>
            github_api_key,
            some_other_key,
            a_secret_key
            </code>
            </summary>
            <param name="organization">the organization for get secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the secret keys</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.GetSecretsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List of secret keys the are stored for Organization. For example:
            <code>
            github_api_key,
            some_other_key,
            a_secret_key
            </code>
            </summary>
            <param name="orgId">the organization for get secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the secret keys</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.PutSecretsAsync(System.Collections.Generic.Dictionary{System.String,System.String},InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Patches all provided secrets and updates any previous values.
            </summary>
            <param name="secrets">secrets to update/add</param>
            <param name="organization">the organization for put secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.PutSecretsAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Patches all provided secrets and updates any previous values.
            </summary>
            <param name="secrets">secrets to update/add</param>
            <param name="orgId">the organization for put secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteSecretsAsync(System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Delete provided secrets.
            </summary>
            <param name="secrets">secrets to delete</param>
            <param name="organization">the organization for delete secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>keys successfully patched</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteSecretsAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Delete provided secrets.
            </summary>
            <param name="secrets">secrets to delete</param>
            <param name="orgId">the organization for delete secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>keys successfully patched</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteSecretsAsync(InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete provided secrets.
            </summary>
            <param name="secrets">secrets to delete</param>
            <param name="orgId">the organization for delete secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>keys successfully patched</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization.
            </summary>
            <param name="organization">organization of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization.
            </summary>
            <param name="orgId">ID of organization to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Add organization member.
            </summary>
            <param name="member">the member of an organization</param>
            <param name="organization">the organization of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add organization member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Removes a member from an organization.
            </summary>
            <param name="member">the member of an organization</param>
            <param name="organization">the organization of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from an organization.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization.
            </summary>
            <param name="organization">organization of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization.
            </summary>
            <param name="orgId">ID of organization to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Add organization owner.
            </summary>
            <param name="owner">the owner of an organization</param>
            <param name="organization">the organization of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add organization owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from an organization.
            </summary>
            <param name="owner">the owner of an organization</param>
            <param name="organization">the organization of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IOrganizationsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from an organization.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.CreateOrganizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization and sets <see cref="P:InfluxDB.Client.Api.Domain.Organization.Id" /> with the new identifier.
            </summary>
            <param name="name"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.CreateOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization and sets <see cref="P:InfluxDB.Client.Api.Domain.Organization.Id" /> with the new identifier.
            </summary>
            <param name="organization">the organization to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.UpdateOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Update an organization.
            </summary>
            <param name="organization">organization update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteOrganizationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an organization.
            </summary>
            <param name="orgId">ID of organization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Delete an organization.
            </summary>
            <param name="organization">organization to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.CloneOrganizationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone an organization.
            </summary>
            <param name="clonedName">name of cloned organization</param>
            <param name="orgId">ID of organization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.CloneOrganizationAsync(System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Clone an organization.
            </summary>
            <param name="clonedName">name of cloned organization</param>
            <param name="organization">organization to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.FindOrganizationByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an organization.
            </summary>
            <param name="orgId">ID of organization to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>organization details</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.FindOrganizationsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all organizations.
            </summary>
            <param name="limit"> (optional, default to 20)</param>
            <param name="offset"> (optional)</param>
            <param name="descending"> (optional, default to false)</param>
            <param name="org">Filter organizations to a specific organization name. (optional)</param>
            <param name="orgID">Filter organizations to a specific organization ID. (optional)</param>
            <param name="userID">Filter organizations to a specific user ID. (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all organizations</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.GetSecretsAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List of secret keys the are stored for Organization. For example:
            <code>
            github_api_key,
            some_other_key,
            a_secret_key
            </code>
            </summary>
            <param name="organization">the organization for get secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the secret keys</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.GetSecretsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List of secret keys the are stored for Organization. For example:
            <code>
            github_api_key,
            some_other_key,
            a_secret_key
            </code>
            </summary>
            <param name="orgId">the organization for get secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the secret keys</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.PutSecretsAsync(System.Collections.Generic.Dictionary{System.String,System.String},InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Patches all provided secrets and updates any previous values.
            </summary>
            <param name="secrets">secrets to update/add</param>
            <param name="organization">the organization for put secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.PutSecretsAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Patches all provided secrets and updates any previous values.
            </summary>
            <param name="secrets">secrets to update/add</param>
            <param name="orgId">the organization for put secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteSecretsAsync(System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Delete provided secrets.
            </summary>
            <param name="secrets">secrets to delete</param>
            <param name="organization">the organization for delete secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>keys successfully patched</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteSecretsAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Delete provided secrets.
            </summary>
            <param name="secrets">secrets to delete</param>
            <param name="orgId">the organization for delete secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>keys successfully patched</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteSecretsAsync(InfluxDB.Client.Api.Domain.SecretKeys,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete provided secrets.
            </summary>
            <param name="secrets">secrets to delete</param>
            <param name="orgId">the organization for delete secrets</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>keys successfully patched</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization.
            </summary>
            <param name="organization">organization of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of an organization.
            </summary>
            <param name="orgId">ID of organization to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Add organization member.
            </summary>
            <param name="member">the member of an organization</param>
            <param name="organization">the organization of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add organization member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Removes a member from an organization.
            </summary>
            <param name="member">the member of an organization</param>
            <param name="organization">the organization of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from an organization.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization.
            </summary>
            <param name="organization">organization of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of an organization.
            </summary>
            <param name="orgId">ID of organization to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of an organization</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Add organization owner.
            </summary>
            <param name="owner">the owner of an organization</param>
            <param name="organization">the organization of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add organization owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from an organization.
            </summary>
            <param name="owner">the owner of an organization</param>
            <param name="organization">the organization of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.OrganizationsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from an organization.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="orgId">the ID of an organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync``1(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync``1(System.String,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync``1(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync``1(System.String,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(System.String,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxRecord"/>
            to <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the FluxRecord result</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxRecord"/>
            to <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the FluxRecord result</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync``1(System.String,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync``1(InfluxDB.Client.Api.Domain.Query,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(System.String,System.Type,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
            to list of object with given type.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="org">the organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.Type,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
            to list of object with given type.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="org">the organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(System.String,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsyncEnumerable``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously maps
            response to enumerable of objects of type <typeparamref name="T"/>.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">cancellation token</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryAsyncEnumerable``1(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously maps
            response to enumerable of objects of type <typeparamref name="T"/>. 
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">cancellation token</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryRawAsync(System.String,InfluxDB.Client.Api.Domain.Dialect,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB and synchronously map whole response to <see cref="T:System.String"/> result.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryRawAsync(System.String,System.Action{System.String},InfluxDB.Client.Api.Domain.Dialect,System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="dialect">Dialect is an object defining the options to use when encoding the response. <a href="http://bit.ly/flux-dialect">See dialect SPEC.</a></param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>the raw response that matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryRawAsync(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB and synchronously map whole response to <see cref="T:System.String"/> result.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryRawAsync(InfluxDB.Client.Api.Domain.Query,System.Action{System.String},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>the raw response that matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryRawAsync(System.String,System.Action{System.String},InfluxDB.Client.Api.Domain.Dialect,System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream response
            (line by line) to <see cref="!:onResponse"/>.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onResponse">the callback to consume the response line by line</param>
            <param name="dialect">Dialect is an object defining the options to use when encoding the response. <a href="http://bit.ly/flux-dialect">See dialect SPEC.</a></param>
            <param name="onError">callback to consume any error notification</param>
            <param name="onComplete">callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApi.QueryRawAsync(InfluxDB.Client.Api.Domain.Query,System.Action{System.String},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream response
            (line by line) to <see cref="!:onResponse"/>.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onResponse">the callback to consume the response line by line</param>
            <param name="onError">callback to consume any error notification</param>
            <param name="onComplete">callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync``1(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync``1(System.String,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync``1(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync``1(System.String,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
             for large data streaming.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsyncEnumerable``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously maps
            response to enumerable of objects of type <typeparamref name="T"/>.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">cancellation token</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsyncEnumerable``1(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously maps
            response to enumerable of objects of type <typeparamref name="T"/>. 
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">cancellation token</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxRecord"/>
            to <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the FluxRecord result</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.Action{InfluxDB.Client.Core.Flux.Domain.FluxRecord},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxRecord"/>
            to <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the FluxRecord result</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync``1(System.String,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync``1(InfluxDB.Client.Api.Domain.Query,System.Action{``0},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <typeparam name="T">the type of measurement</typeparam>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Type,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
            to list of object with given type.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="org">the organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.Type,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
            to list of object with given type.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="org">the organization</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryAsync(InfluxDB.Client.Api.Domain.Query,System.Type,System.Action{System.Object},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream Measurements
            to a <see cref="!:onNext"/> consumer.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="pocoType">the type of measurement</param>
            <param name="onNext">the callback to consume the mapped Measurements</param>
            <param name="onError">the callback to consume any error notification</param>
            <param name="onComplete">the callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryRawAsync(System.String,InfluxDB.Client.Api.Domain.Dialect,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB and synchronously map whole response to <see cref="T:System.String"/> result.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryRawAsync(System.String,System.Action{System.String},InfluxDB.Client.Api.Domain.Dialect,System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="dialect">Dialect is an object defining the options to use when encoding the response. <a href="http://bit.ly/flux-dialect">See dialect SPEC.</a></param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>the raw response that matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryRawAsync(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB and synchronously map whole response to <see cref="T:System.String"/> result.
            
            <para>
            NOTE: This method is not intended for large query results.
            Use <see cref="M:InfluxDB.Client.QueryApi.QueryRawAsync(InfluxDB.Client.Api.Domain.Query,System.Action{System.String},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)"/>
            for large data streaming.
            </para>
            
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>the raw response that matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryRawAsync(System.String,System.Action{System.String},InfluxDB.Client.Api.Domain.Dialect,System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream response
            (line by line) to <see cref="!:onResponse"/>.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onResponse">the callback to consume the response line by line</param>
            <param name="dialect">Dialect is an object defining the options to use when encoding the response. <a href="http://bit.ly/flux-dialect">See dialect SPEC.</a></param>
            <param name="onError">callback to consume any error notification</param>
            <param name="onComplete">callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApi.QueryRawAsync(InfluxDB.Client.Api.Domain.Query,System.Action{System.String},System.Action{System.Exception},System.Action,System.String,System.Threading.CancellationToken)">
            <summary>
            Executes the Flux query against the InfluxDB 2.x and asynchronously stream response
            (line by line) to <see cref="!:onResponse"/>.
            </summary>
            <param name="query">the flux query to execute</param>
            <param name="onResponse">the callback to consume the response line by line</param>
            <param name="onError">callback to consume any error notification</param>
            <param name="onComplete">callback to consume a notification about successfully end of stream</param>
            <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApiSync.QuerySync``1(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApiSync.QuerySync``1(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApiSync.QuerySync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IQueryApiSync.QuerySync(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="T:InfluxDB.Client.QueryApiSync">
             <summary>
             The synchronous version of QueryApi.
            
             The client uses <see cref="T:System.Net.Http.HttpClient"/> to send the request and parse responses to InfluxDB 2.0.
             The `HttpClient` is supposed to use maximus size of the body to int.MaxValue. 
             If you want to query large data, use <see cref="M:InfluxDB.Client.QueryApi.QueryAsync(System.String,System.String,System.Threading.CancellationToken)"/> method.
             </summary>
        </member>
        <member name="M:InfluxDB.Client.QueryApiSync.QuerySync``1(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApiSync.QuerySync``1(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to list of object with given type.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <typeparam name="T">the type of measurement</typeparam>
             <returns>Measurements which are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApiSync.QuerySync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.QueryApiSync.QuerySync(InfluxDB.Client.Api.Domain.Query,System.String,System.Threading.CancellationToken)">
             <summary>
             Executes the Flux query against the InfluxDB 2.x and synchronously map whole response
             to <see cref="T:InfluxDB.Client.Core.Flux.Domain.FluxTable"/>s.
            
             <para>
             NOTE: This method is not intended for large query results.
             </para>
             </summary>
             <param name="query">the flux query to execute</param>
             <param name="org">specifies the source organization. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
             <param name="cancellationToken">Token that enables callers to cancel the request.</param>
             <returns>FluxTables that are matched the query</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.CreateScraperTargetAsync(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new ScraperTarget and sets <see cref="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Id" /> with the new identifier.
            </summary>
            <param name="scraperTargetRequest">the scraper to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.CreateScraperTargetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new ScraperTarget and sets <see cref="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Id" /> with the new identifier.
            </summary>
            <param name="name">the name of the new ScraperTarget</param>
            <param name="url">the url of the new ScraperTarget</param>
            <param name="bucketId">the id of the bucket that its use to writes</param>
            <param name="orgId">the id of the organization that owns new ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.UpdateScraperTargetAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Update a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.UpdateScraperTargetAsync(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Update a ScraperTarget.
            </summary>
            <param name="scraperTargetId">id of the scraper target (required)</param>
            <param name="scraperTargetRequest">ScraperTargetRequest update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteScraperTargetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of ScraperTarget to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>scraper target deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteScraperTargetAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Delete a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>scraper target deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.CloneScraperTargetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a ScraperTarget.
            </summary>
            <param name="clonedName">name of cloned ScraperTarget</param>
            <param name="scraperTargetId">ID of ScraperTarget to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.CloneScraperTargetAsync(System.String,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Clone a ScraperTarget.
            </summary>
            <param name="clonedName">name of cloned ScraperTarget</param>
            <param name="scraperTargetResponse">ScraperTarget to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.FindScraperTargetByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of ScraperTarget to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ScraperTarget details</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.FindScraperTargetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get all ScraperTargets.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of ScraperTargets</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.FindScraperTargetsByOrgAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Get all ScraperTargets.
            </summary>
            <param name="organization">specifies the organization of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of ScraperTargets</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.FindScraperTargetsByOrgIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all ScraperTargets.
            </summary>
            <param name="orgId">specifies the organization ID of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of ScraperTargets</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            List all members of a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of ScraperTarget to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget member.
            </summary>
            <param name="member">the member of a scraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="scraperTargetId">the ID of a scraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a ScraperTarget.
            </summary>
            <param name="member">the member of a ScraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a ScraperTarget.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            List all owners of a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of a ScraperTarget to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a scraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget owner.
            </summary>
            <param name="owner">the owner of a ScraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a ScraperTarget.
            </summary>
            <param name="owner">the owner of a scraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a ScraperTarget.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            List all labels of a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">a ScraperTarget of the labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels of a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of a ScraperTarget to get labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget label.
            </summary>
            <param name="label">the label of a ScraperTarget</param>
            <param name="scraperTargetResponse">a ScraperTarget of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget label.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a ScraperTarget.
            </summary>
            <param name="label">the label of a ScraperTarget</param>
            <param name="scraperTargetResponse">a ScraperTarget of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IScraperTargetsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a ScraperTarget.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.CreateScraperTargetAsync(InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new ScraperTarget and sets <see cref="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Id" /> with the new identifier.
            </summary>
            <param name="scraperTargetRequest">the scraper to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.CreateScraperTargetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new ScraperTarget and sets <see cref="P:InfluxDB.Client.Api.Domain.ScraperTargetResponse.Id" /> with the new identifier.
            </summary>
            <param name="name">the name of the new ScraperTarget</param>
            <param name="url">the url of the new ScraperTarget</param>
            <param name="bucketId">the id of the bucket that its use to writes</param>
            <param name="orgId">the id of the organization that owns new ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.UpdateScraperTargetAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Update a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.UpdateScraperTargetAsync(System.String,InfluxDB.Client.Api.Domain.ScraperTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Update a ScraperTarget.
            </summary>
            <param name="scraperTargetId">id of the scraper target (required)</param>
            <param name="scraperTargetRequest">ScraperTargetRequest update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteScraperTargetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of ScraperTarget to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>scraper target deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteScraperTargetAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Delete a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>scraper target deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.CloneScraperTargetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a ScraperTarget.
            </summary>
            <param name="clonedName">name of cloned ScraperTarget</param>
            <param name="scraperTargetId">ID of ScraperTarget to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.CloneScraperTargetAsync(System.String,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Clone a ScraperTarget.
            </summary>
            <param name="clonedName">name of cloned ScraperTarget</param>
            <param name="scraperTargetResponse">ScraperTarget to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.FindScraperTargetByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of ScraperTarget to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>ScraperTarget details</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.FindScraperTargetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get all ScraperTargets.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of ScraperTargets</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.FindScraperTargetsByOrgAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Get all ScraperTargets.
            </summary>
            <param name="organization">specifies the organization of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of ScraperTargets</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.FindScraperTargetsByOrgIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all ScraperTargets.
            </summary>
            <param name="orgId">specifies the organization ID of the resource</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of ScraperTargets</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            List all members of a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of ScraperTarget to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget member.
            </summary>
            <param name="member">the member of a scraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="scraperTargetId">the ID of a scraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a ScraperTarget.
            </summary>
            <param name="member">the member of a ScraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a ScraperTarget.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            List all owners of a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">ScraperTarget of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of a ScraperTarget to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a scraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget owner.
            </summary>
            <param name="owner">the owner of a ScraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a ScraperTarget.
            </summary>
            <param name="owner">the owner of a scraperTarget</param>
            <param name="scraperTargetResponse">the ScraperTarget of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a ScraperTarget.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            List all labels of a ScraperTarget.
            </summary>
            <param name="scraperTargetResponse">a ScraperTarget of the labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels of a ScraperTarget.
            </summary>
            <param name="scraperTargetId">ID of a ScraperTarget to get labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a ScraperTarget</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget label.
            </summary>
            <param name="label">the label of a ScraperTarget</param>
            <param name="scraperTargetResponse">a ScraperTarget of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a ScraperTarget label.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.ScraperTargetResponse,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a ScraperTarget.
            </summary>
            <param name="label">the label of a ScraperTarget</param>
            <param name="scraperTargetResponse">a ScraperTarget of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ScraperTargetsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a ScraperTarget.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="scraperTargetId">the ID of a ScraperTarget</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.CreateSourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Creates a new Source and sets <see cref="P:InfluxDB.Client.Api.Domain.Source.Id" /> with the new identifier.
            </summary>
            <param name="source">source to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Source</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.UpdateSourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Update a Source.
            </summary>
            <param name="source">source update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated source</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.DeleteSourceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source.
            </summary>
            <param name="sourceId">ID of source to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.DeleteSourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Delete a source.
            </summary>
            <param name="source">source to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.CloneSourceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a source.
            </summary>
            <param name="clonedName">name of cloned source</param>
            <param name="sourceId">ID of source to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned source</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.CloneSourceAsync(System.String,InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Clone a source.
            </summary>
            <param name="clonedName">name of cloned source</param>
            <param name="source">source to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned source</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.FindSourceByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source.
            </summary>
            <param name="sourceId">ID of source to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>source details</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.FindSourcesAsync(System.Threading.CancellationToken)">
            <summary>
            Get all sources.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of sources</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.FindBucketsBySourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Get a sources buckets (will return dbrps in the form of buckets if it is a v1 source).
            </summary>
            <param name="source">filter buckets to a specific source</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The buckets for source. If source does not exist than return null.</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.FindBucketsBySourceIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a sources buckets (will return dbrps in the form of buckets if it is a v1 source).
            </summary>
            <param name="sourceId">filter buckets to a specific source ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The buckets for source. If source does not exist than return null.</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.HealthAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Get a sources health.
            </summary>
            <param name="source">source to check health</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>health of source</returns>
        </member>
        <member name="M:InfluxDB.Client.ISourcesApi.HealthAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a sources health.
            </summary>
            <param name="sourceId">source to check health</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>health of source</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.CreateSourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Creates a new Source and sets <see cref="P:InfluxDB.Client.Api.Domain.Source.Id" /> with the new identifier.
            </summary>
            <param name="source">source to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created Source</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.UpdateSourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Update a Source.
            </summary>
            <param name="source">source update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>updated source</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.DeleteSourceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a source.
            </summary>
            <param name="sourceId">ID of source to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.DeleteSourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Delete a source.
            </summary>
            <param name="source">source to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.CloneSourceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a source.
            </summary>
            <param name="clonedName">name of cloned source</param>
            <param name="sourceId">ID of source to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned source</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.CloneSourceAsync(System.String,InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Clone a source.
            </summary>
            <param name="clonedName">name of cloned source</param>
            <param name="source">source to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned source</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.FindSourceByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a source.
            </summary>
            <param name="sourceId">ID of source to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>source details</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.FindSourcesAsync(System.Threading.CancellationToken)">
            <summary>
            Get all sources.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of sources</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.FindBucketsBySourceAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Get a sources buckets (will return dbrps in the form of buckets if it is a v1 source).
            </summary>
            <param name="source">filter buckets to a specific source</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The buckets for source. If source does not exist than return null.</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.FindBucketsBySourceIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a sources buckets (will return dbrps in the form of buckets if it is a v1 source).
            </summary>
            <param name="sourceId">filter buckets to a specific source ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The buckets for source. If source does not exist than return null.</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.HealthAsync(InfluxDB.Client.Api.Domain.Source,System.Threading.CancellationToken)">
            <summary>
            Get a sources health.
            </summary>
            <param name="source">source to check health</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>health of source</returns>
        </member>
        <member name="M:InfluxDB.Client.SourcesApi.HealthAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a sources health.
            </summary>
            <param name="sourceId">source to check health</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>health of source</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CreateTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Creates a new task. The <see cref="T:InfluxDB.Client.Api.Domain.TaskType"/> has to have defined a cron or a every repetition
            by the <a href="http://bit.ly/option-statement">option statement</a>.
            <example>
                This sample shows how to specify every repetition
                <code>
            option task = {
            name: "mean",
            every: 1h,
            }
            
            from(bucket:"metrics/autogen")
            |&gt; range(start:-task.every)
            |&gt; group(columns:["level"])
            |&gt; mean()
            |&gt; yield(name:"mean")
            </code>
            </example>
            </summary>
            <param name="task">task to create (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CreateTaskAsync(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new task.
            </summary>
            <param name="taskCreateRequest">task to create (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CreateTaskCronAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by cron. The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is without a cron or a every
            repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="cron">a task repetition schedule in the form '* * * * * *'</param>
            <param name="organization">the organization that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CreateTaskCronAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by cron. The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is without a cron or a every
            repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="cron">a task repetition schedule in the form '* * * * * *'</param>
            <param name="orgId">the organization ID that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CreateTaskEveryAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by duration expression ("1h", "30s"). The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is
            without a cron or a every repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="every">a task repetition by duration expression</param>
            <param name="organization">the organization that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CreateTaskEveryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by duration expression ("1h", "30s"). The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is
            without a cron or a every repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="every">a task repetition by duration expression</param>
            <param name="orgId">the organization ID that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.UpdateTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Update a task. This will cancel all queued runs.
            </summary>
            <param name="task">task update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task updated</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.UpdateTaskAsync(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a task. This will cancel all queued runs.
            </summary>
            <param name="taskId">ID of task to get</param>
            <param name="request">task update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task updated</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteTaskAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task.
            </summary>
            <param name="taskId">ID of task to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Delete a task.
            </summary>
            <param name="task">task to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CloneTaskAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a task.
            </summary>
            <param name="taskId">ID of task to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CloneTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Clone a task.
            </summary>
            <param name="task">task to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.FindTaskByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task.
            </summary>
            <param name="taskId">ID of task to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task details</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.FindTasksByUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="user">filter tasks to a specific user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.FindTasksByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="userId">filter tasks to a specific user ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.FindTasksByOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="organization">filter tasks to a specific organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.FindTasksByOrganizationIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="orgId">filter tasks to a specific organization ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.FindTasksAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="afterId">returns tasks after specified ID</param>
            <param name="userId">filter tasks to a specific user ID</param>
            <param name="orgId">filter tasks to a specific organization ID</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetMembersAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            List all members of a task.
            </summary>
            <param name="task">task of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of a task.
            </summary>
            <param name="taskId">ID of task to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Add a task member.
            </summary>
            <param name="member">the member of a task</param>
            <param name="task">the task of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a task member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a task.
            </summary>
            <param name="member">the member of a task</param>
            <param name="task">the task of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a task.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task.
            </summary>
            <param name="task">task of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task.
            </summary>
            <param name="taskId">ID of a task to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Add a task owner.
            </summary>
            <param name="owner">the owner of a task</param>
            <param name="task">the task of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a task owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a task.
            </summary>
            <param name="owner">the owner of a task</param>
            <param name="task">the task of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a task.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetLogsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task.
            </summary>
            <param name="task">task to get logs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetLogsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task.
            </summary>
            <param name="taskId">ID of task to get logs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetRunsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="task"> task to get runs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetRunsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="task"> task to get runs for</param>
            <param name="afterTime">filter runs to those scheduled after this time</param>
            <param name="beforeTime">filter runs to those scheduled before this time</param>
            <param name="limit">the number of runs to return. Default value: 20.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetRunsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="taskId">ID of task to get runs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetRunsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="taskId">ID of task to get runs for</param>
            <param name="afterTime">filter runs to those scheduled after this time</param>
            <param name="beforeTime">filter runs to those scheduled before this time</param>
            <param name="limit">the number of runs to return. Default value: 20.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run record for a task.
            </summary>
            <param name="taskId">ID of task to get runs for</param>
            <param name="runId">ID of run</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a single run record for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.RetryRunAsync(InfluxDB.Client.Api.Domain.Run,System.Threading.CancellationToken)">
            <summary>
            Retry a task run.
            </summary>
            <param name="run">the run to retry</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the executed run</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.RetryRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run.
            </summary>
            <param name="taskId">ID of task with the run to retry</param>
            <param name="runId">ID of run to retry</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the executed run</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CancelRunAsync(InfluxDB.Client.Api.Domain.Run,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running run.
            </summary>
            <param name="run">the run to cancel</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.CancelRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running run.
            </summary>
            <param name="taskId">ID of task with the run to cancel</param>
            <param name="runId">ID of run to cancel</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetRunLogsAsync(InfluxDB.Client.Api.Domain.Run,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run.
            </summary>
            <param name="run">the run to gets logs for it</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a run</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetRunLogsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run.
            </summary>
            <param name="taskId">ID of task to get run logs for it</param>
            <param name="runId">ID of run to get logs for it</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a run</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            List all labels of a Task.
            </summary>
            <param name="task">a Task of the labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a Task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels of a Task.
            </summary>
            <param name="taskId">ID of a Task to get labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a Task</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Add a Task label.
            </summary>
            <param name="label">the label of a Task</param>
            <param name="task">a Task of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a Task label.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="taskId">the ID of a Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a Task.
            </summary>
            <param name="label">the label of a Task</param>
            <param name="task">a Task of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ITasksApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a Task.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="taskId">the ID of a Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CreateTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Creates a new task. The <see cref="T:InfluxDB.Client.Api.Domain.TaskType"/> has to have defined a cron or a every repetition
            by the <a href="http://bit.ly/option-statement">option statement</a>.
            <example>
                This sample shows how to specify every repetition
                <code>
            option task = {
            name: "mean",
            every: 1h,
            }
            
            from(bucket:"metrics/autogen")
            |&gt; range(start:-task.every)
            |&gt; group(columns:["level"])
            |&gt; mean()
            |&gt; yield(name:"mean")
            </code>
            </example>
            </summary>
            <param name="task">task to create (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CreateTaskAsync(InfluxDB.Client.Api.Domain.TaskCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new task.
            </summary>
            <param name="taskCreateRequest">task to create (required)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CreateTaskCronAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by cron. The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is without a cron or a every
            repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="cron">a task repetition schedule in the form '* * * * * *'</param>
            <param name="organization">the organization that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CreateTaskCronAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by cron. The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is without a cron or a every
            repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="cron">a task repetition schedule in the form '* * * * * *'</param>
            <param name="orgId">the organization ID that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CreateTaskEveryAsync(System.String,System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by duration expression ("1h", "30s"). The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is
            without a cron or a every repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="every">a task repetition by duration expression</param>
            <param name="organization">the organization that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CreateTaskEveryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new task with task repetition by duration expression ("1h", "30s"). The <see cref="P:InfluxDB.Client.Api.Domain.TaskType.Flux" /> is
            without a cron or a every repetition.
            The repetition is automatically append to the <a href="http://bit.ly/option-statement">option statement</a>.
            </summary>
            <param name="name">description of the task</param>
            <param name="flux">the Flux script to run for this task</param>
            <param name="every">a task repetition by duration expression</param>
            <param name="orgId">the organization ID that owns this Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.UpdateTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Update a task. This will cancel all queued runs.
            </summary>
            <param name="task">task update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task updated</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.UpdateTaskAsync(System.String,InfluxDB.Client.Api.Domain.TaskUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a task. This will cancel all queued runs.
            </summary>
            <param name="taskId">ID of task to get</param>
            <param name="request">task update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task updated</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteTaskAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a task.
            </summary>
            <param name="taskId">ID of task to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Delete a task.
            </summary>
            <param name="task">task to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task deleted</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CloneTaskAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a task.
            </summary>
            <param name="taskId">ID of task to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CloneTaskAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Clone a task.
            </summary>
            <param name="task">task to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.FindTaskByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a task.
            </summary>
            <param name="taskId">ID of task to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>task details</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.FindTasksByUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="user">filter tasks to a specific user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.FindTasksByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="userId">filter tasks to a specific user ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.FindTasksByOrganizationAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="organization">filter tasks to a specific organization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.FindTasksByOrganizationIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="orgId">filter tasks to a specific organization ID</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.FindTasksAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists tasks, limit 100.
            </summary>
            <param name="afterId">returns tasks after specified ID</param>
            <param name="userId">filter tasks to a specific user ID</param>
            <param name="orgId">filter tasks to a specific organization ID</param>
            <param name="org">Filter tasks to a specific organization name. (optional)</param>
            <param name="name">Returns task with a specific name. (optional)</param>
            <param name="limit">The number of tasks to return (optional, default to 100)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of tasks</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetMembersAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            List all members of a task.
            </summary>
            <param name="task">task of the members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all members of a task.
            </summary>
            <param name="taskId">ID of task to get members</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all members of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Add a task member.
            </summary>
            <param name="member">the member of a task</param>
            <param name="task">the task of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a task member.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a task.
            </summary>
            <param name="member">the member of a task</param>
            <param name="task">the task of a member</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a task.
            </summary>
            <param name="memberId">the ID of a member</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task.
            </summary>
            <param name="task">task of the owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a task.
            </summary>
            <param name="taskId">ID of a task to get owners</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all owners of a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Add a task owner.
            </summary>
            <param name="owner">the owner of a task</param>
            <param name="task">the task of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a task owner.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>created mapping</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a task.
            </summary>
            <param name="owner">the owner of a task</param>
            <param name="task">the task of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a owner from a task.
            </summary>
            <param name="ownerId">the ID of a owner</param>
            <param name="taskId">the ID of a task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetLogsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task.
            </summary>
            <param name="task">task to get logs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetLogsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a task.
            </summary>
            <param name="taskId">ID of task to get logs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetRunsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="task"> task to get runs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetRunsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="task"> task to get runs for</param>
            <param name="afterTime">filter runs to those scheduled after this time</param>
            <param name="beforeTime">filter runs to those scheduled before this time</param>
            <param name="limit">the number of runs to return. Default value: 20.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetRunsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="taskId">ID of task to get runs for</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetRunsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve list of run records for a task.
            </summary>
            <param name="taskId">ID of task to get runs for</param>
            <param name="afterTime">filter runs to those scheduled after this time</param>
            <param name="beforeTime">filter runs to those scheduled before this time</param>
            <param name="limit">the number of runs to return. Default value: 20.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of run records for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a single run record for a task.
            </summary>
            <param name="taskId">ID of task to get runs for</param>
            <param name="runId">ID of run</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a single run record for a task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.RetryRunAsync(InfluxDB.Client.Api.Domain.Run,System.Threading.CancellationToken)">
            <summary>
            Retry a task run.
            </summary>
            <param name="run">the run to retry</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the executed run</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.RetryRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retry a task run.
            </summary>
            <param name="taskId">ID of task with the run to retry</param>
            <param name="runId">ID of run to retry</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the executed run</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CancelRunAsync(InfluxDB.Client.Api.Domain.Run,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running run.
            </summary>
            <param name="run">the run to cancel</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.CancelRunAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running run.
            </summary>
            <param name="taskId">ID of task with the run to cancel</param>
            <param name="runId">ID of run to cancel</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetRunLogsAsync(InfluxDB.Client.Api.Domain.Run,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run.
            </summary>
            <param name="run">the run to gets logs for it</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a run</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetRunLogsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve all logs for a run.
            </summary>
            <param name="taskId">ID of task to get run logs for it</param>
            <param name="runId">ID of run to get logs for it</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the list of all logs for a run</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            List all labels of a Task.
            </summary>
            <param name="task">a Task of the labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a Task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels of a Task.
            </summary>
            <param name="taskId">ID of a Task to get labels</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>the List all labels of a Task</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Add a Task label.
            </summary>
            <param name="label">the label of a Task</param>
            <param name="task">a Task of a label</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a Task label.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="taskId">the ID of a Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.TaskType,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a Task.
            </summary>
            <param name="label">the label of a Task</param>
            <param name="task">a Task of a owner</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.TasksApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a label from a Task.
            </summary>
            <param name="labelId">the ID of a label</param>
            <param name="taskId">the ID of a Task</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateTelegrafAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="org">The organization that owns this config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateTelegrafAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="org">The organization that owns this config</param>
            <param name="agentConfiguration">The telegraf agent config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateTelegrafAsync(System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="orgId">The organization that owns this config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateTelegrafAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="orgId">The organization that owns this config</param>
            <param name="agentConfiguration">The telegraf agent config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateTelegrafAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.String,InfluxDB.Client.Api.Domain.TelegrafRequestMetadata,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="org">The organization that owns this config</param>
            <param name="config">ConfigTOML contains the raw toml config</param>
            <param name="metadata">Metadata for the config</param>
            <param name="plugins">Plugins to use.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateTelegrafAsync(System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TelegrafRequestMetadata,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="orgId">The organization that owns this config</param>
            <param name="config">ConfigTOML contains the raw toml config</param>
            <param name="metadata">Metadata for the config</param>
            <param name="plugins">Plugins to use.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateTelegrafAsync(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="telegrafRequest">Telegraf Configuration to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CreateAgentConfiguration">
            <summary>
            Created default Telegraf Agent configuration.
            <example>
            [agent]
               interval = "10s"
               round_interval = true
               metric_batch_size = 1000
               metric_buffer_limit = 10000
               collection_jitter = "0s"
               flush_jitter = "0s"
               precision = ""
               omit_hostname = false
            </example>
            </summary>
            <returns>default configuration</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.UpdateTelegrafAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Update a telegraf config.
            </summary>
            <param name="telegraf">telegraf config update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.UpdateTelegrafAsync(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.Threading.CancellationToken)">
            <summary>
            Update a telegraf config.
            </summary>
            <param name="telegrafId">ID of telegraf config</param>
            <param name="telegrafRequest">telegraf config update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteTelegrafAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Delete a telegraf config.
            </summary>
            <param name="telegraf">telegraf config to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteTelegrafAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a telegraf config.
            </summary>
            <param name="telegrafId">ID of telegraf config to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CloneTelegrafAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a telegraf config.
            </summary>
            <param name="clonedName">name of cloned telegraf config</param>
            <param name="telegrafId">ID of telegraf config to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.CloneTelegrafAsync(System.String,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Clone a telegraf config.
            </summary>
            <param name="clonedName">name of cloned telegraf config</param>
            <param name="telegraf">telegraf config to clone></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.FindTelegrafByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a telegraf config.
            </summary>
            <param name="telegrafId">ID of telegraf config to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config details</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.FindTelegrafsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of telegraf configs.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of telegraf configs</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.FindTelegrafsByOrgAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Returns a list of telegraf configs for specified organization.
            </summary>
            <param name="organization">specifies the organization of the telegraf configs</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of telegraf configs</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.FindTelegrafsByOrgIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of telegraf configs for specified organization.
            </summary>
            <param name="orgId">specifies the organization of the telegraf configs</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of telegraf configs</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetTOMLAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Retrieve a telegraf config in TOML.
            </summary>
            <param name="telegraf">telegraf config to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config details in TOML format</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetTOMLAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a telegraf config in TOML.
            </summary>
            <param name="telegrafId">ID of telegraf config to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config details in TOML format</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a telegraf config.
            </summary>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config members</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a telegraf config.
            </summary>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config members</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config member.
            </summary>
            <param name="member">user to add as member</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member added to telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config member.
            </summary>
            <param name="memberId">user ID to add as member</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member added to telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a telegraf config.
            </summary>
            <param name="member">member to remove</param>
            <param name="telegraf">the telegraf</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a telegraf config.
            </summary>
            <param name="memberId">ID of member to remove</param>
            <param name="telegrafId">ID of the telegraf</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            List all owners of a telegraf config.
            </summary>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config owners</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a telegraf config.
            </summary>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config owners</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config owner.
            </summary>
            <param name="owner">user to add as owner</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config owner added</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config owner.
            </summary>
            <param name="ownerId">ID of user to add as owner</param>
            <param name="telegrafId"> ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config owner added</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Removes an owner from a telegraf config.
            </summary>
            <param name="owner">owner to remove</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes an owner from a telegraf config.
            </summary>
            <param name="ownerId">ID of owner to remove</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            List all labels for a telegraf config.
            </summary>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a telegraf config.
            </summary>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Add a label to a telegraf config.
            </summary>
            <param name="label">label to add</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a telegraf config.
            </summary>
            <param name="labelId">ID of label to add</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a telegraf config.
            </summary>
            <param name="label">label to delete</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.ITelegrafsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a telegraf config.
            </summary>
            <param name="labelId">ID of label to delete</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="T:InfluxDB.Client.TelegrafsApi">
            <summary>
            The client of the InfluxDB 2.x that implement Telegrafs HTTP API endpoint.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateTelegrafAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="org">The organization that owns this config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateTelegrafAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="org">The organization that owns this config</param>
            <param name="agentConfiguration">The telegraf agent config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateTelegrafAsync(System.String,System.String,System.String,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="orgId">The organization that owns this config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateTelegrafAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPlugin},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="orgId">The organization that owns this config</param>
            <param name="agentConfiguration">The telegraf agent config</param>
            <param name="plugins">The telegraf plugins config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateTelegrafAsync(System.String,System.String,InfluxDB.Client.Api.Domain.Organization,System.String,InfluxDB.Client.Api.Domain.TelegrafRequestMetadata,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="org">The organization that owns this config</param>
            <param name="config">ConfigTOML contains the raw toml config</param>
            <param name="metadata">Metadata for the config</param>
            <param name="plugins">Plugins to use.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateTelegrafAsync(System.String,System.String,System.String,System.String,InfluxDB.Client.Api.Domain.TelegrafRequestMetadata,System.Collections.Generic.List{InfluxDB.Client.Api.Domain.TelegrafPluginRequestPlugins},System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="name">Telegraf Configuration Name</param>
            <param name="description">Telegraf Configuration Description</param>
            <param name="orgId">The organization that owns this config</param>
            <param name="config">ConfigTOML contains the raw toml config</param>
            <param name="metadata">Metadata for the config</param>
            <param name="plugins">Plugins to use.</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateTelegrafAsync(InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.Threading.CancellationToken)">
            <summary>
            Create a telegraf config.
            </summary>
            <param name="telegrafRequest">Telegraf Configuration to create</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Telegraf config created</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CreateAgentConfiguration">
            <summary>
            Created default Telegraf Agent configuration.
            <example>
            [agent]
               interval = "10s"
               round_interval = true
               metric_batch_size = 1000
               metric_buffer_limit = 10000
               collection_jitter = "0s"
               flush_jitter = "0s"
               precision = ""
               omit_hostname = false
            </example>
            </summary>
            <returns>default configuration</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.UpdateTelegrafAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Update a telegraf config.
            </summary>
            <param name="telegraf">telegraf config update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.UpdateTelegrafAsync(System.String,InfluxDB.Client.Api.Domain.TelegrafPluginRequest,System.Threading.CancellationToken)">
            <summary>
            Update a telegraf config.
            </summary>
            <param name="telegrafId">ID of telegraf config</param>
            <param name="telegrafRequest">telegraf config update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>An updated telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteTelegrafAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Delete a telegraf config.
            </summary>
            <param name="telegraf">telegraf config to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteTelegrafAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a telegraf config.
            </summary>
            <param name="telegrafId">ID of telegraf config to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CloneTelegrafAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone a telegraf config.
            </summary>
            <param name="clonedName">name of cloned telegraf config</param>
            <param name="telegrafId">ID of telegraf config to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.CloneTelegrafAsync(System.String,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Clone a telegraf config.
            </summary>
            <param name="clonedName">name of cloned telegraf config</param>
            <param name="telegraf">telegraf config to clone></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.FindTelegrafByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a telegraf config.
            </summary>
            <param name="telegrafId">ID of telegraf config to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config details</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.FindTelegrafsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of telegraf configs.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of telegraf configs</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.FindTelegrafsByOrgAsync(InfluxDB.Client.Api.Domain.Organization,System.Threading.CancellationToken)">
            <summary>
            Returns a list of telegraf configs for specified organization.
            </summary>
            <param name="organization">specifies the organization of the telegraf configs</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of telegraf configs</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.FindTelegrafsByOrgIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of telegraf configs for specified organization.
            </summary>
            <param name="orgId">specifies the organization of the telegraf configs</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A list of telegraf configs</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetTOMLAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Retrieve a telegraf config in TOML.
            </summary>
            <param name="telegraf">telegraf config to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config details in TOML format</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetTOMLAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a telegraf config in TOML.
            </summary>
            <param name="telegrafId">ID of telegraf config to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config details in TOML format</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetMembersAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a telegraf config.
            </summary>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config members</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetMembersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all users with member privileges for a telegraf config.
            </summary>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config members</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.AddMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config member.
            </summary>
            <param name="member">user to add as member</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member added to telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.AddMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config member.
            </summary>
            <param name="memberId">user ID to add as member</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member added to telegraf</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteMemberAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a telegraf config.
            </summary>
            <param name="member">member to remove</param>
            <param name="telegraf">the telegraf</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteMemberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a telegraf config.
            </summary>
            <param name="memberId">ID of member to remove</param>
            <param name="telegrafId">ID of the telegraf</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>member removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetOwnersAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            List all owners of a telegraf config.
            </summary>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config owners</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetOwnersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all owners of a telegraf config.
            </summary>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of telegraf config owners</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.AddOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config owner.
            </summary>
            <param name="owner">user to add as owner</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config owner added</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.AddOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add telegraf config owner.
            </summary>
            <param name="ownerId">ID of user to add as owner</param>
            <param name="telegrafId"> ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>telegraf config owner added</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteOwnerAsync(InfluxDB.Client.Api.Domain.User,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Removes an owner from a telegraf config.
            </summary>
            <param name="owner">owner to remove</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteOwnerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes an owner from a telegraf config.
            </summary>
            <param name="ownerId">ID of owner to remove</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>owner removed</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetLabelsAsync(InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            List all labels for a telegraf config.
            </summary>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.GetLabelsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List all labels for a telegraf config.
            </summary>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>a list of all labels for a telegraf config</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.AddLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Add a label to a telegraf config.
            </summary>
            <param name="label">label to add</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.AddLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a label to a telegraf config.
            </summary>
            <param name="labelId">ID of label to add</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>added label</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteLabelAsync(InfluxDB.Client.Api.Domain.Label,InfluxDB.Client.Api.Domain.Telegraf,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a telegraf config.
            </summary>
            <param name="label">label to delete</param>
            <param name="telegraf">the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.TelegrafsApi.DeleteLabelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a label from a telegraf config.
            </summary>
            <param name="labelId">ID of label to delete</param>
            <param name="telegrafId">ID of the telegraf config</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>delete has been accepted</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.CreateUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new user and sets <see cref="P:InfluxDB.Client.Api.Domain.User.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created user</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.CreateUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Creates a new user and sets <see cref="P:InfluxDB.Client.Api.Domain.User.Id" /> with the new identifier.
            </summary>
            <param name="user">name of the user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created user</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.UpdateUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Update an user.
            </summary>
            <param name="user">user update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>user updated</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.UpdateUserPasswordAsync(InfluxDB.Client.Api.Domain.User,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update password to an user.
            </summary>
            <param name="user">user to update password</param>
            <param name="oldPassword">old password</param>
            <param name="newPassword">new password</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>user updated</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.UpdateUserPasswordAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update password to an user.
            </summary>
            <param name="userId">ID of user to update password</param>
            <param name="oldPassword">old password</param>
            <param name="newPassword">new password</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>user updated</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.DeleteUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an user.
            </summary>
            <param name="userId">ID of user to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.DeleteUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Delete an user.
            </summary>
            <param name="user">user to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.CloneUserAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone an user.
            </summary>
            <param name="clonedName">name of cloned user</param>
            <param name="userId">ID of user to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned user</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.CloneUserAsync(System.String,InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Clone an user.
            </summary>
            <param name="clonedName">name of cloned user</param>
            <param name="user">user to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned user</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.MeAsync(System.Threading.CancellationToken)">
            <summary>
            Returns currently authenticated user.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>currently authenticated user</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.MeUpdatePasswordAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the password to a currently authenticated user.
            </summary>
            <param name="oldPassword">old password</param>
            <param name="newPassword">new password</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>currently authenticated user</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.FindUserByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an user.
            </summary>
            <param name="userId">ID of user to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>User Details</returns>
        </member>
        <member name="M:InfluxDB.Client.IUsersApi.FindUsersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users.
            </summary>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">The last resource ID from which to seek from (but not including). This is to be used instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all users</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.CreateUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new user and sets <see cref="P:InfluxDB.Client.Api.Domain.User.Id" /> with the new identifier.
            </summary>
            <param name="name">name of the user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created user</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.CreateUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Creates a new user and sets <see cref="P:InfluxDB.Client.Api.Domain.User.Id" /> with the new identifier.
            </summary>
            <param name="user">name of the user</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Created user</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.UpdateUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Update an user.
            </summary>
            <param name="user">user update to apply</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>user updated</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.UpdateUserPasswordAsync(InfluxDB.Client.Api.Domain.User,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update password to an user.
            </summary>
            <param name="user">user to update password</param>
            <param name="oldPassword">old password</param>
            <param name="newPassword">new password</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>user updated</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.UpdateUserPasswordAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update password to an user.
            </summary>
            <param name="userId">ID of user to update password</param>
            <param name="oldPassword">old password</param>
            <param name="newPassword">new password</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>user updated</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.DeleteUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an user.
            </summary>
            <param name="userId">ID of user to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.DeleteUserAsync(InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Delete an user.
            </summary>
            <param name="user">user to delete</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>async task</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.CloneUserAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Clone an user.
            </summary>
            <param name="clonedName">name of cloned user</param>
            <param name="userId">ID of user to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned user</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.CloneUserAsync(System.String,InfluxDB.Client.Api.Domain.User,System.Threading.CancellationToken)">
            <summary>
            Clone an user.
            </summary>
            <param name="clonedName">name of cloned user</param>
            <param name="user">user to clone</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>cloned user</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.MeAsync(System.Threading.CancellationToken)">
            <summary>
            Returns currently authenticated user.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>currently authenticated user</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.MeUpdatePasswordAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update the password to a currently authenticated user.
            </summary>
            <param name="oldPassword">old password</param>
            <param name="newPassword">new password</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>currently authenticated user</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.FindUserByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an user.
            </summary>
            <param name="userId">ID of user to get</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>User Details</returns>
        </member>
        <member name="M:InfluxDB.Client.UsersApi.FindUsersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all users.
            </summary>
            <param name="offset"> (optional)</param>
            <param name="limit"> (optional, default to 20)</param>
            <param name="after">The last resource ID from which to seek from (but not including). This is to be used instead of &#x60;offset&#x60;. (optional)</param>
            <param name="name"> (optional)</param>
            <param name="id"> (optional)</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>List all users</returns>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WriteRecord(System.String,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Line Protocol record into specified bucket.
            </summary>
            <param name="record">
                specifies the record in InfluxDB Line Protocol.
                The <see cref="!:record" /> is considered as one batch unit.
            </param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WriteRecords(System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WriteRecords(System.String[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WritePoint(InfluxDB.Client.Writes.PointData,System.String,System.String)">
            <summary>
            Write a Data point into specified bucket.
            </summary>
            <param name="point">specifies the Data point to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WritePoints(System.Collections.Generic.List{InfluxDB.Client.Writes.PointData},System.String,System.String)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WritePoints(InfluxDB.Client.Writes.PointData[],System.String,System.String)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WriteMeasurement``1(``0,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write a Measurement into specified bucket.
            </summary>
            <param name="measurement">specifies the Measurement to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WriteMeasurements``1(System.Collections.Generic.List{``0},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.WriteMeasurements``1(``0[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.IWriteApi.Flush">
            <summary>
            Forces the client to flush all pending writes from the buffer to the InfluxDB via HTTP.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.ReleaseAndClose(System.Int32)">
            <summary>
            Release all resources and flush remaining data into database.
            </summary>
            <param name="millis">How much milliseconds wait to flush data.</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WriteRecord(System.String,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Line Protocol record into specified bucket.
            </summary>
            <param name="record">
                specifies the record in InfluxDB Line Protocol.
                The <see cref="!:record" /> is considered as one batch unit.
            </param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WriteRecords(System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WriteRecords(System.String[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WritePoint(InfluxDB.Client.Writes.PointData,System.String,System.String)">
            <summary>
            Write a Data point into specified bucket.
            </summary>
            <param name="point">specifies the Data point to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WritePoints(System.Collections.Generic.List{InfluxDB.Client.Writes.PointData},System.String,System.String)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WritePoints(InfluxDB.Client.Writes.PointData[],System.String,System.String)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WriteMeasurement``1(``0,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write a Measurement into specified bucket.
            </summary>
            <param name="measurement">specifies the Measurement to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WriteMeasurements``1(System.Collections.Generic.List{``0},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.WriteMeasurements``1(``0[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.WriteApi.Flush">
            <summary>
            Forces the client to flush all pending writes from the buffer to the InfluxDB via HTTP.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteRecordAsync(System.String,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocol record into specified bucket.
            </summary>
            <param name="record">specifies the record in InfluxDB Line Protocol. The <see cref="!:record" /> is considered as one batch unit. </param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteRecordsAsync(System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteRecordsAsync(System.String[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteRecordsAsyncWithIRestResponse(System.Collections.Generic.IEnumerable{System.String},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocols records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <returns>Write Task with IRestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WritePointAsync(InfluxDB.Client.Writes.PointData,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write a Data point into specified bucket.
            </summary>
            <param name="point">specifies the Data point to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WritePointsAsync(System.Collections.Generic.List{InfluxDB.Client.Writes.PointData},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WritePointsAsync(InfluxDB.Client.Writes.PointData[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WritePointsAsyncWithIRestResponse(System.Collections.Generic.IEnumerable{InfluxDB.Client.Writes.PointData},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes.
            If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />. </param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <returns>Write Tasks with IRestResponses.</returns>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteMeasurementAsync``1(``0,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write a Measurement into specified bucket.
            </summary>
            <param name="measurement">specifies the Measurement to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteMeasurementsAsync``1(System.Collections.Generic.List{``0},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteMeasurementsAsync``1(``0[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.IWriteApiAsync.WriteMeasurementsAsyncWithIRestResponse``1(System.Collections.Generic.IEnumerable{``0},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
            <returns>Write Task with IRestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteRecordAsync(System.String,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocol record into specified bucket.
            </summary>
            <param name="record">specifies the record in InfluxDB Line Protocol. The <see cref="!:record" /> is considered as one batch unit. </param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteRecordsAsync(System.Collections.Generic.List{System.String},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteRecordsAsync(System.String[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocol records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteRecordsAsyncWithIRestResponse(System.Collections.Generic.IEnumerable{System.String},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Line Protocols records into specified bucket.
            </summary>
            <param name="records">specifies the record in InfluxDB Line Protocol</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <returns>Write Task with IRestResponse</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WritePointAsync(InfluxDB.Client.Writes.PointData,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write a Data point into specified bucket.
            </summary>
            <param name="point">specifies the Data point to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WritePointsAsync(System.Collections.Generic.List{InfluxDB.Client.Writes.PointData},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WritePointsAsync(InfluxDB.Client.Writes.PointData[],System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WritePointsAsyncWithIRestResponse(System.Collections.Generic.IEnumerable{InfluxDB.Client.Writes.PointData},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Data points into specified bucket.
            </summary>
            <param name="points">specifies the Data points to write into bucket</param>
            <param name="bucket">specifies the destination bucket for writes.
            If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />. </param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <returns>Write Tasks with IRestResponses.</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteMeasurementAsync``1(``0,InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write a Measurement into specified bucket.
            </summary>
            <param name="measurement">specifies the Measurement to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteMeasurementsAsync``1(System.Collections.Generic.List{``0},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteMeasurementsAsync``1(``0[],InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
        </member>
        <member name="M:InfluxDB.Client.WriteApiAsync.WriteMeasurementsAsyncWithIRestResponse``1(System.Collections.Generic.IEnumerable{``0},InfluxDB.Client.Api.Domain.WritePrecision,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write Measurements into specified bucket.
            </summary>
            <param name="measurements">specifies Measurements to write into bucket</param>
            <param name="precision">specifies the precision for the unix timestamps within the body line-protocol; default Nanoseconds</param>
            <param name="bucket">specifies the destination bucket for writes. If the bucket is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Bucket" />.</param>
            <param name="org">specifies the destination organization for writes. If the org is not specified then is used config from <see cref="P:InfluxDB.Client.InfluxDBClientOptions.Org" />.</param>
            <param name="cancellationToken">specifies the token to monitor for cancellation requests</param>
            <typeparam name="TM">measurement type</typeparam>
            <returns>Write Task with IRestResponse</returns>
        </member>
        <member name="T:InfluxDB.Client.WriteOptions">
             <summary>
             WriteOptions are used to configure writes the data point into InfluxDB 2.x.
            
             <para>
            The default setting use the batching configured to (consistent with Telegraf):
             <list>
             <item><term>batchSize</term><description>1000</description></item>
             <item><term>flushInterval</term><description>1000 ms</description></item>
             <item><term>retryInterval</term><description>5000 ms</description></item>
             <item><term>jitterInterval</term><description>0</description></item>
             </list>
             </para>
            
             </summary>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.BatchSize">
            <summary>
            The number of data point to collect in batch.
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.BatchSize(System.Int32)"/>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.FlushInterval">
            <summary>
            The time to wait at most (milliseconds).
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.FlushInterval(System.Int32)"/>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.JitterInterval">
            <summary>
            The batch flush jitter interval value (milliseconds).
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.JitterInterval(System.Int32)"/>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.RetryInterval">
            <summary>
            The time to wait before retry unsuccessful write (milliseconds).
            <para>
            The retry interval is used when the InfluxDB server does not specify "Retry-After" header.
            </para>
            <para>
            Retry-After: A non-negative decimal integer indicating the seconds to delay after the response is received.
            </para>
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.RetryInterval(System.Int32)"/>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.MaxRetries">
            <summary>
            The number of max retries when write fails.
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.MaxRetries(System.Int32)"/>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.MaxRetryDelay">
            <summary>
            The maximum delay between each retry attempt in milliseconds.
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.MaxRetryDelay(System.Int32)"/>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.ExponentialBase">
            <summary>
            The base for the exponential retry delay.
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.ExponentialBase(System.Int32)"/>
        </member>
        <member name="P:InfluxDB.Client.WriteOptions.WriteScheduler">
            <summary>
            Set the scheduler which is used for write data points.
            </summary>
            <seealso cref="M:InfluxDB.Client.WriteOptions.Builder.WriteScheduler(System.Reactive.Concurrency.IScheduler)"/>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.#ctor">
            <summary>
            Create an instance of WriteOptions.
            <para>
            WriteOptions properties and their default values:
            <list type="bullet">
            <item>BatchSize:        1000</item>
            <item>FlushInterval:    1000(ms)</item>
            <item>JitterInterval:   0</item>
            <item>RetryInterval:    5000(ms)</item>
            <item>MaxRetries:       5</item>
            <item>MaxRetryDelay:    125_000</item>
            <item>ExponentialBase:  2</item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.CreateNew">
            <summary>
            Create a <see cref="T:InfluxDB.Client.WriteOptions"/> builder.
            </summary>
            <returns>builder</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.BatchSize(System.Int32)">
            <summary>
            Set the number of data point to collect in batch.
            </summary>
            <param name="batchSize">the number of data point to collect in batch</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.FlushInterval(System.Int32)">
            <summary>
            Set the time to wait at most (milliseconds).
            </summary>
            <param name="milliseconds">the time to wait at most (milliseconds).</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.JitterInterval(System.Int32)">
            <summary>
            Jitters the batch flush interval by a random amount.
            This is primarily to avoid large write spikes for users running a large number of client instances.
            ie, a jitter of 5s and flush duration 10s means flushes will happen every 10-15s.
            </summary>
            <param name="milliseconds">Jitter interval in milliseconds</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.RetryInterval(System.Int32)">
            <summary>
            Set the the time to wait before retry unsuccessful write (milliseconds).
            <para>
            The retry interval is used when the InfluxDB server does not specify "Retry-After" header.
            </para>
            <para>
            Retry-After: A non-negative decimal integer indicating the seconds to delay after the response is received.
            </para>
            </summary>
            <param name="milliseconds">the time to wait before retry unsuccessful write</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.MaxRetries(System.Int32)">
            <summary>
            The number of max retries when write fails.
            </summary>
            <param name="count">number of max retries</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.MaxRetryDelay(System.Int32)">
            <summary>
            The maximum delay between each retry attempt in milliseconds.
            </summary>
            <param name="milliseconds">maximum delay</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.ExponentialBase(System.Int32)">
            <summary>
            The base for the exponential retry delay.
            </summary>
            <param name="exponentialBase">exponential base</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.WriteScheduler(System.Reactive.Concurrency.IScheduler)">
            <summary>
            Set the scheduler which is used for write data points. It is useful for disabling batch writes or
            for tuning the performance. Default value is <see cref="P:System.Reactive.Concurrency.Scheduler.CurrentThread"/>
            </summary>
            <param name="writeScheduler"></param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.WriteOptions.Builder.Build">
            <summary>
             Build an instance of WriteOptions.
            </summary>
            <returns><see cref="T:InfluxDB.Client.WriteOptions"/></returns>
            <remarks>Deprecated - please use use object initializer <see cref="M:InfluxDB.Client.WriteOptions.#ctor"/></remarks>
        </member>
        <member name="P:InfluxDB.Client.Writes.WriteErrorEvent.Exception">
            <summary>
            The exception that was throw.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Writes.WriteErrorEvent.GetHeaders">
            <summary>
            Get headers from the nested exception.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Writes.WriteRetriableErrorEvent">
            <summary>
            The event is published when occurs a retriable write exception.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.WriteRetriableErrorEvent.Exception">
            <summary>
            The exception that was throw.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.WriteRetriableErrorEvent.RetryInterval">
            <summary>
            The time to wait before retry unsuccessful write (milliseconds)
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Writes.WriteRuntimeExceptionEvent">
            <summary>
            Published when occurs a runtime exception in background batch processing.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.WriteRuntimeExceptionEvent.Exception">
            <summary>
            The Runtime Exception that was throw.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.AbstractWriteEvent.Organization">
            <summary>
            The organization that was used for write data.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.AbstractWriteEvent.Bucket">
            <summary>
            The bucket that was used for write data.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.AbstractWriteEvent.Precision">
            <summary>
            The Precision that was used for write data.
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.AbstractWriteEvent.LineProtocol">
            <summary>
            The Data that was written.
            </summary>
        </member>
        <member name="T:InfluxDB.Client.Writes.PointData">
            <summary>
            Point defines the values that will be written to the database.
            <a href="http://bit.ly/influxdata-point">See Go Implementation</a>.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Measurement(System.String)">
            <summary>
            Create a new Point withe specified a measurement name.
            </summary>
            <param name="measurementName">the measurement name</param>
            <returns>the new Point</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Tag(System.String,System.String)">
            <summary>
            Adds or replaces a tag value for a point.
            </summary>
            <param name="name">the tag name</param>
            <param name="value">the tag value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.Byte)">
            <summary>
            Add a field with a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.Single)">
            <summary>
            Add a field with a <see cref="T:System.Single"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.Double)">
            <summary>
            Add a field with a <see cref="T:System.Double"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.Decimal)">
            <summary>
            Add a field with a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.Int64)">
            <summary>
            Add a field with a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.UInt64)">
            <summary>
            Add a field with a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.UInt32)">
            <summary>
            Add a field with a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.String)">
            <summary>
            Add a field with a <see cref="T:System.String"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.Boolean)">
            <summary>
            Add a field with a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Field(System.String,System.Object)">
            <summary>
            Add a field with an <see cref="T:System.Object"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Timestamp(System.Int64,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Timestamp(System.TimeSpan,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Timestamp(System.DateTime,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:System.DateTime"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Timestamp(System.DateTimeOffset,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:System.DateTime"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.Timestamp(NodaTime.Instant,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:NodaTime.Instant"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.HasFields">
            <summary>
            Has point any fields?
            </summary>
            <returns>true, if the point contains any fields, false otherwise.</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Builder.ToPointData">
            <summary>
            The PointData
            </summary>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Measurement(System.String)">
            <summary>
            Create a new Point withe specified a measurement name.
            </summary>
            <param name="measurementName">the measurement name</param>
            <returns>the new Point</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Tag(System.String,System.String)">
            <summary>
            Adds or replaces a tag value for a point.
            </summary>
            <param name="name">the tag name</param>
            <param name="value">the tag value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.Byte)">
            <summary>
            Add a field with a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.Single)">
            <summary>
            Add a field with a <see cref="T:System.Single"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.Double)">
            <summary>
            Add a field with a <see cref="T:System.Double"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.Decimal)">
            <summary>
            Add a field with a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.Int64)">
            <summary>
            Add a field with a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.UInt64)">
            <summary>
            Add a field with a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.UInt32)">
            <summary>
            Add a field with a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.String)">
            <summary>
            Add a field with a <see cref="T:System.String"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.Boolean)">
            <summary>
            Add a field with a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Field(System.String,System.Object)">
            <summary>
            Add a field with an <see cref="T:System.Object"/> value.
            </summary>
            <param name="name">the field name</param>
            <param name="value">the field value</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Timestamp(System.Int64,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Timestamp(System.TimeSpan,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Timestamp(System.DateTime,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:System.DateTime"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Timestamp(System.DateTimeOffset,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:System.DateTime"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Timestamp(NodaTime.Instant,InfluxDB.Client.Api.Domain.WritePrecision)">
            <summary>
            Updates the timestamp for the point represented by <see cref="T:NodaTime.Instant"/>.
            </summary>
            <param name="timestamp">the timestamp</param>
            <param name="timeUnit">the timestamp precision</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.HasFields">
            <summary>
            Has point any fields?
            </summary>
            <returns>true, if the point contains any fields, false otherwise.</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.ToLineProtocol(InfluxDB.Client.Writes.PointSettings)">
            <summary>
            The Line Protocol
            </summary>
            <param name="pointSettings">with the default values</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.AppendTags(System.Text.StringBuilder,InfluxDB.Client.Writes.PointSettings)">
            <summary>
            Appends the tags.
            </summary>
            <param name="writer">The writer.</param>
            <param name="pointSettings">The point settings.</param>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.AppendFields(System.Text.StringBuilder)">
            <summary>
            Appends the fields.
            </summary>
            <param name="sb">The sb.</param>
            <returns></returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.AppendTime(System.Text.StringBuilder)">
            <summary>
            Appends the time.
            </summary>
            <param name="sb">The sb.</param>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.EscapeKey(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>
            Escapes the key.
            </summary>
            <param name="sb">The sb.</param>
            <param name="key">The key.</param>
            <param name="escapeEqual">Configure to escaping equal.</param>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.EscapeValue(System.Text.StringBuilder,System.String)">
            <summary>
            Escapes the value.
            </summary>
            <param name="sb">The sb.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.IsNotDefined(System.Object)">
            <summary>
            Determines whether [is not defined] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if [is not defined] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.Equals(InfluxDB.Client.Writes.PointData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.op_Equality(InfluxDB.Client.Writes.PointData,InfluxDB.Client.Writes.PointData)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointData.op_Inequality(InfluxDB.Client.Writes.PointData,InfluxDB.Client.Writes.PointData)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:InfluxDB.Client.Writes.PointSettings">
            <summary>
            The setting for store data point: default values, threshold, ...
            </summary>
        </member>
        <member name="P:InfluxDB.Client.Writes.PointSettings.DefaultTags">
            <summary>
            Default tags that will be use for writes by Point and POJO.
            </summary>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointSettings.AddDefaultTag(System.String,System.String)">
            <summary>
            Add default tag. 
            </summary>
            <param name="key">the tag name</param>
            <param name="expression">the tag value expression</param>
            <returns>this</returns>
        </member>
        <member name="M:InfluxDB.Client.Writes.PointSettings.GetDefaultTags">
            <summary>
            Get default tags with evaluated expressions.
            </summary>
            <returns>evaluated default tags</returns>
        </member>
    </members>
</doc>
